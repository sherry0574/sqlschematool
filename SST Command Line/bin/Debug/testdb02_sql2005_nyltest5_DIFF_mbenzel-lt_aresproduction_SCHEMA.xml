<DataBase_Schema>DiffData<Database><Name>Compare results for Source DB XML snapshot: c:\dev\nyl\TestDB02_sql2005_NYLTest5_SCHEMA.xml,
-- with Target DB XML snapshot: c:\dev\nyl\mbenzel-lt_AresProduction_SCHEMA.xml.
-- Results are the SQL changes necessary to match
-- the Target DB schema to the Source DB schema.</Name><Date>2/12/2009</Date><Time>1:21 PM</Time></Database><TABLE Action="Alter"><TABLE_NAME>tl_code</TABLE_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_FILEGROUP><TABLE_NAME>tl_code</TABLE_NAME><groupname>PRIMARY</groupname></TABLE_FILEGROUP><TABLE_REFERENCE /><TABLE_CONSTRAINTS /><TABLE_ORIG_CONSTRAINTS /><TABLE_ORIG_REFERENCE />
  <COLUMN>
    <Action>Alter</Action>
    <TABLE_NAME>tl_code</TABLE_NAME>
    <Column_Name>language_code</Column_Name>
    <Type>char</Type>
    <Base_Type>char</Base_Type>
    <Length>10</Length>
    <Prec>10</Prec>
    <Scale>0</Scale>
    <Seed>0</Seed>
    <Increment>0</Increment>
    <isNullable>0</isNullable>
    <isIdentity>0</isIdentity>
    <isComputed>0</isComputed>
    <Default_Orig_Name />
    <Default_Name />
    <Rule_Name />
    <Rule_Owner />
    <Rule_Orig_Name />
    <Rule_Orig_Owner />
    <Default_Owner />
    <Default_Value />
    <Default_Orig_Value>('en-us')</Default_Orig_Value>
    <NotforRepl>0</NotforRepl>
    <isRowGuidCol>0</isRowGuidCol>
    <ORIG_RowGuidCol>0</ORIG_RowGuidCol>
    <FullText>0</FullText>
    <AnsiPad>1</AnsiPad>
    <Collation>SQL_Latin1_General_CP1_CI_AS</Collation>
    <Calc_Text />
  </COLUMN>
<DropAdd_Indexes Action="ReAdd"><TABLE_NAME>tl_code</TABLE_NAME><index_name>pk_code_valuelist</index_name><index_description>clustered, unique, primary key located on PRIMARY</index_description><index_keys>language_code, code_type, code_id</index_keys></DropAdd_Indexes><TABLE_ORIG_CONSTRAINTS><TABLE_NAME>tl_code</TABLE_NAME><CONSTRAINT_OWNER>dbo</CONSTRAINT_OWNER><CONSTRAINT_NAME>DF__tl_code__languag__6D0D32F4</CONSTRAINT_NAME><COLUMN_NAME>language_code</COLUMN_NAME><CONSTRAINT_CLAUSE>('en-us')</CONSTRAINT_CLAUSE><CONSTRAINT_TYPE>D </CONSTRAINT_TYPE></TABLE_ORIG_CONSTRAINTS></TABLE><TABLE Action="Alter"><TABLE_NAME>tpa</TABLE_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_FILEGROUP><TABLE_NAME>tpa</TABLE_NAME><groupname>PRIMARY</groupname></TABLE_FILEGROUP><TABLE_REFERENCE /><TABLE_CONSTRAINTS /><TABLE_ORIG_CONSTRAINTS /><TABLE_ORIG_REFERENCE />
  <COLUMN>
    <Action>Alter</Action>
    <TABLE_NAME>tpa</TABLE_NAME>
    <Column_Name>tpa_short_name</Column_Name>
    <Type>char</Type>
    <Base_Type>char</Base_Type>
    <Length>10</Length>
    <Prec>10</Prec>
    <Scale>0</Scale>
    <Seed>0</Seed>
    <Increment>0</Increment>
    <isNullable>0</isNullable>
    <isIdentity>0</isIdentity>
    <isComputed>0</isComputed>
    <Default_Orig_Name />
    <Default_Name />
    <Rule_Name />
    <Rule_Owner />
    <Rule_Orig_Name />
    <Rule_Orig_Owner />
    <Default_Owner />
    <Default_Value />
    <Default_Orig_Value>('')</Default_Orig_Value>
    <NotforRepl>0</NotforRepl>
    <isRowGuidCol>0</isRowGuidCol>
    <ORIG_RowGuidCol>0</ORIG_RowGuidCol>
    <FullText>0</FullText>
    <AnsiPad>1</AnsiPad>
    <Collation>SQL_Latin1_General_CP1_CI_AS</Collation>
    <Calc_Text />
  </COLUMN>
<DropAdd_Indexes Action="ReAdd"><TABLE_NAME>tpa</TABLE_NAME><index_name>IX_tpa_acronym</index_name><index_description>nonclustered, unique located on PRIMARY</index_description><index_keys>tpa_short_name</index_keys></DropAdd_Indexes><TABLE_ORIG_CONSTRAINTS><TABLE_NAME>tpa</TABLE_NAME><CONSTRAINT_OWNER>dbo</CONSTRAINT_OWNER><CONSTRAINT_NAME>DF__tpa__tpa_short_n__76619304</CONSTRAINT_NAME><COLUMN_NAME>tpa_short_name</COLUMN_NAME><CONSTRAINT_CLAUSE>('')</CONSTRAINT_CLAUSE><CONSTRAINT_TYPE>D </CONSTRAINT_TYPE></TABLE_ORIG_CONSTRAINTS></TABLE><VIEW Action="Alter"><VIEW_NAME>agency_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-696667231</Check_Sum><CREATE_TEXT><VIEW_NAME>agency_proxy_view</VIEW_NAME><Text>create view [dbo].[agency_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_proxy_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_proxy_view</VIEW_NAME><Text>	person.*,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_proxy_view</VIEW_NAME><Text>	agency.agency_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_proxy_view</VIEW_NAME><Text>	agency.routing_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_proxy_view</VIEW_NAME><Text>	agency.update_date
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_proxy_view</VIEW_NAME><Text>	person,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_proxy_view</VIEW_NAME><Text>	agency
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_proxy_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_proxy_view</VIEW_NAME><Text>	person.person_id = agency.person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>agency_proxy_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>agency_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>396657519</Check_Sum><CREATE_TEXT><VIEW_NAME>agency_view</VIEW_NAME><Text>create view [dbo].[agency_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_view</VIEW_NAME><Text>policy_person.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_view</VIEW_NAME><Text>policy_person.policy_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_view</VIEW_NAME><Text>policy_person.role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_view</VIEW_NAME><Text>policy_person.sub_role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_view</VIEW_NAME><Text>agency.agency_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_view</VIEW_NAME><Text>agency.routing_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_view</VIEW_NAME><Text>agency.update_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_view</VIEW_NAME><Text>person.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_view</VIEW_NAME><Text>agency,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_view</VIEW_NAME><Text>person,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_view</VIEW_NAME><Text>policy_person
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_view</VIEW_NAME><Text>WHERE
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_view</VIEW_NAME><Text>policy_person.role_id = 'agency' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_view</VIEW_NAME><Text>policy_person.person_id = person.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agency_view</VIEW_NAME><Text>person.person_id = agency.person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>agency_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1609776435</Check_Sum><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>create view [dbo].[agent_policy_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	pa.agent_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	p.policy_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	p.team_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	p.policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	p.policy_status_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	p.policy_status_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	p.company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	p.priority,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	p.underwriter_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	(select login_id from aus_user where user_id = p.underwriter_id) as underwriter_login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	p.case_group_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	p.service_associate_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	(select login_id from aus_user where user_id = p.service_associate_id) as service_associate_login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	p.alternate_case_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	(select top 1 pc.plan_code_id from policy_coverage pc, coverage_person cp where pc.policy_coverage_id = cp.policy_coverage_id and cp.person_id = pp.person_id) as primary_plan_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	ppi.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	ppi.applicant_status as applicant_status_short,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	ppi.applicant_status_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	ppi.underwriting_amount as insured_underwriting_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	i.last_name as insured_last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	i.middle_name as insured_middle_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	i.first_name as insured_first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	i.tax_id as insured_tax_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	i.client_id as insured_client_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	ppi.primary_insured_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	p.receive_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	p.added_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	p.application_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	p.source_info,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	p.distributor_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	policy p,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	policy_person pp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	policy_person_insured ppi,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	policy_person_agent pa,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	policy_person ppa,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	person i
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	pa.policy_person_id = ppa.policy_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	ppa.policy_id = p.policy_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	p.policy_id = pp.policy_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	pp.policy_person_id = ppi.policy_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	pp.person_id = i.person_id and 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME><Text>	pa.agent_number is not null
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>agent_policy_proxy_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>agent_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>560504409</Check_Sum><CREATE_TEXT><VIEW_NAME>agent_proxy_view</VIEW_NAME><Text>create view [dbo].[agent_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_proxy_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_proxy_view</VIEW_NAME><Text>	person.*,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_proxy_view</VIEW_NAME><Text>	agent.agent_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_proxy_view</VIEW_NAME><Text>	agent.routing_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_proxy_view</VIEW_NAME><Text>	agent.company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_proxy_view</VIEW_NAME><Text>	agent.descriptor
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_proxy_view</VIEW_NAME><Text>	person,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_proxy_view</VIEW_NAME><Text>	agent
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_proxy_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_proxy_view</VIEW_NAME><Text>	person.person_id = agent.person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>agent_proxy_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>agent_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1022414859</Check_Sum><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>create view [dbo].[agent_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>person.*,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>agent.agent_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>agent.routing_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>agent.company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>policy_person_agent.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>policy_person_agent.agency_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>policy_person_agent.commission_split,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>policy_person_agent.commission_option,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>policy_person_agent.market_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>policy_person_agent.firm_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>policy_person_agent.level5_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>policy_person.policy_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>policy_person.role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>policy_person.sub_role_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>person,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>agent,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>policy_person_agent,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>policy_person
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>policy_person_agent.policy_person_id = policy_person.policy_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>(policy_person.role_id like 'agent%' or policy_person.role_id like 'Agent%') and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>policy_person.person_id = person.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>agent_view</VIEW_NAME><Text>policy_person.person_id = agent.person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>agent_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>application_info_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1256615464</Check_Sum><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>create view [dbo].[application_info_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>ri.create_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>ri.match_method,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>ri.status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>ri.vendor_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>ri.manual_or_electronic_entry,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>ri.expiration_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>ri.requirement_type_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>ri.requirement_request_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>ri.lifespan_days,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>ri.insured_requirement_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>ai.*,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>'' as last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>'' as middle_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>'' as first_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>requirement_information ri, insured_application_info ai
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>application_info_view</VIEW_NAME><Text>ri.requirement_information_id = ai.requirement_information_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>application_info_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1097465434</Check_Sum><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>
create view ares_access_rights_lob_view as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>	auv.user_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>	auv.login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>	auv.last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>	auv.first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>	asr.name as role,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>	auv.is_underwriter,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>	lob.line_of_business_code as lob_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>	lob.name as lob_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>	aul.authorization_limit
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>	aus_user_view auv,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>	aus_security_roles asr,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>	aus_user_limits aul,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>	line_of_business lob
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>	asr.role_id = auv.role_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>	aul.user_id = auv.user_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>	auv.user_id &gt; 0 and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>	lob.line_of_business_code = aul.line_of_business_code and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>	auv.is_active is not null and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME><Text>	auv.is_active &lt;&gt; 0
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>ares_access_rights_lob_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Add"><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>10607297</Check_Sum><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>
create view ares_access_rights_team_view as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>	auv.user_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>	auv.restrict_to_teams,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>	utv.auto_assign,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>	utv.team_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>	aus_user_view auv,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>	user_teams_view utv
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>	utv.user_id = auv.user_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>	auv.user_id &gt; 0 and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>	auv.is_active is not null and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>	auv.is_active &lt;&gt; 0
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>	auv.user_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>	auv.restrict_to_teams,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>	0 as auto_assign,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>	null as team_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>	aus_user_view auv
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>	auv.user_id not in (select user_id from user_teams_view) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>	auv.user_id &gt; 0 and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>	auv.is_active is not null and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME><Text>	auv.is_active &lt;&gt; 0
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>ares_access_rights_team_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>association_codes_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1211331897</Check_Sum><CREATE_TEXT><VIEW_NAME>association_codes_view</VIEW_NAME><Text>
create view association_codes_view as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_codes_view</VIEW_NAME><Text>select 'association' as code_type, association_code as code_id, name as code_value, cast(expiration_date as varchar(30)) as external_code, 1 as active_flag from association
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_codes_view</VIEW_NAME><Text>	where expiration_date &gt; CURRENT_TIMESTAMP or expiration_date is NULL
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_codes_view</VIEW_NAME><Text>select 'association' as code_type, association_code as code_id, rtrim(name) + ' (Inactive)' as code_value, cast(expiration_date as varchar(30)) as external_code, 0 as active_flag from association
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_codes_view</VIEW_NAME><Text>	where expiration_date &lt;= CURRENT_TIMESTAMP and expiration_date is not NULL
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>association_codes_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>association_plan_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1443283088</Check_Sum><CREATE_TEXT><VIEW_NAME>association_plan_proxy_view</VIEW_NAME><Text>create view [dbo].[association_plan_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_plan_proxy_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_plan_proxy_view</VIEW_NAME><Text>	ap.association_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_plan_proxy_view</VIEW_NAME><Text>	ap.plan_code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_plan_proxy_view</VIEW_NAME><Text>	tpa_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_plan_proxy_view</VIEW_NAME><Text>	g_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_plan_proxy_view</VIEW_NAME><Text>	pc.line_of_business_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_plan_proxy_view</VIEW_NAME><Text>	mortality_max,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_plan_proxy_view</VIEW_NAME><Text>	billing_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_plan_proxy_view</VIEW_NAME><Text>	expiration_date
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_plan_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_plan_proxy_view</VIEW_NAME><Text>	association_plan ap,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_plan_proxy_view</VIEW_NAME><Text>	tl_plan_code pc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_plan_proxy_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_plan_proxy_view</VIEW_NAME><Text>	pc.plan_code_id = ap.plan_code_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>association_plan_proxy_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>association_tpa_codes_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>432631565</Check_Sum><CREATE_TEXT><VIEW_NAME>association_tpa_codes_view</VIEW_NAME><Text>
create view association_tpa_codes_view as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_tpa_codes_view</VIEW_NAME><Text>select distinct 'association_' + ap.tpa_code as code_type, a.association_code as code_id, a.name as code_value, a.association_code as external_code, 1 as active_flag
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_tpa_codes_view</VIEW_NAME><Text>	from association a, association_plan ap where (a.expiration_date &gt; CURRENT_TIMESTAMP or a.expiration_date is NULL) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_tpa_codes_view</VIEW_NAME><Text>	a.association_code = ap.association_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_tpa_codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_tpa_codes_view</VIEW_NAME><Text>	select distinct 'association_' + ap.tpa_code as code_type, a.association_code as code_id, rtrim(a.name) + ' (Inactive)' as code_value, a.association_code as external_code, 0 as active_flag
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_tpa_codes_view</VIEW_NAME><Text>	from association a, association_plan ap where (a.expiration_date &lt;= CURRENT_TIMESTAMP and a.expiration_date is not NULL) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_tpa_codes_view</VIEW_NAME><Text>	a.association_code = ap.association_code
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>association_tpa_codes_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>aus_user_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>947516873</Check_Sum><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>create view [dbo].[aus_user_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	person.*,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.user_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.password,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.is_active,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.level_of_authority,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.is_underwriter,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.restrict_to_teams,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.is_service_associate,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.job_title,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.account_locked,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.account_locked_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.bad_login_attempt_count,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.last_bad_login_attempt_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.must_change_password,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.last_password_change_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.is_agent,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.agent_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.is_agency,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.agency_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.deleted,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.use_single_sign_on
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	person,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	aus_user au
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>aus_user_view</VIEW_NAME><Text>	au.person_id = person.person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>aus_user_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>automation_event_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1612502045</Check_Sum><CREATE_TEXT><VIEW_NAME>automation_event_view</VIEW_NAME><Text>create view [dbo].[automation_event_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>automation_event_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>automation_event_view</VIEW_NAME><Text>	*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>automation_event_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>automation_event_view</VIEW_NAME><Text>	aus_event
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>automation_event_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>automation_event_view</VIEW_NAME><Text>	aus_cmd &gt;= 1100 and aus_cmd &lt; 1200
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>automation_event_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Add"><VIEW_NAME>benefit_amount_operand_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>168873609</Check_Sum><CREATE_TEXT><VIEW_NAME>benefit_amount_operand_view</VIEW_NAME><Text>create view [dbo].[benefit_amount_operand_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_amount_operand_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_amount_operand_view</VIEW_NAME><Text>	'getBenefitAmount(' + rtrim(code_value) + ')' as name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_amount_operand_view</VIEW_NAME><Text>	'dec' as type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_amount_operand_view</VIEW_NAME><Text>	'Benefit ' + rtrim(code_value) + ' Amount' as display,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_amount_operand_view</VIEW_NAME><Text>	'The amount of the ' + rtrim(code_value) + ' Benefit on the coverage.'  as description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_amount_operand_view</VIEW_NAME><Text>	'' as value_list
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_amount_operand_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_amount_operand_view</VIEW_NAME><Text>	codes_view
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_amount_operand_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_amount_operand_view</VIEW_NAME><Text>	code_type = 'benefit_type' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_amount_operand_view</VIEW_NAME><Text>	language_code = 'en-us'
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>benefit_amount_operand_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Add"><VIEW_NAME>benefit_exists_operand_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>193977208</Check_Sum><CREATE_TEXT><VIEW_NAME>benefit_exists_operand_view</VIEW_NAME><Text>create view [dbo].[benefit_exists_operand_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_exists_operand_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_exists_operand_view</VIEW_NAME><Text>	'getBenefitExists(' + rtrim(code_value) + ')' as name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_exists_operand_view</VIEW_NAME><Text>	'bool' as type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_exists_operand_view</VIEW_NAME><Text>	'Benefit ' + rtrim(code_value) + ' Exists' as display,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_exists_operand_view</VIEW_NAME><Text>	'Determines if ' + rtrim(code_value) + ' Benefit exists on the coverage.'  as description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_exists_operand_view</VIEW_NAME><Text>	'Boolean' as value_list
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_exists_operand_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_exists_operand_view</VIEW_NAME><Text>	codes_view
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_exists_operand_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_exists_operand_view</VIEW_NAME><Text>	code_type = 'benefit_type' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_exists_operand_view</VIEW_NAME><Text>	language_code = 'en-us'
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>benefit_exists_operand_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1835627892</Check_Sum><CREATE_TEXT><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME><Text>create view [dbo].[benefit_party_dob_operand_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME><Text>	'getBenefitMaxPartyDOB(' + rtrim(name) + ')' as name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME><Text>	'date' as type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME><Text>	'Benefit ' + rtrim(name) + ' Max Party DOB' as display,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME><Text>	'The birthdate of the youngest party on the ' + rtrim(name) + ' Benefit.'  as description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME><Text>	'' as value_list
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME><Text>	tl_benefit_type
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME><Text>	'getBenefitMinPartyDOB(' + rtrim(name) + ')' as name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME><Text>	'date' as type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME><Text>	'Benefit ' + rtrim(name) + ' Min Party DOB' as display,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME><Text>	'The birthdate of the oldest party on the ' + rtrim(name) + ' Benefit.'  as description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME><Text>	'' as value_list
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME><Text>	tl_benefit_type
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>benefit_party_dob_operand_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>case_event_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-722458996</Check_Sum><CREATE_TEXT><VIEW_NAME>case_event_view</VIEW_NAME><Text>create view [dbo].[case_event_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>case_event_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>case_event_view</VIEW_NAME><Text>	*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>case_event_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>case_event_view</VIEW_NAME><Text>	aus_event
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>case_event_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>case_event_view</VIEW_NAME><Text>	aus_cmd &gt;= 100 and aus_cmd &lt; 1000
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>case_event_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>caseone_req_event_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-2081293932</Check_Sum><CREATE_TEXT><VIEW_NAME>caseone_req_event_view</VIEW_NAME><Text>
create view caseone_req_event_view as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>caseone_req_event_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>caseone_req_event_view</VIEW_NAME><Text>	*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>caseone_req_event_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>caseone_req_event_view</VIEW_NAME><Text>	aus_event
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>caseone_req_event_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>caseone_req_event_view</VIEW_NAME><Text>	aus_cmd &gt;= 1200 and aus_cmd &lt; 1300
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>caseone_req_event_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>codes_view2</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-706015081</Check_Sum><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>-- create codes_view2 with new union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>CREATE VIEW [dbo].[codes_view2] AS
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'ppo_trust_state_' + lower(rtrim(t.company_code)) + '_' + lower(rtrim(pa.country_state_id)) as code_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>cast(p.person_id as char(30)) as code_id, p.last_name as code_value, cast(c.expiration_date as char(30)) as external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>from company c, person p, person_address pa, party_relation pr, company t where p.person_id = c.person_id and p.class_type = 'PPO' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>pa.person_id = p.person_id and pr.parent_id = p.person_id and t.person_id = pr.person_id and c.expiration_date = (select min(expiration_date)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>from company, person_address where company_code = c.company_code and company.person_id = person_address.person_id and person_address.country_state_id = pa.country_state_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>and expiration_date &gt; CURRENT_TIMESTAMP)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'trust_state_' + lower(rtrim(c.company_code)) as code_type, pa.country_state_id as code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>(select state_name from tl_country_state where country_state_id = pa.country_state_id) as code_value, '' as external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>from company c, person p, person_address pa, party_relation pr,company ppo where p.person_id = c.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>p.class_type = 'Trust' and pr.person_id = p.person_id and ppo.person_id = pr.parent_id and pa.person_id = ppo.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>ppo.expiration_date &gt; CURRENT_TIMESTAMP
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>select distinct 'en-us' as language_code, ('plan_gnum_' + SUBSTRING(ap.g_number,1,6) + '_' + SUBSTRING(ap.g_number,8,4)  + '_' + SUBSTRING(ap.g_number,13,4)) as code_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>ap.plan_code_id as code_id, pc.description as code_value, pc.line_of_business_code as external_code from association_plan ap, tl_plan_code pc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>where len(ap.g_number) &gt;= 16 and ap.plan_code_id = pc.plan_code_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>UNION
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>SELECT DISTINCT
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>'en-us' AS language_code, 'case_request_nbr' AS code_type, plan_code_id AS code_id, code_prefix AS code_value, '' AS external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>FROM     tl_plan_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>UNION
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>select 'en-us' as language_code, 'agent_number' as code_type, agent.agent_number as code_id, rtrim(agent.agent_number) as code_value, '' as external_code from agent, person where person.person_id = agent.person_id and person.last_name is null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>select 'en-us' as language_code, 'agent_number' as code_type, agent.agent_number as code_id, rtrim(agent.agent_number) + ' - ' + rtrim(person.last_name) as code_value, '' as external_code from agent, person where person.person_id = agent.person_id and per</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view2</VIEW_NAME><Text>son.last_name is not null
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>codes_view2</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>company_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-468840118</Check_Sum><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text>create view [dbo].[company_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text>	person.*,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text>	company.company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text>	company.allow_aus_approval_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text>	company.correspondence_directory,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text>	company.full_time_employee_count,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text>	company.percent_eligible_employees,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text>	company.percent_eligible_dependants,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text>	company.current_cobra_indicator,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text>	company.expiration_date
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text>	person,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text>	company
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text>	company.person_id = person.person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>company_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>correspondence_event_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1292233391</Check_Sum><CREATE_TEXT><VIEW_NAME>correspondence_event_view</VIEW_NAME><Text>create view [dbo].[correspondence_event_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>correspondence_event_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>correspondence_event_view</VIEW_NAME><Text>	*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>correspondence_event_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>correspondence_event_view</VIEW_NAME><Text>	aus_event
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>correspondence_event_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>correspondence_event_view</VIEW_NAME><Text>	aus_cmd &gt;= 1000 and aus_cmd &lt; 1100
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>correspondence_event_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>coverage_benefits_party_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1805529907</Check_Sum><CREATE_TEXT><VIEW_NAME>coverage_benefits_party_view</VIEW_NAME><Text>create view [dbo].[coverage_benefits_party_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_benefits_party_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_benefits_party_view</VIEW_NAME><Text>	bp.benefit_id ,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_benefits_party_view</VIEW_NAME><Text>	bp.policy_coverage_id ,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_benefits_party_view</VIEW_NAME><Text>	bp.height_inches,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_benefits_party_view</VIEW_NAME><Text>	bp.weight_pounds,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_benefits_party_view</VIEW_NAME><Text>	p.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_benefits_party_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_benefits_party_view</VIEW_NAME><Text>	coverage_benefits_party bp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_benefits_party_view</VIEW_NAME><Text>	person p
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_benefits_party_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_benefits_party_view</VIEW_NAME><Text>	bp.person_id = p.person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>coverage_benefits_party_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>coverage_subaccount_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-646482838</Check_Sum><CREATE_TEXT><VIEW_NAME>coverage_subaccount_view</VIEW_NAME><Text>create view [dbo].[coverage_subaccount_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_subaccount_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_subaccount_view</VIEW_NAME><Text>	coverage_subaccounts.policy_coverage_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_subaccount_view</VIEW_NAME><Text>	tl_subaccount.*,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_subaccount_view</VIEW_NAME><Text>	coverage_subaccounts.percentage
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_subaccount_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_subaccount_view</VIEW_NAME><Text>	coverage_subaccounts,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_subaccount_view</VIEW_NAME><Text>	tl_subaccount
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_subaccount_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>coverage_subaccount_view</VIEW_NAME><Text>	tl_subaccount.subaccount_code = coverage_subaccounts.subaccount_code
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>coverage_subaccount_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>customer_lab_report_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1401124849</Check_Sum><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>Create VIEW [dbo].[customer_lab_report_view]
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>AS
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>select 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>  r.lab_id_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>  r.requirement_information_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>  r.horl_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>  c.[description],
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>  r.result_value,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>  ISNULL((case when h.sex = 'm' then low_male else low_female end),'') as [low],
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>  ISNULL((case when h.sex = 'm' then high_male else high_female end),'') as [high],
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>  (case when 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	(case when h.sex = 'm' then low_male else low_female end) = 'negative' AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	r.result_value &lt;&gt; 'NEG' AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>        ((case when h.sex = 'm' then high_male else high_female end) IS NULL OR
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	len(ltrim(rtrim((case when h.sex = 'm' then high_male else high_female end)))) = 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>   then r.result_value else 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>        case when
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	   ISNUMERIC(r.result_value)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	   ISNUMERIC(case when h.sex = 'm' then low_male else low_female end)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	   ISNUMERIC(case when h.sex = 'm' then high_male else high_female end)=1 AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	   CONVERT(decimal(10,5), r.result_value) NOT BETWEEN 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	   CONVERT(decimal(10,5), (case when h.sex = 'm' then low_male else low_female end)) AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	   CONVERT(decimal(10,5), (case when h.sex = 'm' then high_male else high_female end))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>        then r.result_value else 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	   case when
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		r.result_value = 'NVG' OR (r.result_value &lt;&gt; 'NEG' AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		(case when h.sex = 'm' then low_male else low_female end) IS NULL AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		(case when h.sex = 'm' then high_male else high_female end) IS NULL)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	   then 'NVG' else 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>              case when
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	         NOT ISNUMERIC(r.result_value)=1 AND r.result_value &lt;&gt; 'NEG' AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	         NOT ISNUMERIC(case when h.sex = 'm' then low_male else low_female end)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	         (case when h.sex = 'm' then low_male else LOW_female end) = 'negative' AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	         ISNUMERIC(case when h.sex = 'm' then high_male else high_female end)=1 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	      then r.result_value else 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	         case when
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		    ISNUMERIC(r.result_value)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		    NOT ISNUMERIC(case when h.sex = 'm' then low_male else low_female end)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	      	    (case when h.sex = 'm' then low_male else LOW_female end) = 'negative' AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		    ISNUMERIC(case when h.sex = 'm' then high_male else high_female end)=1 AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		    CONVERT(decimal(10,5), r.result_value) NOT BETWEEN 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		    0.0 AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		    CONVERT(decimal(10,5), (case when h.sex = 'm' then high_male else high_female end))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	         then r.result_value else
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		    case when r.result_value &lt;&gt; 'NEG' AND r.result_value &lt;&gt; 'POS' AND NOT ISNUMERIC(r.result_value)=1
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		    then 'N/A' else '' end
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		 end
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	      end
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	   end
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	end
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>   end) as [abnormal],
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>  (case when 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	(case when h.sex = 'm' then low_male else LOW_female end) = 'negative' AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	r.result_value = 'NEG' AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>        ((case when h.sex = 'm' then high_male else high_female end) IS NULL OR
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	len(ltrim(rtrim((case when h.sex = 'm' then high_male else high_female end)))) = 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>   then r.result_value else 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>        case when
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	   ISNUMERIC(r.result_value)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	   ISNUMERIC(case when h.sex = 'm' then low_male else low_female end)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	   ISNUMERIC(case when h.sex = 'm' then high_male else high_female end)=1 AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	   CONVERT(decimal(10,5), r.result_value) BETWEEN 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	   CONVERT(decimal(10,5), (case when h.sex = 'm' then low_male else low_female end)) AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	   CONVERT(decimal(10,5), (case when h.sex = 'm' then high_male else high_female end))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>        then r.result_value else 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>           case when
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	      NOT ISNUMERIC(r.result_value)=1 AND r.result_value = 'NEG' AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	      NOT ISNUMERIC(case when h.sex = 'm' then low_male else low_female end)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	      (case when h.sex = 'm' then low_male else LOW_female end) = 'negative' AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	      ISNUMERIC(case when h.sex = 'm' then high_male else high_female end)=1 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	   then r.result_value else 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	        case when
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		   ISNUMERIC(r.result_value)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		   NOT ISNUMERIC(case when h.sex = 'm' then low_male else low_female end)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	      	   (case when h.sex = 'm' then low_male else LOW_female end) = 'negative' AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		   ISNUMERIC(case when h.sex = 'm' then high_male else high_female end)=1 AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		   CONVERT(decimal(10,5), r.result_value) BETWEEN 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		   0.0 AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		   CONVERT(decimal(10,5), (case when h.sex = 'm' then high_male else high_female end))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	        then r.result_value
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>			else		
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>			case when
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>			r.result_value = 'NEG' AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>			(case when h.sex = 'm' then low_male else low_female end) IS NULL  AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>			(case when h.sex = 'm' then high_male else high_female end) IS NULL
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>			then r.result_Value else ''
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>			 end
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		  end
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>       end
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>	end
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>  end) as [normal],
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>  ISNULL(r.range_text, '') AS range_text
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>from dbo.lab_result as r, dbo.lab_header as h, dbo.tl_ansi_code as c
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>where 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>  r.lab_id_number = h.lab_id_number and 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>  r.requirement_information_id = h.requirement_information_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>  c.horl_code = r.horl_code
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>customer_lab_report_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>data_mart_address</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1204504584</Check_Sum><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>create view data_mart_address as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>select distinct
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	p.person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select pa.city from person_address pa
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'RESIDENCE')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id) as residence_city,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select pa.postal_code from person_address pa
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'RESIDENCE')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id) as residence_postal_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select pa.address_line1 from person_address pa
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'RESIDENCE')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id) as residence_address_line1,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select pa.address_line2 from person_address pa
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'RESIDENCE')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id) as residence_address_line2,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select pa.address_line3 from person_address pa
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'RESIDENCE')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id) as residence_address_line3,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select pa.country_id from person_address pa
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'RESIDENCE')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id) as residence_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select cs.state_name from person_address pa, tl_country_state cs
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'RESIDENCE')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and cs.country_state_id = pa.country_state_id) as residence_state_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select cs.state_code from person_address pa, tl_country_state cs
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'RESIDENCE')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and cs.country_state_id = pa.country_state_id) as residence_state_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select c.country_name from person_address pa, tl_country c
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'RESIDENCE')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and c.country_id = pa.country_id) as residence_country_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select pa.city from person_address pa
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'BUSINESS')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id) as business_city,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select pa.postal_code from person_address pa
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'BUSINESS')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id) as business_postal_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select pa.address_line1 from person_address pa
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'BUSINESS')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id) as business_address_line1,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select pa.address_line2 from person_address pa
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'BUSINESS')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id) as business_address_line2,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select pa.address_line3 from person_address pa
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'BUSINESS')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id) as business_address_line3,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select pa.country_id from person_address pa
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'BUSINESS')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id) as business_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select cs.state_name from person_address pa, tl_country_state cs
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'BUSINESS')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and cs.country_state_id = pa.country_state_id) as business_state_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select cs.state_code from person_address pa, tl_country_state cs
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'BUSINESS')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and cs.country_state_id = pa.country_state_id) as business_state_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select c.country_name from person_address pa, tl_country c
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'BUSINESS')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and c.country_id = pa.country_id) as business_country_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select pa.city from person_address pa
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'BILLING')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id) as billing_city,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select pa.postal_code from person_address pa
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'BILLING')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id) as billing_postal_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select pa.address_line1 from person_address pa
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'BILLING')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id) as billing_address_line1,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select pa.address_line2 from person_address pa
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'BILLING')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id) as billing_address_line2,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select pa.address_line3 from person_address pa
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'BILLING')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id) as billing_address_line3,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select pa.country_id from person_address pa
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'BILLING')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id) as billing_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select cs.state_name from person_address pa, tl_country_state cs
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'BILLING')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and cs.country_state_id = pa.country_state_id) as billing_state_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select cs.state_code from person_address pa, tl_country_state cs
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'BILLING')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and cs.country_state_id = pa.country_state_id) as billing_state_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	(select c.country_name from person_address pa, tl_country c
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 where (pa.address_type_code = 'BILLING')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and pa.person_id = p.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	 and c.country_id = pa.country_id) as billing_country_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_address</VIEW_NAME><Text>	person p
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>data_mart_address</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>data_mart_case_log</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>2126175191</Check_Sum><CREATE_TEXT><VIEW_NAME>data_mart_case_log</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_case_log</VIEW_NAME><Text>create view data_mart_case_log as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_case_log</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_case_log</VIEW_NAME><Text>	policy_log_id as case_log_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_case_log</VIEW_NAME><Text>	policy_id as case_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_case_log</VIEW_NAME><Text>	log_text,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_case_log</VIEW_NAME><Text>	user_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_case_log</VIEW_NAME><Text>	log_date
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_case_log</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_case_log</VIEW_NAME><Text>	policy_log
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>data_mart_case_log</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Add"><VIEW_NAME>data_mart_codes</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>405860906</Check_Sum><CREATE_TEXT><VIEW_NAME>data_mart_codes</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_codes</VIEW_NAME><Text>create view data_mart_codes as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_codes</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_codes</VIEW_NAME><Text>	*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_codes</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_codes</VIEW_NAME><Text>	codes_view
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>data_mart_codes</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>data_mart_impairment</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>874664469</Check_Sum><CREATE_TEXT><VIEW_NAME>data_mart_impairment</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_impairment</VIEW_NAME><Text>create view data_mart_impairment as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_impairment</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_impairment</VIEW_NAME><Text>	coverage_person_impairment_id as impairment_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_impairment</VIEW_NAME><Text>	coverage_person_id as coverage_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_impairment</VIEW_NAME><Text>	impairment_restriction_code as impairment_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_impairment</VIEW_NAME><Text>	impairment_text
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_impairment</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_impairment</VIEW_NAME><Text>	coverage_person_impairment
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>data_mart_impairment</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>data_mart_phone</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-292904112</Check_Sum><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>create view data_mart_phone as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>select distinct
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	p.person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	(select ph.country_calling_code from person_phone ph
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 where ph.phone_type_code = 'HOME'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 and ph.person_id = p.person_id) as home_phone_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	(select ph.area_code from person_phone ph
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 where ph.phone_type_code = 'HOME'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 and ph.person_id = p.person_id) as home_phone_area_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	(select ph.prefix from person_phone ph
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 where ph.phone_type_code = 'HOME'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 and ph.person_id = p.person_id) as home_phone_prefix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	(select ph.suffix from person_phone ph
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 where ph.phone_type_code = 'HOME'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 and ph.person_id = p.person_id) as home_phone_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	(select ph.extension from person_phone ph
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 where ph.phone_type_code = 'HOME'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 and ph.person_id = p.person_id) as home_phone_extension,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	(select ph.pin from person_phone ph
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 where ph.phone_type_code = 'HOME'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 and ph.person_id = p.person_id) as home_phone_pin,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	(select ph.country_calling_code from person_phone ph
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 where ph.phone_type_code = 'WORK'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 and ph.person_id = p.person_id) as work_phone_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	(select ph.area_code from person_phone ph
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 where ph.phone_type_code = 'WORK'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 and ph.person_id = p.person_id) as work_phone_area_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	(select ph.prefix from person_phone ph
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 where ph.phone_type_code = 'WORK'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 and ph.person_id = p.person_id) as work_phone_prefix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	(select ph.suffix from person_phone ph
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 where ph.phone_type_code = 'WORK'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 and ph.person_id = p.person_id) as work_phone_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	(select ph.extension from person_phone ph
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 where ph.phone_type_code = 'WORK'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 and ph.person_id = p.person_id) as work_phone_extension,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	(select ph.pin from person_phone ph
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 where ph.phone_type_code = 'WORK'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 and ph.person_id = p.person_id) as work_phone_pin,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	(select ph.country_calling_code from person_phone ph
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 where ph.phone_type_code = 'FAX'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 and ph.person_id = p.person_id) as fax_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	(select ph.area_code from person_phone ph
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 where ph.phone_type_code = 'FAX'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 and ph.person_id = p.person_id) as fax_area_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	(select ph.prefix from person_phone ph
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 where ph.phone_type_code = 'FAX'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 and ph.person_id = p.person_id) as fax_prefix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	(select ph.suffix from person_phone ph
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 where ph.phone_type_code = 'FAX'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 and ph.person_id = p.person_id) as fax_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	(select ph.extension from person_phone ph
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 where ph.phone_type_code = 'FAX'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 and ph.person_id = p.person_id) as fax_extension,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	(select ph.pin from person_phone ph
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 where ph.phone_type_code = 'FAX'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	 and ph.person_id = p.person_id) as fax_pin
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_phone</VIEW_NAME><Text>	person p
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>data_mart_phone</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>669859944</Check_Sum><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>create view [dbo].[diary_activity_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	n.author as user_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	(select login_id from aus_user where user_id = n.author) as user_login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	n.diary_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	p.policy_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	p.policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	i.title as insured_title,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	i.last_name as insured_last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	i.middle_name as insured_middle_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	i.first_name as insured_first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	i.suffix as insured_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	n.topic,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	p.team_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	policy p,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	policy_person pp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	person i,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	notes n
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	n.diary_date is not NULL and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	(n.note_type='Req' or n.note_type='Refer' or n.note_type='Review') and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	p.policy_id = pp.policy_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	pp.person_id = i.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME><Text>	pp.policy_person_id = n.policy_person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>diary_activity_proxy_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>evidence_status_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1739762361</Check_Sum><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>create view [dbo].[evidence_status_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	ri.requirement_information_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	ri.create_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	ri.match_method,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	ri.status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	ri.vendor_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	ri.manual_or_electronic_entry,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	ri.expiration_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	ri.added_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	ri.requirement_type_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	ri.requirement_request_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	ri.lifespan_days,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	es.evidence_status_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	es.insured_requirement_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	es.status_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	es.code_source,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	es.code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	es.message_text,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	es.status_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	'' as last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	'' as middle_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	'' as first_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	requirement_information ri,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	evidence_status es
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>evidence_status_view</VIEW_NAME><Text>	ri.requirement_information_id = es.requirement_information_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>evidence_status_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>form_data_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1538312913</Check_Sum><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>create view [dbo].[form_data_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.requirement_information_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	0 as team_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.form_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.case_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.middle_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.title,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.birthdate,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.sex,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.tax_id_no,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.added_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	u.last_name as user_last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	u.first_name as user_first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.updated_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	ri.create_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	ri.expiration_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	ri.requirement_type_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	requirement_information ri,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	form_instance fi,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	aus_user au,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	person u
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.requirement_information_id = ri.requirement_information_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.added_by = au.user_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	au.person_id = u.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>union select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.requirement_information_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	tu.team_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.form_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.case_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.middle_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.title,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.birthdate,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.sex,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.tax_id_no,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.added_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	u.last_name as user_last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	u.first_name as user_first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.updated_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	ri.create_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	ri.expiration_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	ri.requirement_type_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	requirement_information ri,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	form_instance fi,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	aus_user au,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	person u,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	tr_user_team tu
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.requirement_information_id = ri.requirement_information_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	fi.added_by = au.user_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	au.person_id = u.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_proxy_view</VIEW_NAME><Text>	tu.user_id = fi.added_by
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>form_data_proxy_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>form_data_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-684140532</Check_Sum><CREATE_TEXT><VIEW_NAME>form_data_view</VIEW_NAME><Text>create view [dbo].[form_data_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_view</VIEW_NAME><Text>	fi.*,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_view</VIEW_NAME><Text>	ri.create_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_view</VIEW_NAME><Text>	ri.match_method,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_view</VIEW_NAME><Text>	ri.status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_view</VIEW_NAME><Text>	ri.vendor_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_view</VIEW_NAME><Text>	ri.manual_or_electronic_entry,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_view</VIEW_NAME><Text>	ri.expiration_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_view</VIEW_NAME><Text>	ri.requirement_type_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_view</VIEW_NAME><Text>	ri.requirement_request_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_view</VIEW_NAME><Text>	ri.lifespan_days,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_view</VIEW_NAME><Text>	ri.insured_requirement_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_view</VIEW_NAME><Text>	requirement_information ri,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_view</VIEW_NAME><Text>	form_instance fi
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_data_view</VIEW_NAME><Text>	fi.requirement_information_id = ri.requirement_information_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>form_data_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>form_question_cmt_operand_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-320544028</Check_Sum><CREATE_TEXT><VIEW_NAME>form_question_cmt_operand_view</VIEW_NAME><Text>create view [dbo].[form_question_cmt_operand_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_cmt_operand_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_cmt_operand_view</VIEW_NAME><Text>	'getInsured.getFormQuestionComments(Form' + rtrim(form_code) + 'Question' + rtrim(question_label) + ')' as name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_cmt_operand_view</VIEW_NAME><Text>	'str' as type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_cmt_operand_view</VIEW_NAME><Text>	'Form ' + rtrim(form_code) + ' Question ' + rtrim(question_label) + ' (Comments)' as display,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_cmt_operand_view</VIEW_NAME><Text>	'Comment for Question ' + rtrim(question_label) + ': ' + rtrim(question_text) as description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_cmt_operand_view</VIEW_NAME><Text>	'' as value_list
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_cmt_operand_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_cmt_operand_view</VIEW_NAME><Text>	form_question
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>form_question_cmt_operand_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>form_question_operand_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1443203319</Check_Sum><CREATE_TEXT><VIEW_NAME>form_question_operand_view</VIEW_NAME><Text>create view [dbo].[form_question_operand_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_operand_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_operand_view</VIEW_NAME><Text>	'getInsured.getFormQuestionValue(Form' + rtrim(form_code) + 'Question' + rtrim(question_label) + ')' as name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_operand_view</VIEW_NAME><Text>	'str' as type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_operand_view</VIEW_NAME><Text>	'Form ' + rtrim(form_code) + ' Question ' + rtrim(question_label) as display,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_operand_view</VIEW_NAME><Text>	'Question ' + rtrim(question_label) + ': ' + rtrim(question_text) as description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_operand_view</VIEW_NAME><Text>	'Answer Set ' + rtrim(answer_set_name) as value_list
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_operand_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_operand_view</VIEW_NAME><Text>	form_question
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>form_question_operand_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>form_question_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-658188752</Check_Sum><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>create view [dbo].[form_question_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	grp.form_question_group_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	grp.form_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	grp.form_section_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	grp.display_sequence,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	grp.group_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	q.question_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	q.sequence_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	q.question_label,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	q.question_text,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	q.question_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	q.data_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	q.answer_set_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	q.min_size,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	q.max_size,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	q.external_question_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	q.alt_question_text
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	form_question_group grp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	form_question q
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	grp.form_question_group_id = q.question_group_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	grp.form_code = q.form_code and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>form_question_proxy_view</VIEW_NAME><Text>	grp.form_section_id = q.form_section_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>form_question_proxy_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>ins_open_post_issue_req_count</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1627879291</Check_Sum><CREATE_TEXT><VIEW_NAME>ins_open_post_issue_req_count</VIEW_NAME><Text>create view [dbo].[ins_open_post_issue_req_count] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ins_open_post_issue_req_count</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ins_open_post_issue_req_count</VIEW_NAME><Text>	ir.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ins_open_post_issue_req_count</VIEW_NAME><Text>	count(ir.insured_requirement_id) as open_pi_req
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ins_open_post_issue_req_count</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ins_open_post_issue_req_count</VIEW_NAME><Text>	insured_requirement ir,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ins_open_post_issue_req_count</VIEW_NAME><Text>	tl_requirement t
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ins_open_post_issue_req_count</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ins_open_post_issue_req_count</VIEW_NAME><Text>	(ir.closed_disposition is null or ir.closed_disposition in ('O', 'OR', 'H', 'R')) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ins_open_post_issue_req_count</VIEW_NAME><Text>	ir.requirement_code = t.requirement_code and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ins_open_post_issue_req_count</VIEW_NAME><Text>	t.requirement_category = 0
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ins_open_post_issue_req_count</VIEW_NAME><Text>group by
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ins_open_post_issue_req_count</VIEW_NAME><Text>	ir.policy_person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>ins_open_post_issue_req_count</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>insured</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1514953092</Check_Sum><CREATE_TEXT><VIEW_NAME>insured</VIEW_NAME><Text>create view [dbo].[insured] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured</VIEW_NAME><Text>policy_person.policy_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured</VIEW_NAME><Text>person.*,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured</VIEW_NAME><Text>policy_person_insured.*,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured</VIEW_NAME><Text>policy_person.role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured</VIEW_NAME><Text>policy_person.sub_role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured</VIEW_NAME><Text>policy_person.relationship_to_insured
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured</VIEW_NAME><Text>person, policy_person, policy_person_insured
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured</VIEW_NAME><Text>policy_person_insured.policy_person_id = policy_person.policy_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured</VIEW_NAME><Text>policy_person.role_id = 'insured' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured</VIEW_NAME><Text>policy_person.person_id = person.person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>insured</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>insured_cov_beneficiary_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1081808970</Check_Sum><CREATE_TEXT><VIEW_NAME>insured_cov_beneficiary_view</VIEW_NAME><Text>create view [dbo].[insured_cov_beneficiary_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_cov_beneficiary_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_cov_beneficiary_view</VIEW_NAME><Text>	coverage_person.policy_coverage_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_cov_beneficiary_view</VIEW_NAME><Text>	coverage_person.role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_cov_beneficiary_view</VIEW_NAME><Text>	coverage_person.relationship_to_insured_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_cov_beneficiary_view</VIEW_NAME><Text>	coverage_person_beneficiary.*,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_cov_beneficiary_view</VIEW_NAME><Text>	person.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_cov_beneficiary_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_cov_beneficiary_view</VIEW_NAME><Text>	coverage_person_beneficiary,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_cov_beneficiary_view</VIEW_NAME><Text>	coverage_person,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_cov_beneficiary_view</VIEW_NAME><Text>	person
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_cov_beneficiary_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_cov_beneficiary_view</VIEW_NAME><Text>	(coverage_person.role_id = 'primarybeneficiary' or
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_cov_beneficiary_view</VIEW_NAME><Text>	coverage_person.role_id = 'contigbeneficiary') and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_cov_beneficiary_view</VIEW_NAME><Text>	person.person_id = coverage_person.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_cov_beneficiary_view</VIEW_NAME><Text>	coverage_person_beneficiary.coverage_person_id = coverage_person.coverage_person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>insured_cov_beneficiary_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>insured_coverages_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>2062301001</Check_Sum><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>create view [dbo].[insured_coverages_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>pc.policy_coverage_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>pc.policy_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>pc.plan_code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>pc.death_benefit_option_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>pc.purpose_of_coverage_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>pc.coverage_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>pc.indicator_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>pc.amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>pc.premium_mode,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>pc.investment_objective,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>pc.pref_date_of_withdrawl,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>pc.planned_premium,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>pc.initial_planned_premium,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>pc.equivalent_age,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>pc.can_take_final_action_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>pc.dividend_option,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>pc.approved_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>pc.benefit_amount_basis,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>pc.modal_premium_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>cp.person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>cp.role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>cp.relationship_to_insured_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>cpi.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>policy_coverage pc,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>coverage_person cp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>coverage_person_insured cpi
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>cpi.coverage_person_id = cp.coverage_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>insured_coverages_view</VIEW_NAME><Text>cp.policy_coverage_id = pc.policy_coverage_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>insured_coverages_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>lab_comment_operand_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-2131235945</Check_Sum><CREATE_TEXT><VIEW_NAME>lab_comment_operand_view</VIEW_NAME><Text>create view lab_comment_operand_view as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_comment_operand_view</VIEW_NAME><Text>SELECT   DISTINCT 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_comment_operand_view</VIEW_NAME><Text>			   'getInsured.getLabCommentsById('+  RTRIM(remark_id) +  ')' AS name, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_comment_operand_view</VIEW_NAME><Text>               'str' AS type, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_comment_operand_view</VIEW_NAME><Text>               'Lab Comment:' + RTRIM(remark_id) AS display, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_comment_operand_view</VIEW_NAME><Text>               'Lab Comment Code:' + RTRIM(remark_id) AS description, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_comment_operand_view</VIEW_NAME><Text>               '' AS value_list
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_comment_operand_view</VIEW_NAME><Text>FROM     dbo.lab_comment
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_comment_operand_view</VIEW_NAME><Text /></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>lab_comment_operand_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>lab_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-121621338</Check_Sum><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>create view [dbo].[lab_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>	ev.requirement_information_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>	ev.create_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>	ev.expiration_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>	ev.insured_requirement_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>	lab.lab_id_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>	lab.lab_type_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>	lab.drawn_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>	lab.test_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>	lab.last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>	lab.first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>	lab.middle_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>	lab.ssn,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>	lab.birth_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>	lab.sex,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>	lab.lab_receive_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>	lab.company_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>	lab_header lab, requirement_information ev
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_proxy_view</VIEW_NAME><Text>	lab.requirement_information_id = ev.requirement_information_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>lab_proxy_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>lab_result_operand_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1331563266</Check_Sum><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>create view [dbo].[lab_result_operand_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>	'getInsured.getLabResultValueById(' + rtrim(horl_code) + ')' as name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>	'dec' as type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>	'Lab Result ' + rtrim(horl_code) + ': ' + rtrim(description) as display,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>	(rtrim(horl_code) + ' ' + rtrim(description) + ', Male: ' + rtrim(low_male) + ' - ' + rtrim(high_male) + ' ' + rtrim(unit) + ', Female: ' + rtrim(low_female) + ' - ' + rtrim(high_female) + ' ' + rtrim(unit)) as description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>	'' as value_list
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>	tl_ansi_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>	low_male is not null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>	'getInsured.getLabResultValueById(' + rtrim(horl_code) + ')' as name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>	'dec' as type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>	'Lab Result ' + rtrim(horl_code) + ': ' + rtrim(description) as display,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>	(rtrim(horl_code) + ' ' + rtrim(description)) as description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>	'' as value_list
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>	tl_ansi_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_operand_view</VIEW_NAME><Text>	low_male is null
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>lab_result_operand_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-2115723774</Check_Sum><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>create view [dbo].[lab_result_text_operand_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>	'getInsured.getLabResultTextById(' + rtrim(horl_code) + ')' as name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>	'str' as type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>	'Lab Result ' + rtrim(horl_code) + ': ' + rtrim(description) + ' (Text)' as display,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>	(rtrim(horl_code) + ' ' + rtrim(description) + ' (Text), Male: ' + rtrim(low_male) + ' - ' + rtrim(high_male) +
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>	' ' + rtrim(unit) + ', Female: ' + rtrim(low_female) + ' - ' + rtrim(high_female) + ' ' + rtrim(unit)) as description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>	'' as value_list
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>	tl_ansi_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>	low_male is not null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>	'getInsured.getLabResultTextById(' + rtrim(horl_code) + ')' as name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>	'str' as type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>	'Lab Result ' + rtrim(horl_code) + ': ' + rtrim(description) + ' (Text)' as display,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>	(rtrim(horl_code) + ' ' + rtrim(description)) + '(Text)' as description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>	'' as value_list
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>	tl_ansi_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME><Text>	low_male is null
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>lab_result_text_operand_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>lab_specimen_match_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1370467686</Check_Sum><CREATE_TEXT><VIEW_NAME>lab_specimen_match_view</VIEW_NAME><Text>create view [dbo].[lab_specimen_match_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_specimen_match_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_specimen_match_view</VIEW_NAME><Text>	lab_specimin_id as lab_specimen_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_specimen_match_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_specimen_match_view</VIEW_NAME><Text>	tl_lab_specimen
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_specimen_match_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_specimen_match_view</VIEW_NAME><Text>	can_match is not null and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_specimen_match_view</VIEW_NAME><Text>	can_match &lt;&gt; 0
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>lab_specimen_match_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>lab_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-99406281</Check_Sum><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>create view [dbo].[lab_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>select distinct
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>	req.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>	ev.create_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>	ev.match_method,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>	ev.status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>	ev.vendor_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>	ev.manual_or_electronic_entry,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>	ev.expiration_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>	ev.added_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>	ev.requirement_type_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>	ev.requirement_request_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>	ev.lifespan_days,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>	ev.insured_requirement_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>	lab.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>	insured_requirement req, requirement_information ev, lab_header lab
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>	req.requirement_information_id = ev.requirement_information_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lab_view</VIEW_NAME><Text>	ev.requirement_information_id = lab.requirement_information_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>lab_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>log_event_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>314566213</Check_Sum><CREATE_TEXT><VIEW_NAME>log_event_view</VIEW_NAME><Text>create view [dbo].[log_event_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>log_event_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>log_event_view</VIEW_NAME><Text>	*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>log_event_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>log_event_view</VIEW_NAME><Text>	aus_event
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>log_event_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>log_event_view</VIEW_NAME><Text>	aus_cmd &gt;= 20 and aus_cmd &lt; 30
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>log_event_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>ls_system_search_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-294555382</Check_Sum><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>create view [dbo].[ls_system_search_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>select p.policy_number as policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>       per.last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>       per.first_name ,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>       per.birth_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>       per.tax_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>      (select per2.last_name from company c, person per2 where  p.cedent_company_code = c.company_code and c.person_id = per2.person_id) as cedent_company,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>         pc.approved_amount as decision_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>       cpi.coverage_status as action,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>       cpi.perm_table_rating as rating,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>      (select 'yes'from coverage_person_insured cpi2 where cpi.policy_person_id = cpi2.policy_person_id and cpi.coverage_person_id = cpi2.coverage_person_id and cpi.is_smoker = -1
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>       union select 'no'from coverage_person_insured cpi2 where cpi.policy_person_id = cpi2.policy_person_id and cpi.coverage_person_id = cpi2.coverage_person_id and cpi.is_smoker = 0
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>       )  as smoker,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>       cpi.final_action_date as action_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>       p.updated_date as policy_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>       p.policy_status
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>from policy p, policy_person pp, person per, coverage_person_insured cpi, policy_coverage pc, coverage_person cp
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>where p.policy_id = pp.policy_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>and p.policy_id = pc.policy_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>and pp.role_id = 'insured'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>and pp.person_id = per.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>and pc.policy_coverage_id = cp.policy_coverage_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>and cpi.coverage_person_id = cp.coverage_person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ls_system_search_view</VIEW_NAME><Text>and pp.policy_person_id = cpi.policy_person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>ls_system_search_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>2126813591</Check_Sum><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>
create view marsh_data_proxy_view
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>select 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	marsh_id, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	balance_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	error_count,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1, 9) as family_id, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 10, 12) as current_epsilon_key, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 22, 12) as new_epsilon_key, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 34, 1) as record_type, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 35, 12) as group_number, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 47, 2) as coverage_type, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 49, 15) as member_first_name, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 64, 30) as member_last_name, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 94, 9) as member_ssn, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 103, 8) as member_dob, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 111, 1) as relationship_code, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 112, 6) as applicant_title, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 118, 15) as applicant_first_name, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 133, 30) as applicant_last_name, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 163, 1) as applicant_middle_initial, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 164, 6) as applicant_trailing_title, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 170, 1) as applicant_sex_code, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 171, 8) as applicant_dob, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 179, 30) as applicant_address_line1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 209, 30) as applicant_address_line2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 239, 30) as applicant_address_line3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 269, 20) as applicant_city, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 289, 5) as applicant_state_code, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 294, 9) as applicant_zip_code, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 303, 15) as applicant_home_phone, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 318, 15) as applicant_work_phone, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 333, 3) as applicant_height, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 336, 3) as applicant_weight, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 339, 13) as insurance_volume_applied_for, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 352, 13) as waiting_period, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 365, 8) as last_exam_date, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 373, 8) as last_blood_profile_date, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 381, 3) as mortality_rating, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 384, 4) as legal_text_id1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 388, 4) as conditional_text_id1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 392, 60) as explanation1_line1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 452, 60) as explanation1_line2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 512, 60) as explanation1_line3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 572, 60) as explanation1_line4, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 632, 60) as explanation1_line5, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 692, 60) as explanation1_line6, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 752, 60) as explanation1_line7, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 812, 60) as explanation1_line8, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 872, 60) as explanation1_line9, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 932, 60) as explanation1_line10, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 992, 4) as legal_text_id2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 996, 4) as conditional_text_id2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1000, 60) as explanation2_line1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1060, 60) as explanation2_line2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1120, 60) as explanation2_line3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1180, 60) as explanation2_line4, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1240, 60) as explanation2_line5, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1300, 60) as explanation2_line6, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1360, 60) as explanation2_line7, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1420, 60) as explanation2_line8, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1480, 60) as explanation2_line9, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1540, 60) as explanation2_line10, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1600, 4) as legal_text_id3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1604, 4) as conditional_text_id3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1608, 60) as explanation3_line1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1668, 60) as explanation3_line2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1728, 60) as explanation3_line3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1788, 60) as explanation3_line4, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1848, 60) as explanation3_line5, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1908, 60) as explanation3_line6, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 1968, 60) as explanation3_line7, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 2028, 60) as explanation3_line8, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 2088, 60) as explanation3_line9, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	SUBSTRING(marsh_record, 2148, 60) as explanation3_line10
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME><Text>	marsh_data
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>marsh_data_proxy_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>mib_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1799512132</Check_Sum><CREATE_TEXT><VIEW_NAME>mib_proxy_view</VIEW_NAME><Text>create view [dbo].[mib_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_proxy_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_proxy_view</VIEW_NAME><Text>	mib.*,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_proxy_view</VIEW_NAME><Text>	ev.expiration_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_proxy_view</VIEW_NAME><Text>	ev.create_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_proxy_view</VIEW_NAME><Text>	ev.person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_proxy_view</VIEW_NAME><Text>	ev.match_method,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_proxy_view</VIEW_NAME><Text>	ev.status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_proxy_view</VIEW_NAME><Text>	ev.vendor_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_proxy_view</VIEW_NAME><Text>	ev.manual_or_electronic_entry,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_proxy_view</VIEW_NAME><Text>	ev.added_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_proxy_view</VIEW_NAME><Text>	ev.requirement_type_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_proxy_view</VIEW_NAME><Text>	ev.requirement_request_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_proxy_view</VIEW_NAME><Text>	ev.lifespan_days,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_proxy_view</VIEW_NAME><Text>	ev.insured_requirement_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_proxy_view</VIEW_NAME><Text>	mib_header mib, requirement_information ev
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_proxy_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_proxy_view</VIEW_NAME><Text>	mib.requirement_information_id = ev.requirement_information_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>mib_proxy_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>mib_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-99930577</Check_Sum><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>create view [dbo].[mib_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>select distinct
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>	req.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>	ev.create_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>	ev.match_method,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>	ev.status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>	ev.vendor_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>	ev.manual_or_electronic_entry,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>	ev.expiration_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>	ev.added_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>	ev.requirement_type_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>	ev.requirement_request_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>	ev.lifespan_days,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>	ev.insured_requirement_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>	mib.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>	insured_requirement req, requirement_information ev, mib_header mib
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>	req.insured_requirement_id = ev.insured_requirement_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mib_view</VIEW_NAME><Text>	ev.requirement_information_id = mib.requirement_information_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>mib_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>mvr_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1753126043</Check_Sum><CREATE_TEXT><VIEW_NAME>mvr_proxy_view</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_proxy_view</VIEW_NAME><Text>create view [dbo].[mvr_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_proxy_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_proxy_view</VIEW_NAME><Text>	mvr.*,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_proxy_view</VIEW_NAME><Text>	ev.expiration_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_proxy_view</VIEW_NAME><Text>	ev.create_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_proxy_view</VIEW_NAME><Text>	ev.insured_requirement_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_proxy_view</VIEW_NAME><Text>	mvr_header mvr, requirement_information ev
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_proxy_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_proxy_view</VIEW_NAME><Text>	mvr.requirement_information_id = ev.requirement_information_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>mvr_proxy_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>mvr_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-99275209</Check_Sum><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>create view [dbo].[mvr_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>select distinct
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>	req.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>	ev.create_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>	ev.match_method,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>	ev.status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>	ev.vendor_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>	ev.manual_or_electronic_entry,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>	ev.expiration_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>	ev.added_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>	ev.requirement_type_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>	ev.requirement_request_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>	ev.lifespan_days,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>	ev.insured_requirement_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>	mvr.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>	insured_requirement req, requirement_information ev, mvr_header mvr
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>	req.requirement_information_id = ev.requirement_information_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>mvr_view</VIEW_NAME><Text>	ev.requirement_information_id = mvr.requirement_information_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>mvr_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>owner_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-602380466</Check_Sum><CREATE_TEXT><VIEW_NAME>owner_view</VIEW_NAME><Text>create view [dbo].[owner_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>owner_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>owner_view</VIEW_NAME><Text>policy_person.policy_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>owner_view</VIEW_NAME><Text>policy_person.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>owner_view</VIEW_NAME><Text>policy_person.relationship_to_insured,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>owner_view</VIEW_NAME><Text>policy_person.role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>owner_view</VIEW_NAME><Text>policy_person.sub_role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>owner_view</VIEW_NAME><Text>person.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>owner_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>owner_view</VIEW_NAME><Text>person,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>owner_view</VIEW_NAME><Text>policy_person
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>owner_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>owner_view</VIEW_NAME><Text>policy_person.person_id = person.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>owner_view</VIEW_NAME><Text>policy_person.role_id = 'owner'
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>owner_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>paramed_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1239861761</Check_Sum><CREATE_TEXT><VIEW_NAME>paramed_view</VIEW_NAME><Text>create view [dbo].[paramed_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>paramed_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>paramed_view</VIEW_NAME><Text>	p.*,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>paramed_view</VIEW_NAME><Text>	ri.create_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>paramed_view</VIEW_NAME><Text>	ri.match_method,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>paramed_view</VIEW_NAME><Text>	ri.status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>paramed_view</VIEW_NAME><Text>	ri.vendor_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>paramed_view</VIEW_NAME><Text>	ri.manual_or_electronic_entry,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>paramed_view</VIEW_NAME><Text>	ri.expiration_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>paramed_view</VIEW_NAME><Text>	ri.requirement_type_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>paramed_view</VIEW_NAME><Text>	ri.requirement_request_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>paramed_view</VIEW_NAME><Text>	ri.lifespan_days,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>paramed_view</VIEW_NAME><Text>	ri.insured_requirement_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>paramed_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>paramed_view</VIEW_NAME><Text>	requirement_information ri,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>paramed_view</VIEW_NAME><Text>	paramed p
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>paramed_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>paramed_view</VIEW_NAME><Text>	p.requirement_information_id = ri.requirement_information_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>paramed_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>party_proxy_person_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-757703458</Check_Sum><CREATE_TEXT><VIEW_NAME>party_proxy_person_view</VIEW_NAME><Text>create view [dbo].[party_proxy_person_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_person_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_person_view</VIEW_NAME><Text>  '' as case_party_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_person_view</VIEW_NAME><Text>  '' as case_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_person_view</VIEW_NAME><Text>  '' as party_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_person_view</VIEW_NAME><Text>  '' as relation,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_person_view</VIEW_NAME><Text>  '' as case_group_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_person_view</VIEW_NAME><Text>  person.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_person_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_person_view</VIEW_NAME><Text>  person
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_person_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_person_view</VIEW_NAME><Text>  (person_type_id is null or person_type_id &lt;&gt; 'Company')
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>party_proxy_person_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>party_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>397328928</Check_Sum><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>create view [dbo].[party_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>SELECT     policy_person.policy_person_id AS case_party_id, policy_person.policy_id AS case_id, policy_person.role_id AS party_type, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                      policy_person.relationship_to_insured AS relation, policy.case_group_id, person.person_id, person.party_id, person.last_name, person.first_name, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                      person.middle_name, person.birth_name, person.title, person.suffix, person.tax_id, person.tax_type_id, person.birth_date, person.sex, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                      person.person_type_id, person.preferred_language_code, person.email_address, person.marital_status, person.client_id, person.alt_email_address, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                      person.preferred_contact_mode, person.class_type, person.field1, person.field2, person.field3, person.field4, person.field5,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                          (SELECT     primary_insured_flag
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                            FROM          policy_person_insured
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                            WHERE      (policy_person_id = policy_person.policy_person_id)) AS primary_flag
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>FROM         policy INNER JOIN
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                      policy_person ON policy.policy_id = policy_person.policy_id INNER JOIN
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                      person ON policy_person.person_id = person.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>WHERE     (person.person_type_id IS NULL) OR
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                      (person.person_type_id &lt;&gt; 'Company')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>UNION
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>SELECT     coverage_person.coverage_person_id AS case_party_id, policy_coverage.policy_id AS case_id, coverage_person.role_id AS party_type, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                      coverage_person.relationship_to_insured_code AS relation, policy_1.case_group_id, person_1.person_id, person_1.party_id, person_1.last_name, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                      person_1.first_name, person_1.middle_name, person_1.birth_name, person_1.title, person_1.suffix, person_1.tax_id, person_1.tax_type_id, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                      person_1.birth_date, person_1.sex, person_1.person_type_id, person_1.preferred_language_code, person_1.email_address, person_1.marital_status, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                      person_1.client_id, person_1.alt_email_address, person_1.preferred_contact_mode, person_1.class_type, person_1.field1, person_1.field2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                      person_1.field3, person_1.field4, person_1.field5, 0 AS primary_flag
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>FROM         person AS person_1 INNER JOIN
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                      coverage_person ON person_1.person_id = coverage_person.person_id INNER JOIN
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                      policy_coverage ON coverage_person.policy_coverage_id = policy_coverage.policy_coverage_id INNER JOIN
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                      policy AS policy_1 ON policy_coverage.policy_id = policy_1.policy_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>WHERE     (coverage_person.role_id IS NULL OR
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                      coverage_person.role_id &lt;&gt; 'insured') AND (person_1.person_type_id IS NULL OR
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_proxy_view</VIEW_NAME><Text>                      person_1.person_type_id &lt;&gt; 'Company')
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>party_proxy_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>party_relation_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>846996491</Check_Sum><CREATE_TEXT><VIEW_NAME>party_relation_view</VIEW_NAME><Text>create view [dbo].[party_relation_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_relation_view</VIEW_NAME><Text>select pr.parent_id ,p.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_relation_view</VIEW_NAME><Text>from party_relation pr, person p
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_relation_view</VIEW_NAME><Text>where pr.person_id = p.person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>party_relation_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>party_requirement_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1420760602</Check_Sum><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>create view [dbo].[party_requirement_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	p.party_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	ir.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	ir.insured_requirement_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	ir.ordered_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	ir.manual_or_automatic_entry,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	ir.requirement_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	ir.provider,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	ir.evidence_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	ir.provider_order_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	'' as closed_date
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	person p,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	policy_person pp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	insured_requirement ir
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	p.person_id = pp.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	ir.policy_person_id = pp.policy_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	ir.provider_order_id is null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	p.party_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	ir.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	ir.insured_requirement_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	ir.ordered_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	ir.manual_or_automatic_entry,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	ir.requirement_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	ir.provider,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	ir.evidence_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	ir.provider_order_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	po.closed_date
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	person p,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	policy_person pp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	insured_requirement ir,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	provider_order po
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	p.person_id = pp.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	ir.policy_person_id = pp.policy_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_requirement_view</VIEW_NAME><Text>	po.provider_order_id = ir.provider_order_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>party_requirement_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>party_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-2057708798</Check_Sum><CREATE_TEXT><VIEW_NAME>party_view</VIEW_NAME><Text>create view [dbo].[party_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>party_view</VIEW_NAME><Text>select * from person where class_type is not null
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>party_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>payor_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-570483378</Check_Sum><CREATE_TEXT><VIEW_NAME>payor_view</VIEW_NAME><Text>create view [dbo].[payor_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>payor_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>payor_view</VIEW_NAME><Text>policy_person.policy_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>payor_view</VIEW_NAME><Text>policy_person.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>payor_view</VIEW_NAME><Text>policy_person.relationship_to_insured,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>payor_view</VIEW_NAME><Text>policy_person.role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>payor_view</VIEW_NAME><Text>policy_person.sub_role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>payor_view</VIEW_NAME><Text>person.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>payor_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>payor_view</VIEW_NAME><Text>person,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>payor_view</VIEW_NAME><Text>policy_person
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>payor_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>payor_view</VIEW_NAME><Text>policy_person.person_id = person.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>payor_view</VIEW_NAME><Text>policy_person.role_id = 'payor'
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>payor_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>person_role_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1637118085</Check_Sum><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>CREATE VIEW person_role_view
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>AS
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  SELECT person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>         role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>         'policy_person' AS table_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  FROM   policy_person
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  UNION ALL
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  SELECT person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>         role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>         'coverage_person' AS table_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  FROM   coverage_person
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  WHERE  role_id &lt;&gt; 'insured'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  UNION ALL
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  SELECT person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>         'benefitParty'            AS role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>         'coverage_benefits_party' AS table_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  FROM   coverage_benefits_party
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  UNION ALL
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  SELECT person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>         'company' AS role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>         'company' AS table_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  FROM   company
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  UNION ALL
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  SELECT person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>         'user'     AS role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>         'aus_user' AS table_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  FROM   aus_user
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  UNION ALL
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  SELECT person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>         'agent'   AS role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>         'agent'   AS table_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  FROM   agent
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  UNION ALL
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  SELECT person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>         'agency'  AS role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>         'agency'  AS table_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  FROM   agency
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  UNION ALL
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  SELECT person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>         'tpa'     AS role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>         'tpa'     AS table_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>person_role_view</VIEW_NAME><Text>  FROM   tpa
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>person_role_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>plan_association_codes_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1820867582</Check_Sum><CREATE_TEXT><VIEW_NAME>plan_association_codes_view</VIEW_NAME><Text>
create view plan_association_codes_view as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_association_codes_view</VIEW_NAME><Text>select distinct 'plan_code_' + ap.association_code as code_type, pc.plan_code_id as code_id, rtrim(pc.plan_code_id) + ' - ' + pc.description as code_value, pc.line_of_business_code as external_code, ap.association_code, 1 as active_flag
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_association_codes_view</VIEW_NAME><Text>	from tl_plan_code pc, association_plan ap where (ap.expiration_date &gt; CURRENT_TIMESTAMP or ap.expiration_date is NULL) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_association_codes_view</VIEW_NAME><Text>	pc.plan_code_id = ap.plan_code_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_association_codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_association_codes_view</VIEW_NAME><Text>select distinct 'plan_code_' + ap.association_code as code_type, pc.plan_code_id as code_id, rtrim(pc.plan_code_id) + ' - ' + rtrim(pc.description) + ' (Inactive)' as code_value, pc.line_of_business_code as external_code, ap.association_code, 0 as active_</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_association_codes_view</VIEW_NAME><Text>flag
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_association_codes_view</VIEW_NAME><Text>	from tl_plan_code pc, association_plan ap where (ap.expiration_date &lt;= CURRENT_TIMESTAMP and ap.expiration_date is not NULL) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_association_codes_view</VIEW_NAME><Text>	pc.plan_code_id = ap.plan_code_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>plan_association_codes_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>plan_gnum_assoc_codes_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1215647892</Check_Sum><CREATE_TEXT><VIEW_NAME>plan_gnum_assoc_codes_view</VIEW_NAME><Text>
create view plan_gnum_assoc_codes_view as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_gnum_assoc_codes_view</VIEW_NAME><Text>select distinct 'plan_gnum_' + ap.association_code as code_type, rtrim(pc.plan_code_id) + '/' + ap.g_number as code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_gnum_assoc_codes_view</VIEW_NAME><Text>	rtrim(pc.plan_code_id) + '/' + rtrim(ap.g_number) + ' - ' + pc.description as code_value, pc.line_of_business_code as external_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_gnum_assoc_codes_view</VIEW_NAME><Text>	ap.association_code, 1 as active_flag from tl_plan_code pc, association_plan ap where (ap.expiration_date &gt; CURRENT_TIMESTAMP or
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_gnum_assoc_codes_view</VIEW_NAME><Text>	ap.expiration_date is NULL) and pc.plan_code_id = ap.plan_code_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_gnum_assoc_codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_gnum_assoc_codes_view</VIEW_NAME><Text>select distinct 'plan_gnum_' + ap.association_code as code_type, rtrim(pc.plan_code_id) + '/' + ap.g_number as code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_gnum_assoc_codes_view</VIEW_NAME><Text>	rtrim(pc.plan_code_id) + '/' + rtrim(ap.g_number) + ' - ' + pc.description + ' (Inactive)' as code_value,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_gnum_assoc_codes_view</VIEW_NAME><Text>	pc.line_of_business_code as external_code, ap.association_code, 0 as active_flag
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_gnum_assoc_codes_view</VIEW_NAME><Text>	from tl_plan_code pc, association_plan ap where (ap.expiration_date &lt;= CURRENT_TIMESTAMP and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_gnum_assoc_codes_view</VIEW_NAME><Text>	ap.expiration_date is not NULL) and pc.plan_code_id = ap.plan_code_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>plan_gnum_assoc_codes_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>plan_gnum_lob_assoc_codes_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1714127674</Check_Sum><CREATE_TEXT><VIEW_NAME>plan_gnum_lob_assoc_codes_view</VIEW_NAME><Text>
create view plan_gnum_lob_assoc_codes_view as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_gnum_lob_assoc_codes_view</VIEW_NAME><Text>select distinct 'plan_gnum_' + rtrim(lb.line_of_business_code) + '_' + ap.association_code as code_type, rtrim(pc.plan_code_id) + '/' + ap.g_number as code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_gnum_lob_assoc_codes_view</VIEW_NAME><Text>	rtrim(pc.plan_code_id) + '/' + rtrim(ap.g_number) + ' - ' + pc.description as code_value, pc.line_of_business_code as external_code, ap.association_code, 1 as active_flag
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_gnum_lob_assoc_codes_view</VIEW_NAME><Text>	from line_of_business lb, tl_plan_code pc, association_plan ap where (ap.expiration_date &gt; CURRENT_TIMESTAMP or
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_gnum_lob_assoc_codes_view</VIEW_NAME><Text>	ap.expiration_date is NULL) and pc.plan_code_id = ap.plan_code_id and lb.line_of_business_code = pc.line_of_business_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_gnum_lob_assoc_codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_gnum_lob_assoc_codes_view</VIEW_NAME><Text>select distinct 'plan_gnum_' + rtrim(lb.line_of_business_code) + '_'  + ap.association_code as code_type, rtrim(pc.plan_code_id) + '/' + ap.g_number as code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_gnum_lob_assoc_codes_view</VIEW_NAME><Text>	rtrim(pc.plan_code_id) + '/' + rtrim(ap.g_number) + ' - ' + pc.description + ' (Inactive)' as code_value, pc.line_of_business_code as external_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_gnum_lob_assoc_codes_view</VIEW_NAME><Text>	ap.association_code, 0 as active_flag from line_of_business lb, tl_plan_code pc, association_plan ap where (ap.expiration_date &lt;= CURRENT_TIMESTAMP and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>plan_gnum_lob_assoc_codes_view</VIEW_NAME><Text>	ap.expiration_date is not NULL) and pc.plan_code_id = ap.plan_code_id and lb.line_of_business_code = pc.line_of_business_code
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>plan_gnum_lob_assoc_codes_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>policy_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-906040246</Check_Sum><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>create view [dbo].[policy_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.policy_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.priority,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.policy_status_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.policy_status_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.case_group_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.association_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	ppi.applicant_status as applicant_status_short,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	ppi.applicant_status_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	(select top 1 pc.plan_code_id from policy_coverage pc, coverage_person cp where pc.policy_coverage_id = cp.policy_coverage_id and cp.person_id = pp.person_id) as primary_plan_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	ppi.is_member,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	ppi.adverse_history,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	pp.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	pp.relationship_to_insured,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	i.party_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	i.title as insured_title,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	i.last_name as insured_last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	i.middle_name as insured_middle_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	i.first_name as insured_first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	i.suffix as insured_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	i.tax_id as insured_tax_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	i.birth_date as insured_birth_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	i.client_id as insured_client_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	ppi.primary_insured_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	ppi.underwriting_amount as insured_underwriting_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.application_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.application_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.added_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.receive_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	ppi.reopen_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.underwriter_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	(select login_id from aus_user where user_id = p.underwriter_id) as underwriter_login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.team_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.service_associate_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	(select login_id from aus_user where user_id = p.service_associate_id) as service_associate_login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.tpa_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.cedent_policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.cedent_company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.cedent_underwriter_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.cedent_contact_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.cedent_date_sent,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.international_or_domestic,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.idb_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.currency_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.employer_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.alternate_case_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.source_info,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	p.distributor_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	policy p,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	policy_person pp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	policy_person_insured ppi,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	person i
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	pp.policy_id = p.policy_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	ppi.policy_person_id = pp.policy_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	i.person_id = pp.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view</VIEW_NAME><Text>	ppi.primary_reference_id is null
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1930020120</Check_Sum><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>CREATE view [dbo].[portal_policy_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	p.policy_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	p.policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	p.policy_status_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	p.policy_status_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	(select top 1 a.agent_number from agent a, policy_person pp2 where pp2.policy_id = p.policy_id and pp2.person_id = a.person_id and a.agent_number is not null) as agent_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	(select top 1 a.agency_number from agency a, policy_person pp2 where pp2.policy_id = p.policy_id and pp2.person_id = a.person_id and a.agency_number is not null) as agency_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	(select top 1 rtrim(b.last_name) from person b, agent c where b.person_id = c.person_id and c.agent_number in (select a.agent_number from agent a, policy_person pp2 where pp2.policy_id = p.policy_id and pp2.person_id = a.person_id and a.agent_number is n</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>ot null)) as agent_lastname,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	(select top 1 rtrim(b.first_name) from person b, agent c where b.person_id = c.person_id and c.agent_number in (select a.agent_number from agent a, policy_person pp2 where pp2.policy_id = p.policy_id and pp2.person_id = a.person_id and a.agent_number is </Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>not null)) as agent_firstname,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	pp.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	rtrim(i.last_name) as insured_last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>        rtrim(i.first_name) as insured_first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	p.receive_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	p.application_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	p.underwriter_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	(select rtrim (u.last_name) from aus_user au, person u where au.user_id = p.underwriter_id and au.person_id = u.person_id) as underwriter_last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	(select rtrim (u.first_name) from aus_user au, person u where au.user_id = p.underwriter_id and au.person_id = u.person_id) as underwriter_first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	(select count(*) from insured_requirement ir, tl_requirement  tr
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	 where pp.policy_person_id = ir.policy_person_id and (ir.requirement_code = tr.requirement_code and tr.requirement_category = 0))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	 as pi_req,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	(select count(*) from insured_requirement ir, tl_requirement  tr
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	 where pp.policy_person_id = ir.policy_person_id and (ir.closed_disposition is null or ir.closed_disposition &lt;&gt; 'S' )
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	 and (ir.requirement_code = tr.requirement_code and tr.requirement_category = 0))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	 as open_pi_req
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	policy p,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	policy_person pp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	policy_person_insured ppi,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	person i
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	pp.policy_id = p.policy_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	ppi.policy_person_id = pp.policy_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME><Text>	i.person_id = pp.person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>portal_policy_proxy_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>product_assoc_gnum_lob_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1721869972</Check_Sum><CREATE_TEXT><VIEW_NAME>product_assoc_gnum_lob_view</VIEW_NAME><Text>CREATE view [dbo].[product_assoc_gnum_lob_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_assoc_gnum_lob_view</VIEW_NAME><Text>select distinct 'product_' + rtrim(ap.association_code) + '_' + rtrim(ap.g_number) + '_' + lb.line_of_business_code as code_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_assoc_gnum_lob_view</VIEW_NAME><Text>	pc.plan_code_id as code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_assoc_gnum_lob_view</VIEW_NAME><Text>	rtrim( pc.plan_code_id ) + '-' + pc.description as code_value, 1 as active_flag
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_assoc_gnum_lob_view</VIEW_NAME><Text>	from association_plan ap, line_of_business lb, tl_plan_code pc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_assoc_gnum_lob_view</VIEW_NAME><Text>	where (ap.expiration_date &gt; CURRENT_TIMESTAMP or ap.expiration_date is NULL) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_assoc_gnum_lob_view</VIEW_NAME><Text>	pc.plan_code_id = ap.plan_code_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_assoc_gnum_lob_view</VIEW_NAME><Text>	lb.line_of_business_code = pc.line_of_business_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_assoc_gnum_lob_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_assoc_gnum_lob_view</VIEW_NAME><Text>select distinct 'product_' + rtrim(ap.association_code) + '_' + rtrim(ap.g_number) + '_' + lb.line_of_business_code as code_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_assoc_gnum_lob_view</VIEW_NAME><Text>	pc.plan_code_id as code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_assoc_gnum_lob_view</VIEW_NAME><Text>	rtrim( pc.plan_code_id ) + '-' + 'Inactive' + pc.description as code_value, 0 as active_flag
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_assoc_gnum_lob_view</VIEW_NAME><Text>	from association_plan ap, line_of_business lb, tl_plan_code pc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_assoc_gnum_lob_view</VIEW_NAME><Text>	where (ap.expiration_date &gt; CURRENT_TIMESTAMP or ap.expiration_date is NULL) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_assoc_gnum_lob_view</VIEW_NAME><Text>	pc.plan_code_id = ap.plan_code_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_assoc_gnum_lob_view</VIEW_NAME><Text>	lb.line_of_business_code = pc.line_of_business_code
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>product_assoc_gnum_lob_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>product_association_gnum_lob_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1463679968</Check_Sum><CREATE_TEXT><VIEW_NAME>product_association_gnum_lob_view</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_association_gnum_lob_view</VIEW_NAME><Text>CREATE view product_association_gnum_lob_view as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_association_gnum_lob_view</VIEW_NAME><Text>select distinct 'product_' + rtrim(ap.association_code) + '_' + rtrim(ap.g_number) + '_' + lb.line_of_business_code as code_type, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_association_gnum_lob_view</VIEW_NAME><Text>	pc.plan_code_id as code_id, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_association_gnum_lob_view</VIEW_NAME><Text>	rtrim( pc.plan_code_id ) + '-' + pc.description as code_value, 1 as active_flag 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_association_gnum_lob_view</VIEW_NAME><Text>	from association_plan as ap, line_of_business as lb, tl_plan_code as pc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_association_gnum_lob_view</VIEW_NAME><Text>	where (ap.expiration_date &gt; CURRENT_TIMESTAMP or ap.expiration_date is NULL) and 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_association_gnum_lob_view</VIEW_NAME><Text>	pc.plan_code_id = ap.plan_code_id and 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_association_gnum_lob_view</VIEW_NAME><Text>	lb.line_of_business_code = pc.line_of_business_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_association_gnum_lob_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_association_gnum_lob_view</VIEW_NAME><Text>select distinct 'product_' + rtrim(ap.association_code) + '_' + rtrim(ap.g_number) + '_' + lb.line_of_business_code as code_type, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_association_gnum_lob_view</VIEW_NAME><Text>	pc.plan_code_id as code_id, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_association_gnum_lob_view</VIEW_NAME><Text>	rtrim( pc.plan_code_id ) + '-' + 'Inactive' + pc.description as code_value, NULL as active_flag  
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_association_gnum_lob_view</VIEW_NAME><Text>	from association_plan as ap, line_of_business as lb, tl_plan_code as pc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_association_gnum_lob_view</VIEW_NAME><Text>	where (ap.expiration_date &gt; CURRENT_TIMESTAMP or ap.expiration_date is NULL) and 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_association_gnum_lob_view</VIEW_NAME><Text>	pc.plan_code_id = ap.plan_code_id and 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>product_association_gnum_lob_view</VIEW_NAME><Text>	lb.line_of_business_code = pc.line_of_business_code
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>product_association_gnum_lob_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Add"><VIEW_NAME>ratable_occupations_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-229768485</Check_Sum><CREATE_TEXT><VIEW_NAME>ratable_occupations_view</VIEW_NAME><Text>create view [dbo].[ratable_occupations_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ratable_occupations_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ratable_occupations_view</VIEW_NAME><Text>	code_value
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ratable_occupations_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ratable_occupations_view</VIEW_NAME><Text>	codes_view
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ratable_occupations_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ratable_occupations_view</VIEW_NAME><Text>	code_type = 'occupation' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ratable_occupations_view</VIEW_NAME><Text>	external_code is not null and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ratable_occupations_view</VIEW_NAME><Text>	external_code &lt;&gt; '0'
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>ratable_occupations_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1920291352</Check_Sum><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>create view [dbo].[recent_cases_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.policy_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.priority,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.policy_status_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.policy_status_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.case_group_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.association_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	ppi.applicant_status as applicant_status_short,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	ppi.applicant_status_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	(select top 1 pc.plan_code_id from policy_coverage pc, coverage_person cp where pc.policy_coverage_id = cp.policy_coverage_id and cp.person_id = pp.person_id) as primary_plan_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	ppi.is_member,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	ppi.adverse_history,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	pp.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	pp.relationship_to_insured,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	i.title as insured_title,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	i.last_name as insured_last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	i.middle_name as insured_middle_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	i.first_name as insured_first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	i.suffix as insured_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	i.tax_id as insured_tax_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	i.birth_date as insured_birth_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	i.client_id as insured_client_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	ppi.underwriting_amount as insured_underwriting_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.application_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.application_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.added_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.receive_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.underwriter_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	(select login_id from aus_user where user_id = p.underwriter_id) as underwriter_login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.team_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.service_associate_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	(select login_id from aus_user where user_id = p.service_associate_id) as service_associate_login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.tpa_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	rc.user_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	(select login_id from aus_user where user_id = rc.user_id) as user_login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	rc.date_time as access_date_time,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.cedent_policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.cedent_company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.cedent_underwriter_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.cedent_contact_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.cedent_date_sent,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.international_or_domestic,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.idb_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	p.currency_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	policy p,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	policy_person pp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	policy_person_insured ppi,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	person i,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	aus_user_recent_files rc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	pp.policy_id = p.policy_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	ppi.policy_person_id = pp.policy_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	i.person_id = pp.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME><Text>	rc.policy_id = p.policy_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>recent_cases_proxy_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>recommended_requirements_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1534560231</Check_Sum><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>create view [dbo].[recommended_requirements_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	te_rulebook.rulebook_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	tr_plan_code_rulebook.plan_code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	ta_face_amount_band.face_amount_from,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	ta_face_amount_band.face_amount_to,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	ta_age_band.age_from,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	ta_age_band.age_to,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	tl_requirement.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	te_rulebook,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	tr_plan_code_rulebook,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	ta_face_amount_band,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	ta_age_band,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	tr_age_face_amount_requirement,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	tr_group_requirements,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	tl_requirement,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	tl_requirement_group
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	tr_plan_code_rulebook.rulebook_id = te_rulebook.rulebook_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	ta_face_amount_band.rulebook_id = te_rulebook.rulebook_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	ta_age_band.rulebook_id = te_rulebook.rulebook_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	tr_age_face_amount_requirement.rulebook_id = te_rulebook.rulebook_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	tr_age_face_amount_requirement.age_band_seq_no = ta_age_band.age_band_seq_no and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	tr_age_face_amount_requirement.face_amount_seq_no = ta_face_amount_band.face_amount_seq_no and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	tr_group_requirements.requirement_group_id = tr_age_face_amount_requirement.requirement_group_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	tl_requirement.requirement_code = tr_group_requirements.requirement_code and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	tl_requirement_group.requirement_group_id = tr_group_requirements.requirement_group_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	tl_requirement_group.is_active is not null and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	tl_requirement_group.is_active &lt;&gt; 0 and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	tl_requirement.is_active is not null and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>recommended_requirements_view</VIEW_NAME><Text>	tl_requirement.is_active &lt;&gt; 0
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>recommended_requirements_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>referral_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1788394327</Check_Sum><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>create view [dbo].[referral_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	n.note_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	n.diary_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	p.policy_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	p.policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	i.title as insured_title,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	i.last_name as insured_last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	i.middle_name as insured_middle_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	i.first_name as insured_first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	i.suffix as insured_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	n.author as author_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	(select login_id from aus_user where user_id = n.author) as author_login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	n.refer_to_user_id as referred_to_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	(select login_id from aus_user where user_id = n.refer_to_user_id) as referred_to_login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	n.topic,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	p.team_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	notes n,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	policy_person pp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	policy p,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	person i
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	n.refer_to_user_id &gt; 0 and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	n.policy_person_id = pp.policy_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	pp.policy_id = p.policy_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	pp.person_id = i.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>referral_proxy_view</VIEW_NAME><Text>	n.diary_date is not null
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>referral_proxy_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>req_exists_operand_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>523441691</Check_Sum><CREATE_TEXT><VIEW_NAME>req_exists_operand_view</VIEW_NAME><Text>create view [dbo].[req_exists_operand_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>req_exists_operand_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>req_exists_operand_view</VIEW_NAME><Text>	'getInsured.requirementExists(' + rtrim(requirement_code) + ')' as name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>req_exists_operand_view</VIEW_NAME><Text>	'bool' as type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>req_exists_operand_view</VIEW_NAME><Text>	'Requirement ' + rtrim(requirement_code) + ' Exists' as display,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>req_exists_operand_view</VIEW_NAME><Text>	'Determines if ' + rtrim(requirement_name) + ' Requirement exists on the Applicant.'  as description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>req_exists_operand_view</VIEW_NAME><Text>	'Boolean' as value_list
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>req_exists_operand_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>req_exists_operand_view</VIEW_NAME><Text>	tl_requirement
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>req_exists_operand_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>req_status_operand_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>2099025632</Check_Sum><CREATE_TEXT><VIEW_NAME>req_status_operand_view</VIEW_NAME><Text>create view [dbo].[req_status_operand_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>req_status_operand_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>req_status_operand_view</VIEW_NAME><Text>	'getInsured.requirementStatus(' + rtrim(requirement_code) + ')' as name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>req_status_operand_view</VIEW_NAME><Text>	'string' as type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>req_status_operand_view</VIEW_NAME><Text>	'Requirement ' + rtrim(requirement_code) + ' Status' as display,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>req_status_operand_view</VIEW_NAME><Text>	'Status of ' + rtrim(requirement_name) + ' Requirement on the Applicant.'  as description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>req_status_operand_view</VIEW_NAME><Text>	'RequirementStatus' as value_list
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>req_status_operand_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>req_status_operand_view</VIEW_NAME><Text>	tl_requirement
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>req_status_operand_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>requirement_exists_operand_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-2090358521</Check_Sum><CREATE_TEXT><VIEW_NAME>requirement_exists_operand_view</VIEW_NAME><Text>
create view requirement_exists_operand_view as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_exists_operand_view</VIEW_NAME><Text>select 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_exists_operand_view</VIEW_NAME><Text>	'getInsured.requirementExists(' + rtrim(requirement_code) + ')' as name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_exists_operand_view</VIEW_NAME><Text>	'bool' as type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_exists_operand_view</VIEW_NAME><Text>	'Requirement ' + rtrim(requirement_code) + ' Exists' as display,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_exists_operand_view</VIEW_NAME><Text>	'Determines if ' + rtrim(requirement_name) + ' Requirement exists on the Applicant.'  as description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_exists_operand_view</VIEW_NAME><Text>	'Boolean' as value_list
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_exists_operand_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_exists_operand_view</VIEW_NAME><Text>	tl_requirement
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>requirement_exists_operand_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>requirement_group_requirements</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1338862093</Check_Sum><CREATE_TEXT><VIEW_NAME>requirement_group_requirements</VIEW_NAME><Text>create view [dbo].[requirement_group_requirements] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_group_requirements</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_group_requirements</VIEW_NAME><Text>	tl_requirement_group.requirement_group_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_group_requirements</VIEW_NAME><Text>	tl_requirement_group.name as requirement_group_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_group_requirements</VIEW_NAME><Text>	tl_requirement.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_group_requirements</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_group_requirements</VIEW_NAME><Text>	tl_requirement,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_group_requirements</VIEW_NAME><Text>	tr_group_requirements,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_group_requirements</VIEW_NAME><Text>	tl_requirement_group
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_group_requirements</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_group_requirements</VIEW_NAME><Text>	tr_group_requirements.requirement_code = tl_requirement.requirement_code and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_group_requirements</VIEW_NAME><Text>	tl_requirement_group.requirement_group_id = tr_group_requirements.requirement_group_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_group_requirements</VIEW_NAME><Text>	tl_requirement.is_active is not null and tl_requirement.is_active &lt;&gt; 0 and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_group_requirements</VIEW_NAME><Text>	tl_requirement_group.is_active is not null and tl_requirement_group.is_active &lt;&gt; 0
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>requirement_group_requirements</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>requirement_open_operand_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>2025807916</Check_Sum><CREATE_TEXT><VIEW_NAME>requirement_open_operand_view</VIEW_NAME><Text>create view [dbo].[requirement_open_operand_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_open_operand_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_open_operand_view</VIEW_NAME><Text>	'getInsured.requirementIsOpen(' + rtrim(requirement_code) + ')' as name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_open_operand_view</VIEW_NAME><Text>	'bool' as type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_open_operand_view</VIEW_NAME><Text>	'Requirement ' + rtrim(requirement_code) + ' Is Open' as display,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_open_operand_view</VIEW_NAME><Text>	'Determines if ' + rtrim(requirement_name) + ' Requirement is open on the Applicant.'  as description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_open_operand_view</VIEW_NAME><Text>	'Boolean' as value_list
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_open_operand_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_open_operand_view</VIEW_NAME><Text>	tl_requirement
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>requirement_open_operand_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>requirement_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>436911882</Check_Sum><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>create view [dbo].[requirement_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	t.requirement_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	t.alt_lang,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	t.alt_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	t.default_ordered_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	ir.requirement_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	t.requirement_type_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	t.requirement_category,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	ir.followup_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	ir.closed_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	ir.received_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	ir.ordered_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	ir.ordered_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	p.policy_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	p.policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	p.policy_status_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	p.underwriter_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	(select login_id from aus_user where user_id = p.underwriter_id) as underwriter_login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	p.service_associate_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	(select login_id from aus_user where user_id = p.service_associate_id) as service_associate_login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	ir.insured_requirement_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	ir.closed_disposition,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	ir.requirement_information_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	ir.last_followup_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	ir.provider,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	ir.evidence_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	pp.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	i.party_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	i.title as insured_title,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	i.last_name as insured_last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	i.middle_name as insured_middle_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	i.first_name as insured_first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	i.suffix as insured_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	i.birth_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	i.tax_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	p.team_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	ir.manual_or_automatic_entry,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	ir.new_business_until_closed,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	ir.provider_order_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	ir.create_comment
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	policy p,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	policy_person pp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	person i,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	insured_requirement ir,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	tl_requirement t
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	p.policy_id = pp.policy_id AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	pp.person_id = i.person_id AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	pp.policy_person_id = ir.policy_person_id AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_proxy_view</VIEW_NAME><Text>	ir.requirement_code = t.requirement_code
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>requirement_proxy_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>requirement_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1671414204</Check_Sum><CREATE_TEXT><VIEW_NAME>requirement_view</VIEW_NAME><Text>create view [dbo].[requirement_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_view</VIEW_NAME><Text>insured_requirement.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_view</VIEW_NAME><Text>insured_requirement
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>requirement_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>review_message_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>664888935</Check_Sum><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>create view [dbo].[review_message_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>	p.policy_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>	p.policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>	rtrim(per.last_name) as applicant_last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>	rtrim(per.first_name) as applicant_first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>	rm.message_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>	rm.origin_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>	SUBSTRING(rm.message, 1, 50) as review_message_text,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>	p.service_associate_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>	(select login_id from aus_user where user_id = p.service_associate_id) as service_associate_login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>	rm.user_role_type
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>	review_message rm,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>	policy p,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>	policy_person pp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>	person per
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>	p.policy_id = rm.policy_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>	pp.policy_person_id = rm.policy_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>review_message_proxy_view</VIEW_NAME><Text>	pp.person_id = per.person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>review_message_proxy_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>role_privilege_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>665024619</Check_Sum><CREATE_TEXT><VIEW_NAME>role_privilege_view</VIEW_NAME><Text>create view [dbo].[role_privilege_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_privilege_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_privilege_view</VIEW_NAME><Text>	arp.role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_privilege_view</VIEW_NAME><Text>	arp.restriction_level,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_privilege_view</VIEW_NAME><Text>	asp.privilege_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_privilege_view</VIEW_NAME><Text>	asp.name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_privilege_view</VIEW_NAME><Text>	asp.description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_privilege_view</VIEW_NAME><Text>	asp.is_active,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_privilege_view</VIEW_NAME><Text>	asp.subsystem_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_privilege_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_privilege_view</VIEW_NAME><Text>	aus_role_privilege arp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_privilege_view</VIEW_NAME><Text>	aus_security_privilege asp
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_privilege_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_privilege_view</VIEW_NAME><Text>	arp.privilege_id = asp.privilege_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>role_privilege_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>role_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>885115434</Check_Sum><CREATE_TEXT><VIEW_NAME>role_view</VIEW_NAME><Text>create view [dbo].[role_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_view</VIEW_NAME><Text>	aus_security_roles.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_view</VIEW_NAME><Text>	aus_security_roles
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_view</VIEW_NAME><Text>	role_id &gt; -1 and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>role_view</VIEW_NAME><Text>	(deleted is null or deleted = 0)
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>role_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>rulebook_item_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>916182778</Check_Sum><CREATE_TEXT><VIEW_NAME>rulebook_item_view</VIEW_NAME><Text>create view [dbo].[rulebook_item_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_item_view</VIEW_NAME><Text>	select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_item_view</VIEW_NAME><Text>		'' as plan_code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_item_view</VIEW_NAME><Text>		rb.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_item_view</VIEW_NAME><Text>	from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_item_view</VIEW_NAME><Text>		te_rulebook rb
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>rulebook_item_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>rulebook_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>643013923</Check_Sum><CREATE_TEXT><VIEW_NAME>rulebook_proxy_view</VIEW_NAME><Text>create view [dbo].[rulebook_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_proxy_view</VIEW_NAME><Text>	select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_proxy_view</VIEW_NAME><Text>		rb.association_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_proxy_view</VIEW_NAME><Text>		rb.effective_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_proxy_view</VIEW_NAME><Text>		rb.rulebook_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_proxy_view</VIEW_NAME><Text>		rb.rulebook_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_proxy_view</VIEW_NAME><Text>		rb.description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_proxy_view</VIEW_NAME><Text>		rb.is_active,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_proxy_view</VIEW_NAME><Text>		rb.added_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_proxy_view</VIEW_NAME><Text>		rb.added_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_proxy_view</VIEW_NAME><Text>		rb.update_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_proxy_view</VIEW_NAME><Text>		rb.updated_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_proxy_view</VIEW_NAME><Text>		rb.type
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_proxy_view</VIEW_NAME><Text>	from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_proxy_view</VIEW_NAME><Text>		te_rulebook rb
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>rulebook_proxy_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>rulebook_rate_class</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-125091871</Check_Sum><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>create view [dbo].[rulebook_rate_class] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>select distinct
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>	'smok_rate_class_' + rb.rulebook_name as code_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>	cast(rc.sequence_no as char(30)) as code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>	rc.description as code_value,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>	'' as external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>	te_rulebook rb,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>	ta_rate_table_class rc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>	rb.rulebook_id = rc.rulebook_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>	rc.smoking_class is not null and rc.smoking_class &lt;&gt; '0'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>select distinct
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>	'rate_class_' + rb.rulebook_name as code_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>	cast(rc.sequence_no as char(30)) as code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>	rc.description as code_value,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>	'' as external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>	te_rulebook rb,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>	ta_rate_table_class rc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>	rb.rulebook_id = rc.rulebook_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_rate_class</VIEW_NAME><Text>	(rc.smoking_class is null or rc.smoking_class = '0')
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>rulebook_rate_class</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>rulebook_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1266089530</Check_Sum><CREATE_TEXT><VIEW_NAME>rulebook_view</VIEW_NAME><Text>create view [dbo].[rulebook_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_view</VIEW_NAME><Text>	select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_view</VIEW_NAME><Text>		pc.plan_code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_view</VIEW_NAME><Text>		rb.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_view</VIEW_NAME><Text>	from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_view</VIEW_NAME><Text>		te_rulebook rb,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_view</VIEW_NAME><Text>		tr_plan_code_rulebook pc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_view</VIEW_NAME><Text>	where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rulebook_view</VIEW_NAME><Text>		rb.rulebook_id = pc.rulebook_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>rulebook_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>service_associate_alpha_range</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-157498543</Check_Sum><CREATE_TEXT><VIEW_NAME>service_associate_alpha_range</VIEW_NAME><Text>create view [dbo].[service_associate_alpha_range] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>service_associate_alpha_range</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>service_associate_alpha_range</VIEW_NAME><Text>  from_string,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>service_associate_alpha_range</VIEW_NAME><Text>  to_string as up_to_string,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>service_associate_alpha_range</VIEW_NAME><Text>  service_associate_login_id as item_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>service_associate_alpha_range</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>service_associate_alpha_range</VIEW_NAME><Text>  service_associate_range
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>service_associate_alpha_range</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>sserror_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>151441070</Check_Sum><CREATE_TEXT><VIEW_NAME>sserror_view</VIEW_NAME><Text>
create view sserror_view
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>sserror_view</VIEW_NAME><Text>as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>sserror_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>sserror_view</VIEW_NAME><Text>	code_id as error_cd, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>sserror_view</VIEW_NAME><Text>	code_value as reason
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>sserror_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>sserror_view</VIEW_NAME><Text>	tl_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>sserror_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>sserror_view</VIEW_NAME><Text>	(code_type = 'marsh_error_code')
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>sserror_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>team_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-648560815</Check_Sum><CREATE_TEXT><VIEW_NAME>team_view</VIEW_NAME><Text>create view [dbo].[team_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>team_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>team_view</VIEW_NAME><Text>	team.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>team_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>team_view</VIEW_NAME><Text>	team
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>team_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>team_view</VIEW_NAME><Text>	(deleted is null or deleted = 0)
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>team_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>teams_users_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1010617762</Check_Sum><CREATE_TEXT><VIEW_NAME>teams_users_view</VIEW_NAME><Text>create view [dbo].[teams_users_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>teams_users_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>teams_users_view</VIEW_NAME><Text>	tr_user_team.team_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>teams_users_view</VIEW_NAME><Text>	tr_user_team.auto_assign,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>teams_users_view</VIEW_NAME><Text>	aus_user.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>teams_users_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>teams_users_view</VIEW_NAME><Text>	tr_user_team,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>teams_users_view</VIEW_NAME><Text>	aus_user
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>teams_users_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>teams_users_view</VIEW_NAME><Text>	tr_user_team.user_id = aus_user.user_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>teams_users_view</VIEW_NAME><Text>	(aus_user.deleted is null or aus_user.deleted = 0)
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>teams_users_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>tpa_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>409215712</Check_Sum><CREATE_TEXT><VIEW_NAME>tpa_view</VIEW_NAME><Text>create view [dbo].[tpa_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>tpa_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>tpa_view</VIEW_NAME><Text>	t.tpa_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>tpa_view</VIEW_NAME><Text>	t.tpa_short_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>tpa_view</VIEW_NAME><Text>	t.contact_last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>tpa_view</VIEW_NAME><Text>	t.contact_first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>tpa_view</VIEW_NAME><Text>	t.auto_closure_days,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>tpa_view</VIEW_NAME><Text>	t.expiration_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>tpa_view</VIEW_NAME><Text>	p.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>tpa_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>tpa_view</VIEW_NAME><Text>	tpa t,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>tpa_view</VIEW_NAME><Text>	person p
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>tpa_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>tpa_view</VIEW_NAME><Text>	t.person_id = p.person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>tpa_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>unchecked_rvw_msg_count</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>693163322</Check_Sum><CREATE_TEXT><VIEW_NAME>unchecked_rvw_msg_count</VIEW_NAME><Text>create view [dbo].[unchecked_rvw_msg_count] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>unchecked_rvw_msg_count</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>unchecked_rvw_msg_count</VIEW_NAME><Text> rm.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>unchecked_rvw_msg_count</VIEW_NAME><Text> count(rm.review_message_id) as unchk_rvw_count
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>unchecked_rvw_msg_count</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>unchecked_rvw_msg_count</VIEW_NAME><Text> review_message rm
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>unchecked_rvw_msg_count</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>unchecked_rvw_msg_count</VIEW_NAME><Text> rm.message_type = '0' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>unchecked_rvw_msg_count</VIEW_NAME><Text> (rm.user_role_type is null or rm.user_role_type != 'CM')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>unchecked_rvw_msg_count</VIEW_NAME><Text>group by
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>unchecked_rvw_msg_count</VIEW_NAME><Text> rm.policy_person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>unchecked_rvw_msg_count</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>user_teams_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>360130922</Check_Sum><CREATE_TEXT><VIEW_NAME>user_teams_view</VIEW_NAME><Text>create view [dbo].[user_teams_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>user_teams_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>user_teams_view</VIEW_NAME><Text>	tr_user_team.user_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>user_teams_view</VIEW_NAME><Text>	tr_user_team.auto_assign,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>user_teams_view</VIEW_NAME><Text>	team.*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>user_teams_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>user_teams_view</VIEW_NAME><Text>	tr_user_team,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>user_teams_view</VIEW_NAME><Text>	team
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>user_teams_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>user_teams_view</VIEW_NAME><Text>	tr_user_team.team_id = team.team_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>user_teams_view</VIEW_NAME><Text>	(team.deleted is null or team.deleted = 0)
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>user_teams_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>data_mart_evidence</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1085911161</Check_Sum><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>create view data_mart_evidence as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	ev.requirement_information_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	ev.insured_requirement_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	ev.create_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	ev.match_method,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	cast(lab.lab_id_number as int) as evidence_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	'LAB' as requirement_type_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	dbo.clrLSDecrypt(lab.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	dbo.clrLSDecrypt(lab.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	dbo.clrLSDecrypt(lab.ssn,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as ssn,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	cast(dbo.clrLSDecrypt(lab.birth_date,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as datetime) as birth_date
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	lab_header lab, requirement_information ev
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	lab.requirement_information_id = ev.requirement_information_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	ev.requirement_information_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	ev.insured_requirement_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	ev.create_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	ev.match_method,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	mvr.mvr_header_id as evidence_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	'MVR' as requirement_type_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	dbo.clrLSDecrypt(mvr.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	dbo.clrLSDecrypt(mvr.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	dbo.clrLSDecrypt(mvr.soc_sec_no,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as ssn,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	cast(dbo.clrLSDecrypt(mvr.birth_date,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as datetime) as birth_date
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	mvr_header mvr, requirement_information ev
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	mvr.requirement_information_id = ev.requirement_information_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	ev.requirement_information_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	ev.insured_requirement_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	ev.create_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	ev.match_method,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	mib.mib_header_id as evidence_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	'MIB' as requirement_type_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	dbo.clrLSDecrypt(mib.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	dbo.clrLSDecrypt(mib.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	'' as ssn,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	cast(dbo.clrLSDecrypt(mib.birth_date,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as datetime) as birth_date
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	mib_header mib, requirement_information ev
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_evidence</VIEW_NAME><Text>	mib.requirement_information_id = ev.requirement_information_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>data_mart_evidence</VIEW_NAME><depname>clrLSDecrypt</depname><owner>dbo</owner><type>assembly scalar </type><updated>no</updated><selected>no</selected><column /></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>data_mart_lab_result</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1492806654</Check_Sum><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>create view data_mart_lab_result as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>select 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	p.policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	lh.lab_receive_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	dbo.clrLSDecrypt(lh.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	dbo.clrLSDecrypt(lh.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	cast(dbo.clrLSDecrypt(lh.birth_date,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as datetime) as birth_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	lh.sex as gender,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	lr.horl_code as ansi_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	ac.description as test_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	lr.result_value as test_result
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	lab_header lh,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	lab_result lr,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	insured_requirement ir,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	tl_ansi_code ac,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	policy_person pp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	policy p
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	lh.requirement_information_id = lr.requirement_information_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	lr.horl_code = ac.horl_code and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	lh.requirement_information_id = ir.requirement_information_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	ir.policy_person_id = pp.policy_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	pp.policy_id = p.policy_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>select 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	' ' as policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	lh.lab_receive_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	dbo.clrLSDecrypt(lh.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	dbo.clrLSDecrypt(lh.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	cast(dbo.clrLSDecrypt(lh.birth_date,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as datetime) as birth_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	lh.sex as gender,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	lr.horl_code as ansi_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	ac.description as test_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	lr.result_value as test_result
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	lab_header lh,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	lab_result lr,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	tl_ansi_code ac
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	lh.requirement_information_id = lr.requirement_information_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	lr.horl_code = ac.horl_code and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_lab_result</VIEW_NAME><Text>	lh.requirement_information_id not in (select requirement_information_id from insured_requirement where requirement_information_id is not null)
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>data_mart_lab_result</VIEW_NAME><depname>clrLSDecrypt</depname><owner>dbo</owner><type>assembly scalar </type><updated>no</updated><selected>no</selected><column /></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1976547232</Check_Sum><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>create view [dbo].[reviewer_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.policy_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.priority,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.policy_status_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.policy_status_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.case_group_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.association_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	ppi.applicant_status as applicant_status_short,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	ppi.applicant_status_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	(select top 1 pc.plan_code_id from policy_coverage pc, coverage_person cp where pc.policy_coverage_id = cp.policy_coverage_id and cp.person_id = pp.person_id) as primary_plan_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	ppi.is_member,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	ppi.adverse_history,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	pp.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	pp.relationship_to_insured,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	i.title as insured_title,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	i.last_name as insured_last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	i.middle_name as insured_middle_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	i.first_name as insured_first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	i.suffix as insured_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	i.tax_id as insured_tax_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	i.birth_date as insured_birth_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	i.client_id as insured_client_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	ppi.underwriting_amount as insured_underwriting_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.application_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.application_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.added_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.receive_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	ppi.reopen_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	(select top 1 final_action_date from insured_coverages_view where policy_person_id = ppi.policy_person_id) as final_disposition_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.underwriter_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	(select login_id from aus_user where user_id = p.underwriter_id) as underwriter_login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.team_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.service_associate_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	(select login_id from aus_user where user_id = p.service_associate_id) as service_associate_login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.tpa_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.cedent_policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.cedent_company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.cedent_underwriter_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.cedent_contact_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.cedent_date_sent,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.international_or_domestic,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.idb_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	p.currency_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	policy p,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	policy_person pp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	policy_person_insured ppi,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	person i,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	team t
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	pp.policy_id = p.policy_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	ppi.policy_person_id = pp.policy_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	i.person_id = pp.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	ppi.primary_reference_id is null and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><Text>	ppi.policy_person_id in (select policy_person_id from insured_requirement where policy_person_id = ppi.policy_person_id and requirement_code = 'TBRVWD' and (closed_disposition is null or closed_disposition in ('O', 'OR', 'H')))
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>reviewer_proxy_view</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>final_action_date</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>data_mart_association_plan</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-398437218</Check_Sum><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>create view data_mart_association_plan as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	a.name as association_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.association_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.plan_code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>		tv.tpa_short_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	 	tpa_view tv
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	 	tv.tpa_code = ap.tpa_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	) as tpa_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.g_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.mortality_max,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.auto_approve_requires_member,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.underwrite_child,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.spouse_can_exceed_member,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.allow_jet_issue,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.billing_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.expiration_date
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	association_plan ap,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	association a
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	a.association_code = ap.association_code and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	a.association_code not in (select c.company_code from company c, person p where c.person_id = p.person_id and (p.class_type = 'ASSN' or p.class_type = 'GRP'))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	dbo.clrLSDecrypt(p.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as association_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.association_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.plan_code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>		tv.tpa_short_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	 	tpa_view tv
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	 	tv.tpa_code = ap.tpa_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	) as tpa_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.g_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.mortality_max,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.auto_approve_requires_member,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.underwrite_child,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.spouse_can_exceed_member,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.allow_jet_issue,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.billing_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	ap.expiration_date
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	association_plan ap,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	company c,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	person p
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	c.company_code = ap.association_code and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	p.person_id = c.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_association_plan</VIEW_NAME><Text>	(p.class_type = 'ASSN' or p.class_type = 'GRP')
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>data_mart_association_plan</VIEW_NAME><depname>clrLSDecrypt</depname><owner>dbo</owner><type>assembly scalar </type><updated>no</updated><selected>no</selected><column /></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_association_plan</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>tpa_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_association_plan</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>tpa_short_name</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>cases_to_issue_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>2042816550</Check_Sum><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>CREATE VIEW [dbo].[cases_to_issue_view] AS
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>SELECT p.company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.policy_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.priority,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.policy_status_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.policy_status_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.case_group_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.association_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       ppi.applicant_status        AS applicant_status_short,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       ppi.applicant_status_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       (SELECT TOP ( 1 ) pc.plan_code_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>        FROM   policy_coverage AS pc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>               INNER JOIN coverage_person AS cp
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>                 ON pc.policy_coverage_id = cp.policy_coverage_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>        WHERE  (cp.person_id = pp.person_id)) AS primary_plan_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       ppi.is_member,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       ppi.adverse_history,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       pp.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       pp.relationship_to_insured,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       i.party_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       i.title                     AS insured_title,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       i.last_name                 AS insured_last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       i.middle_name               AS insured_middle_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       i.first_name                AS insured_first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       i.suffix                    AS insured_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       i.tax_id                    AS insured_tax_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       i.birth_date                AS insured_birth_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       i.client_id                 AS insured_client_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       ppi.primary_insured_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       ppi.underwriting_amount     AS insured_underwriting_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.application_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.application_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.added_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.receive_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       ppi.reopen_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.underwriter_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       (SELECT login_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>        FROM   aus_user
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>        WHERE  (user_id = p.underwriter_id)) AS underwriter_login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.team_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.service_associate_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       (SELECT login_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>        FROM   aus_user AS aus_user_1
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>        WHERE  (user_id = p.service_associate_id)) AS service_associate_login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.tpa_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.cedent_policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.cedent_company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.cedent_underwriter_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.cedent_contact_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.cedent_date_sent,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.international_or_domestic,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.idb_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.currency_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       p.employer_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       ir.open_pi_req,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>	   (SELECT unchk_rvw_count
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>        FROM   unchecked_rvw_msg_count
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>        WHERE  (policy_person_id = pp.policy_person_id)) AS uw_rm_count
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>FROM   ins_open_post_issue_req_count AS ir
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       INNER JOIN policy_person AS pp
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>         ON ir.policy_person_id = pp.policy_person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       INNER JOIN policy AS p
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>         ON pp.policy_id = p.policy_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       INNER JOIN policy_person_insured AS ppi
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>         ON pp.policy_person_id = ppi.policy_person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       INNER JOIN person AS i
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>         ON pp.person_id = i.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>WHERE  (p.policy_status_code = 'Closed')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>cases_to_issue_view</VIEW_NAME><Text>       AND (ppi.applicant_status = 'AP')
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>cases_to_issue_view</VIEW_NAME><depname>ins_open_post_issue_req_count</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>cases_to_issue_view</VIEW_NAME><depname>ins_open_post_issue_req_count</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>open_pi_req</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>cases_to_issue_view</VIEW_NAME><depname>unchecked_rvw_msg_count</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>cases_to_issue_view</VIEW_NAME><depname>unchecked_rvw_msg_count</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>unchk_rvw_count</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1291712488</Check_Sum><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>CREATE VIEW [dbo].[policy_by_product_proxy_view]
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>AS
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>  SELECT p.company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.policy_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.priority,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.policy_status_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.policy_status_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.case_group_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.association_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         ppi.applicant_status        AS applicant_status_short,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         ppi.applicant_status_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         pc.plan_code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         cpi.g_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         ppi.is_member,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         ppi.adverse_history,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         pp.policy_person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         pp.relationship_to_insured,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         i.party_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         i.title                     AS insured_title,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         i.last_name                 AS insured_last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         i.middle_name               AS insured_middle_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         i.first_name                AS insured_first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         i.suffix                    AS insured_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         i.tax_id                    AS insured_tax_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         i.birth_date                AS insured_birth_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         i.client_id                 AS insured_client_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         ppi.underwriting_amount     AS insured_underwriting_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.application_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.application_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.added_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.receive_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         ppi.reopen_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.last_underwrite_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.agent_signed_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.requested_issue_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         cpi.final_action_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.underwriter_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.team_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.service_associate_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.tpa_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.cedent_policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.cedent_company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.cedent_underwriter_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.cedent_contact_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.cedent_date_sent,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.international_or_domestic,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.idb_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.currency_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.employer_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.alternate_case_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.source_info,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         p.distributor_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         agt.agent_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         agy.agency_number
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>  FROM   policy AS p
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         INNER JOIN policy_person AS pp
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>           ON pp.policy_id = p.policy_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         INNER JOIN policy_person_insured AS ppi
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>           ON ppi.policy_person_id = pp.policy_person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         INNER JOIN person AS i
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>           ON i.person_id = pp.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         INNER JOIN coverage_person_insured AS cpi
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>           ON cpi.policy_person_id = ppi.policy_person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         INNER JOIN coverage_person AS cp
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>           ON cp.coverage_person_id = cpi.coverage_person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         INNER JOIN policy_coverage AS pc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>           ON pc.policy_coverage_id = cp.policy_coverage_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         LEFT OUTER JOIN agent_view AS agt
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>           ON p.policy_id = agt.policy_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>         LEFT OUTER JOIN agency_view AS agy
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><Text>           ON p.policy_id = agy.policy_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><depname>agency_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><depname>agency_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>agency_number</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><depname>agent_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>agent_number</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_by_product_proxy_view</VIEW_NAME><depname>agent_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_id</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>tpa_codes_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1614476709</Check_Sum><CREATE_TEXT><VIEW_NAME>tpa_codes_view</VIEW_NAME><Text>create view [dbo].[tpa_codes_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>tpa_codes_view</VIEW_NAME><Text>select 'tpa' as code_type, tpa_code as code_id, last_name as code_value, cast(person_id as char(30)) as external_code, 1 as active_flag from tpa_view
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>tpa_codes_view</VIEW_NAME><Text>	where expiration_date &gt; CURRENT_TIMESTAMP or expiration_date is NULL
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>tpa_codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>tpa_codes_view</VIEW_NAME><Text>select 'tpa' as code_type, tpa_code as code_id, rtrim(last_name) + ' (Inactive)' as code_value, cast(person_id as char(30)) as external_code, 0 as active_flag from tpa_view
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>tpa_codes_view</VIEW_NAME><Text>	where expiration_date &lt;= CURRENT_TIMESTAMP and expiration_date is not NULL
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>tpa_codes_view</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>tpa_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>tpa_codes_view</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>expiration_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>tpa_codes_view</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>tpa_codes_view</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>last_name</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>requirement_order_report_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1904909567</Check_Sum><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>create view [dbo].[requirement_order_report_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	pol.policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	pol.case_group_id as family_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	ir.insured_requirement_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	ir.requirement_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	ir.provider,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	ir.ordered_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	ir.closed_disposition,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	dbo.clrLSDecrypt(per.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	dbo.clrLSDecrypt(per.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	per.sex,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	cast(dbo.clrLSDecrypt(per.birth_date,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as datetime) as birth_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	icv.g_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	icv.amount as coverage_amount
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	insured_requirement ir,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	insured_coverages_view icv,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	person per,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	policy pol
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	ir.policy_person_id = icv.policy_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	icv.policy_id = pol.policy_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	icv.person_id = per.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_order_report_view</VIEW_NAME><Text>	ir.ordered_date is not null
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>requirement_order_report_view</VIEW_NAME><depname>clrLSDecrypt</depname><owner>dbo</owner><type>assembly scalar </type><updated>no</updated><selected>no</selected><column /></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>requirement_order_report_view</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>requirement_order_report_view</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>amount</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>requirement_order_report_view</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>requirement_order_report_view</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>requirement_order_report_view</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>g_number</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>requirement_status_report_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>66201575</Check_Sum><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>create view [dbo].[requirement_status_report_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	pol.policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	pol.case_group_id as family_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	ir.insured_requirement_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	ir.requirement_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	ir.provider,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	ir.ordered_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	ir.closed_disposition,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	es.evidence_status_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	es.code as status_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	es.status_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	dbo.clrLSDecrypt(per.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	dbo.clrLSDecrypt(per.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	per.sex,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	cast(dbo.clrLSDecrypt(per.birth_date,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as datetime) as birth_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	icv.g_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	icv.amount as coverage_amount
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	evidence_status es,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	insured_requirement ir,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	insured_coverages_view icv,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	person per,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	policy pol
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	es.evidence_status_id = (select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>								max(evidence_status.evidence_status_id)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>				 			 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>								evidence_status
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>				 			 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>								evidence_status.insured_requirement_id = ir.insured_requirement_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>							 ) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	ir.insured_requirement_id = es.insured_requirement_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	ir.policy_person_id = icv.policy_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	icv.policy_id = pol.policy_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	icv.person_id = per.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>requirement_status_report_view</VIEW_NAME><Text>	ir.ordered_date is not null
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>requirement_status_report_view</VIEW_NAME><depname>clrLSDecrypt</depname><owner>dbo</owner><type>assembly scalar </type><updated>no</updated><selected>no</selected><column /></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>requirement_status_report_view</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>requirement_status_report_view</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>amount</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>requirement_status_report_view</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>requirement_status_report_view</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>requirement_status_report_view</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>g_number</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>data_mart_privilege</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1446357563</Check_Sum><CREATE_TEXT><VIEW_NAME>data_mart_privilege</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_privilege</VIEW_NAME><Text>create view data_mart_privilege as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_privilege</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_privilege</VIEW_NAME><Text>	role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_privilege</VIEW_NAME><Text>	restriction_level,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_privilege</VIEW_NAME><Text>	privilege_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_privilege</VIEW_NAME><Text>	name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_privilege</VIEW_NAME><Text>	description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_privilege</VIEW_NAME><Text>	is_active,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_privilege</VIEW_NAME><Text>	subsystem_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_privilege</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_privilege</VIEW_NAME><Text>	role_privilege_view
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>data_mart_privilege</VIEW_NAME><depname>role_privilege_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>role_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_privilege</VIEW_NAME><depname>role_privilege_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>restriction_level</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_privilege</VIEW_NAME><depname>role_privilege_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>privilege_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_privilege</VIEW_NAME><depname>role_privilege_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_privilege</VIEW_NAME><depname>role_privilege_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>description</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_privilege</VIEW_NAME><depname>role_privilege_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>is_active</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_privilege</VIEW_NAME><depname>role_privilege_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>subsystem_name</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>data_mart_team</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-983799650</Check_Sum><CREATE_TEXT><VIEW_NAME>data_mart_team</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_team</VIEW_NAME><Text>create view data_mart_team as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_team</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_team</VIEW_NAME><Text>	utv.user_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_team</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_team</VIEW_NAME><Text>		ltrim(rtrim(dbo.clrLSDecrypt(p.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ' ' + rtrim(dbo.clrLSDecrypt(p.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_team</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_team</VIEW_NAME><Text>	 	aus_user u, person p
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_team</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_team</VIEW_NAME><Text>	 	u.user_id = utv.user_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_team</VIEW_NAME><Text>	 	p.person_id = u.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_team</VIEW_NAME><Text>	) as user_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_team</VIEW_NAME><Text>	utv.auto_assign,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_team</VIEW_NAME><Text>	utv.team_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_team</VIEW_NAME><Text>	utv.team_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_team</VIEW_NAME><Text>	utv.description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_team</VIEW_NAME><Text>	utv.is_active
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_team</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_team</VIEW_NAME><Text>	user_teams_view utv
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>data_mart_team</VIEW_NAME><depname>clrLSDecrypt</depname><owner>dbo</owner><type>assembly scalar </type><updated>no</updated><selected>no</selected><column /></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_team</VIEW_NAME><depname>user_teams_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>user_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_team</VIEW_NAME><depname>user_teams_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>auto_assign</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_team</VIEW_NAME><depname>user_teams_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>team_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_team</VIEW_NAME><depname>user_teams_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>team_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_team</VIEW_NAME><depname>user_teams_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>description</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_team</VIEW_NAME><depname>user_teams_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>is_active</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>codes_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1113170122</Check_Sum><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>/****** Object:  View [dbo].[codes_view]    Script Date: 11/12/2008 15:21:33 ******/
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>CREATE view codes_view as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'mib_country' as code_type, country_id as code_id, country_name as code_value, mib_country as external_code from tl_country
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select lang.code_value as language_code, 'mib_country' as code_type, country_id as code_id, alt_country_name as code_value, mib_country as external_code from tl_country, (select * from tl_code where code_type = 'System' and code_id = 'AltLanguage') lang w</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>here lang.code_value is not null and alt_country_name is not null and rtrim(alt_country_name) &lt;&gt; ''
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'policy_type' as code_type, rtrim(tpa_code) + '_' + rtrim(line_of_business_code) + '_' + rtrim(g_number) as code_id, policy_type as code_value, '' as external_code from billing_code where g_number is not null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'policy_type' AS code_type, rtrim(tpa_code) + '_' + rtrim(line_of_business_code) as code_id, policy_type as code_value, '' as external_code from billing_code where g_number is null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'billing_code' as code_type, rtrim(tpa_code) + '_' + rtrim(line_of_business_code) + '_' + rtrim(g_number) as code_id, us_billing_code as code_value, non_us_billing_code as external_code from billing_code where g_number is </Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>not null and g_number != ''
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'billing_code' AS code_type, rtrim(tpa_code) + '_' + rtrim(line_of_business_code) as code_id, us_billing_code as code_value, non_us_billing_code as external_code from billing_code where g_number is null or g_number = ''
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'country' as code_type, country_id as code_id, country_name as code_value, country_code as external_code from tl_country
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select lang.code_value as language_code, 'country' as code_type, country_id as code_id, alt_country_name as code_value, country_code as external_code from tl_country, (select * from tl_code where code_type = 'System' and code_id = 'AltLanguage') lang wher</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>e lang.code_value is not null and alt_country_name is not null and rtrim(alt_country_name) &lt;&gt; ''
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'lab_request' as code_type, request_code as code_id, description as code_value, '' as external_code from tl_lab_request
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'lab_specimen' as code_type, lab_specimin_id as code_id, description as code_value, '' as external_code from tl_lab_specimen
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'plan_code' as code_type, plan_code_id as code_id, plan_code_id + ' - ' + description as code_value, line_of_business_code as external_code from tl_plan_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select alt_lang as language_code, 'plan_code' as code_type, plan_code_id as code_id, plan_code_id + ' - ' + alt_description as code_value, line_of_business_code as external_code from tl_plan_code where alt_lang is not null and alt_lang &lt;&gt; 'en-us'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'requirement_group' as code_type, cast(requirement_group_id as char(30)) as code_id, name as code_value, '' as external_code from tl_requirement_group
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'subaccount' as code_type, subaccount_code as code_id, full_name as code_value, '' as external_code from tl_subaccount
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'country_state' as code_type, country_state_id as code_id, state_name as code_value, state_code as external_code from tl_country_state
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select lang.code_value as language_code, 'country_state' as code_type, country_state_id as code_id, alt_state_name as code_value, state_code as external_code from tl_country_state, (select * from tl_code where code_type = 'System' and code_id = 'AltLangua</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>ge') lang where lang.code_value is not null and alt_state_name is not null and rtrim(alt_state_name) &lt;&gt; ''
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'country_state_usa' as code_type, country_state_id as code_id, state_name as code_value, state_code as external_code from tl_country_state where country_id = 'USA'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select lang.code_value as language_code, 'country_state_usa' as code_type, country_state_id as code_id, alt_state_name as code_value, state_code as external_code from tl_country_state, (select * from tl_code where code_type = 'System' and code_id = 'AltLa</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>nguage') lang where lang.code_value is not null and country_id = 'USA' and alt_state_name is not null and rtrim(alt_state_name) &lt;&gt; ''
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'country_state_canada' as code_type, country_state_id as code_id, state_name as code_value, state_code as external_code from tl_country_state where country_id = 'CANADA'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select lang.code_value as language_code, 'country_state_canada' as code_type, country_state_id as code_id, alt_state_name as code_value, state_code as external_code from tl_country_state, (select * from tl_code where code_type = 'System' and code_id = 'Al</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>tLanguage') lang where lang.code_value is not null and country_id = 'CANADA' and alt_state_name is not null and rtrim(alt_state_name) &lt;&gt; ''
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'ansi_code' as code_type, horl_code as code_id, description as code_value, ansi as external_code from tl_ansi_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'agency' as code_type, cast(agency.person_id as char(30)) as code_id, person.last_name as code_value, agency.agency_number as external_code from agency, person where person.person_id = agency.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'agent' as code_type, cast(agent.person_id as char(30)) as code_id, person.last_name as code_value, agent.agent_number as external_code from agent, person where person.person_id = agent.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'agent_name' as code_type, (rtrim(agent_number) + '_' + cast(person.person_id as char(12))) as code_id, person.last_name as code_value, person.first_name as external_code from agent, person where agent_number is not null a</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>nd person.person_id = agent.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'company' as code_type, company.company_code as code_id, company.company_code  + ' - ' + person.last_name as code_value, person.tax_id as external_code from company, person where person.person_id = company.person_id and (c</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>lass_type is null or class_type = 'Carrier')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'company_name' as code_type, person.last_name as code_id, company.company_code  + ' - ' + person.last_name as code_value, person.tax_id as external_code from company, person where person.person_id = company.person_id and (</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>class_type is null or class_type = 'Carrier')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select alt_lang as language_code, 'requirement' as code_type, requirement_code as code_id, alt_name as code_value, external_requirement_code as external_code from tl_requirement where alt_lang is not null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'requirement' as code_type, requirement_code as code_id, requirement_name as code_value, external_requirement_code as external_code from tl_requirement where alt_lang is null or alt_lang &lt;&gt; 'en-us'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select alt_lang as language_code, 'post_issue_requirement' as code_type, requirement_code as code_id, alt_name as code_value, external_requirement_code as external_code from tl_requirement where alt_lang is not null and requirement_category = 0
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'post_issue_requirement' as code_type, requirement_code as code_id, requirement_name as code_value, external_requirement_code as external_code from tl_requirement where (alt_lang is null or alt_lang &lt;&gt; 'en-us') and require</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>ment_category = 0
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, code_type as code_type, cast(code_id as char(30)) as code_id, code_value as code_value, external_code as external_code from tl_acord_codes where code_type &lt;&gt; 'AUS Gender Type' and code_type &lt;&gt; 'ALFA Gender Type'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, code_type as code_type, cast(external_code as char(30)) as code_id, code_value as code_value, cast(code_id as char(30)) as external_code from tl_acord_codes where code_type = 'AUS Gender Type'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>SELECT     'en-us' AS language_code, code_type, CAST(external_code AS char(30)) AS code_id, code_value, CAST(code_id AS char(30)) AS external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>FROM         tl_acord_codes
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>WHERE     (code_type = 'ALFA Gender Type')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'final_action_disposition' as code_type, reason_status as code_id, reason_status as code_value, reason_status as external_code from tl_final_action_reason
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct lang.code_value as language_code, 'final_action_disposition' as code_type, reason_status as code_id, reason_status as code_value, reason_status as external_code from tl_final_action_reason, (select * from tl_code where code_type = 'System'</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text> and code_id = 'AltLanguage') lang where (lang.code_value is not null and lang.code_value &lt;&gt; '')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, lower( 'final_action_reason_' + (select code_id from tl_code where code_type = 'applicant_status' and code_value = reason_status) ) as code_type, reason_text as code_id, reason_text as code_value, reason_code as e</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>xternal_code from tl_final_action_reason where (select code_id from tl_code where code_type = 'applicant_status' and code_value = reason_status) is not null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct lang.code_value as language_code, lower( 'final_action_reason_' + (select code_id from tl_code where code_type = 'applicant_status' and code_value = reason_status) ) as code_type, reason_text as code_id, alt_reason_text as code_value, reas</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>on_code as external_code from tl_final_action_reason, (select * from tl_code where code_type = 'System' and code_id = 'AltLanguage') lang where lang.code_value is not null and alt_reason_text is not null and (select code_id from tl_code where code_type = </Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>'applicant_status' and code_value = reason_status) is not null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, lower( 'final_action_reason_' + reason_status ) as code_type, reason_text as code_id, reason_text as code_value, reason_code as external_code from tl_final_action_reason
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct lang.code_value as language_code, lower( 'final_action_reason_' + reason_status ) as code_type, reason_text as code_id, alt_reason_text as code_value, reason_code as external_code from tl_final_action_reason, (select * from tl_code where c</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>ode_type = 'System' and code_id = 'AltLanguage') lang where lang.code_value is not null and alt_reason_text is not null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'final_action_reason' as code_type, reason_text as code_id, reason_status as code_value, reason_code as external_code from tl_final_action_reason where reason_code is not null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct lang.code_value as language_code, 'final_action_reason' as code_type, alt_reason_text  as code_id, reason_status as code_value, reason_code as external_code from tl_final_action_reason, (select * from tl_code where code_type = 'System' and</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text> code_id = 'AltLanguage') lang where lang.code_value is not null and reason_code is not null and alt_reason_text is not null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select language_code, code_type, code_id, code_value, external_code from tl_code where code_type &lt;&gt; 'CaseOne'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select language_code, code_type, upper(code_id), code_value, external_code from tl_code where code_type = 'CaseOne'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'tpa' as code_type, t.tpa_code as code_id, p.last_name as code_value, cast(p.person_id as char(30)) as external_code from tpa t, person p where t.person_id = p.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'active_tpa' as code_type, t.tpa_code as code_id, p.last_name as code_value, cast(p.person_id as char(30)) as external_code from tpa t, person p
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>where t.person_id = p.person_id and (t.expiration_date &gt; CURRENT_TIMESTAMP or t.expiration_date is NULL)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'line_of_business' as code_type, line_of_business_code as code_id, name as code_value, line_of_business_code as external_code from line_of_business
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'association_code' as code_type, association_code as code_id, association_code as code_value, cast(expiration_date as char(30)) as external_code from association
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'active_association' as code_type, association_code as code_id, name as code_value, cast(expiration_date as char(30)) as external_code from association
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>where (expiration_date &gt; CURRENT_TIMESTAMP or expiration_date is NULL) and association_code not in (select c.company_code from company c, person p where c.person_id = p.person_id and (p.class_type = 'ASSN' or p.class_type = 'GRP'))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'active_association' as code_type, c.company_code as code_id, p.last_name as code_value, p.field1 as external_code from company c, person p
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>where c.person_id = p.person_id and (p.field1 &gt; CURRENT_TIMESTAMP or p.field1 is NULL) and (p.class_type = 'ASSN' or p.class_type = 'GRP')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'association' as code_type, association_code as code_id, name as code_value, cast(expiration_date as char(30)) as external_code from association
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>where association_code not in (select c.company_code from company c, person p where c.person_id = p.person_id and (p.class_type = 'ASSN' or p.class_type = 'GRP'))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'association' as code_type, c.company_code as code_id, p.last_name as code_value, p.field1 as external_code from company c, person p
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>where c.person_id = p.person_id and (p.class_type = 'ASSN' or p.class_type = 'GRP')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'active_association_' + lower(ap.tpa_code) as code_type, a.association_code as code_id, a.name as code_value, cast(a.expiration_date as char(30)) as external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>from association a, association_plan ap where (a.expiration_date &gt; CURRENT_TIMESTAMP or a.expiration_date is NULL) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>a.association_code = ap.association_code and a.association_code not in (select c.company_code from company c, person p where c.person_id = p.person_id and (p.class_type = 'ASSN' or p.class_type = 'GRP'))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'active_association_' + lower(ap.tpa_code) as code_type, c.company_code as code_id, p.last_name as code_value, p.field1 as external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>from company c, person p, association_plan ap where (p.field1 &gt; CURRENT_TIMESTAMP or p.field1 is NULL) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>c.company_code = ap.association_code and c.person_id = p.person_id and (p.class_type = 'ASSN' or p.class_type = 'GRP')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'association_' + lower(ap.tpa_code) as code_type, a.association_code as code_id, a.name as code_value, cast(a.expiration_date as char(30)) as external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>from association a, association_plan ap where a.association_code = ap.association_code and a.association_code not in (select c.company_code from company c, person p where c.person_id = p.person_id and (p.class_type = 'ASSN' or p.class_type = 'GRP'))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'association_' + lower(ap.tpa_code) as code_type, c.company_code as code_id, p.last_name as code_value, p.field1 as external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>from company c, person p, association_plan ap where c.company_code = ap.association_code and c.person_id = p.person_id and (p.class_type = 'ASSN' or p.class_type = 'GRP')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'active_plan_code_' + lower(ap.association_code) as code_type, pc.plan_code_id as code_id, rtrim(pc.plan_code_id) + ' - ' + pc.description as code_value, pc.line_of_business_code as external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>from tl_plan_code pc, association_plan ap where (ap.expiration_date &gt; CURRENT_TIMESTAMP or ap.expiration_date is NULL) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>pc.plan_code_id = ap.plan_code_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'plan_code_' + lower(ap.association_code) as code_type, pc.plan_code_id as code_id, rtrim(pc.plan_code_id) + ' - ' + pc.description as code_value, pc.line_of_business_code as external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>from tl_plan_code pc, association_plan ap where pc.plan_code_id = ap.plan_code_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'active_plan_gnum_' + lower(ap.association_code) as code_type, rtrim(pc.plan_code_id) + '_' + ap.g_number as code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>rtrim(pc.plan_code_id) + '/' + rtrim(ap.g_number) + ' - ' + pc.description as code_value, pc.plan_code_id as external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>from tl_plan_code pc, association_plan ap where (ap.expiration_date &gt; CURRENT_TIMESTAMP or
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>ap.expiration_date is NULL) and pc.plan_code_id = ap.plan_code_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'plan_gnum_' + lower(ap.association_code) as code_type, rtrim(pc.plan_code_id) + '_' + ap.g_number as code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>rtrim(pc.plan_code_id) + '/' + rtrim(ap.g_number) + ' - ' + pc.description as code_value, pc.line_of_business_code as external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>from tl_plan_code pc, association_plan ap where pc.plan_code_id = ap.plan_code_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'active_plan_gnum_' + lower(rtrim(lb.line_of_business_code) + '_' + ap.association_code) as code_type, rtrim(pc.plan_code_id) + '_' + ap.g_number as code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>rtrim(pc.plan_code_id) + '/' + rtrim(ap.g_number) + ' - ' + pc.description as code_value, pc.line_of_business_code as external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>from line_of_business lb, tl_plan_code pc, association_plan ap where (ap.expiration_date &gt; CURRENT_TIMESTAMP or
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>ap.expiration_date is NULL) and pc.plan_code_id = ap.plan_code_id and lb.line_of_business_code = pc.line_of_business_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'plan_gnum_' + lower(rtrim(lb.line_of_business_code) + '_' + ap.association_code) as code_type, rtrim(pc.plan_code_id) + '_' + ap.g_number as code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>rtrim(pc.plan_code_id) + '/' + rtrim(ap.g_number) + ' - ' + pc.description as code_value, pc.line_of_business_code as external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>from line_of_business lb, tl_plan_code pc, association_plan ap where pc.plan_code_id = ap.plan_code_id and lb.line_of_business_code = pc.line_of_business_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'active_plan_gnum_' +  lower(rtrim(ltrim(ap.association_code))) + '_' +  lower(rtrim(lb.line_of_business_code) ) as code_type, rtrim(pc.plan_code_id) + '_' + ap.g_number as code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>rtrim(pc.plan_code_id) + '/' + rtrim(ap.g_number) + ' - ' + pc.description as code_value, pc.plan_code_id as external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>from line_of_business lb, tl_plan_code pc, association_plan ap where (ap.expiration_date &gt; CURRENT_TIMESTAMP or
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>ap.expiration_date is NULL) and pc.plan_code_id = ap.plan_code_id and lb.line_of_business_code = pc.line_of_business_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'lifesuite_version' as code_type, 'version' as code_id, lifesuite_version as code_value, '' as external_code from lifesuite_version
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'impairment_restriction' as code_type, impairment_restriction_code as code_id, impairment_text as code_value, '' as external_code from impairment_restriction
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select lang.code_value as language_code, 'impairment_restriction' as code_type, impairment_restriction_code as code_id, alt_impairment_text as code_value, '' as external_code from impairment_restriction, (select * from tl_code where code_type = 'System' a</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>nd code_id = 'AltLanguage') lang where lang.code_value is not null and alt_impairment_text is not null and rtrim(alt_impairment_text) &lt;&gt; ''
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'provider' as code_type, rtrim(provider) + '_' + rtrim(evidence_type) as code_id, us_vendor as code_value, non_us_vendor as external_code from provider
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'g_number' as code_type, g_number as code_id, g_number as code_value, '' as external_code from association_plan
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'active_product_' + lower(rtrim(ap.association_code) + '_' + rtrim(ap.g_number) + '_' + lb.line_of_business_code) as code_type, pc.plan_code_id as code_id, rtrim( pc.plan_code_id ) + '-' + pc.description as code_v</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>alue, '' as external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>from association_plan ap, line_of_business lb, tl_plan_code pc where (ap.expiration_date &gt; CURRENT_TIMESTAMP or ap.expiration_date is NULL) and pc.plan_code_id = ap.plan_code_id and lb.line_of_business_code = pc.line_of_business_code and ap.g_number is no</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>t null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'active_product_' + lower(rtrim(ap.association_code) + '__' + lb.line_of_business_code) as code_type, pc.plan_code_id as code_id, rtrim( pc.plan_code_id ) + '-' + pc.description as code_value, '' as external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>from association_plan ap, line_of_business lb, tl_plan_code pc where (ap.expiration_date &gt; CURRENT_TIMESTAMP or ap.expiration_date is NULL) and pc.plan_code_id = ap.plan_code_id and lb.line_of_business_code = pc.line_of_business_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'agency_number' as code_type, agency.agency_number as code_id, rtrim(agency.agency_number) + ' - ' + rtrim(person.last_name) as code_value, '' as external_code from agency, person where person.person_id = agency.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'Answer Set ' + rtrim(tl_answer_set_answers.answer_set_name) as code_type, rtrim(cast(tl_answer_set_answers.sequence_number as char(30))) as code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>rtrim(tl_answer_set_answers.answer_text) as code_value, rtrim(tl_answer_set_answers.alt_answer_text) as external_code from tl_answer_set_answers
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'rulebook' as code_type, cast(rulebook_id as char(30)) as code_id, rulebook_name, description as external_code from rulebook_proxy_view where type is null or type = 0
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, lower(code_type), code_id, code_value, external_code from rulebook_rate_class
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'source_partner_codes' as code_type, external_code as code_id, code_id as code_value, '' as external_code from tl_code where code_type = 'source_info_codes' and external_code is not null and rtrim(external_code) &lt;&gt; ''
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'CedentCompany' as code_type, company_code as code_id, last_name as code_value, '' as external_code from company c, person p where c.person_id = p.person_id and p.class_type = 'CedentCompany'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'CedentUnderwriter_' + lower(company_code) as code_type, cast(p2.person_id as char(30)) as code_id, rtrim (p2.last_name) + ',' + rtrim (p2.first_name) as code_value, '' as external_code from company c, person p, party_rela</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>tion pr, person p2 where c.person_id = p.person_id and p.class_type = 'CedentCompany' and p.person_id = pr.parent_id and pr.person_id = p2.person_id and p2.class_type = 'CedentUnderwriter'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'CedentContact_' + lower(company_code) as code_type, cast(p2.person_id as char(30)) as code_id, rtrim (p2.last_name) + ',' + rtrim (p2.first_name) as code_value, '' as external_code from company c, person p, party_relation</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text> pr, person p2 where c.person_id = p.person_id and p.class_type = 'CedentCompany' and p.person_id = pr.parent_id and pr.person_id = p2.person_id and p2.class_type = 'CedentContact'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'Reinsurer' as code_type, company_code as code_id, last_name as code_value, '' as external_code from company c, person p where c.person_id = p.person_id and p.class_type = 'Reinsurer'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'active_retro_company_ob' as code_type, company_code as code_id, last_name as code_value, '' as external_code from company c, person p where c.person_id = p.person_id and p.class_type = 'RetroOBCompany'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'active_retro_company_retro' as code_type, company_code as code_id, last_name as code_value, '' as external_code from company c, person p where c.person_id = p.person_id and p.class_type = 'RetroCompany'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'cedent_fax' as code_type, company_code as code_id, area_code + prefix + ph.suffix as code_value, extension as external_code from company c, person p, person_phone ph where c.person_id = p.person_id and p.person_id = ph.pe</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>rson_id and p.class_type = 'CedentCompany' and lower(ph.phone_type_code) = 'fax'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'coverage_indicator' as code_type, indicator_code as code_id, description as code_value, external_code from tl_coverage_indicator_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'address_type' as code_type, address_type_code as code_id, external_code as code_value, external_code from tl_address_type
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'benefit_type' as code_type, cast(benefit_id as char(30)) as code_id, name as code_value, '' as external_code from tl_benefit_type
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'reinsurance_vendor' as code_type, reinsurance_vendor_code as code_id, name as code_value, external_code from reinsurance_vendor
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'coverage_type' as code_type, coverage_type as code_id, description as code_value, external_code from tl_coverage_type
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'death_benefit_option' as code_type, death_benefit_option_code as code_id, external_code as code_value, external_code from tl_death_benefit_option
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'death_benefit_option_description' as code_type, death_benefit_option_code as code_id, description as code_value, '' as external_code from tl_death_benefit_option_desc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'extended_property' as code_type, property_name as code_id, description as code_value, '' as external_code from tl_extended_property
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'language' as code_type, language_code as code_id, description as code_value, external_code from tl_language
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'marital_status' as code_type, marital_status_code as code_id, description as code_value, external_code from tl_marital_status
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'person_type' as code_type, person_type_id as code_id, description as code_value, '' as external_code from tl_person_type
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'policy_status' as code_type, short_code as code_id, policy_status_code as code_value, '' as external_code from tl_policy_status
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'requirement_type' as code_type, requirement_type_id as code_id, description as code_value, '' as external_code from tl_requirement_type
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'tax_type' as code_type, tax_type_id as code_id, description as code_value, '' as external_code from tl_tax_type
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'tobacco_type' as code_type, tobacco_type_id as code_id, external_code as code_value, external_code from tl_tobacco_type
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'tobacco_use' as code_type, tobacco_use_id as code_id, external_code as code_value, external_code from tl_tobacco_use
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'address_type_description' as code_type, address_type_code as code_id, description as code_value, '' as external_code from tl_address_type_description
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'beneficiary_type' as code_type, beneficiary_type as code_id, description as code_value, '' as external_code from tl_beneficiary_type_desc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'benefit_type_description' as code_type, cast(benefit_id as char(30)) as code_id, description as code_value, '' as external_code from tl_benefit_type_description
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'note_type' as code_type, note_type as code_id, description as code_value, '' as external_code from tl_note_type_description
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'phone_type' as code_type, phone_type_code as code_id, description as code_value, '' as external_code from tl_phone_type_description
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'policy_role' as code_type, code as code_id, description as code_value, '' as external_code from tl_policy_role_description
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'purpose_of_coverage' as code_type, purpose_of_coverage_id as code_id, description as code_value, '' as external_code from tl_purpose_of_coverage_desc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'tobacco_type_description' as code_type, tobacco_type_id as code_id, description as code_value, '' as external_code from tl_tobacco_type_description
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'tobacco_use_description' as code_type, tobacco_use_id as code_id, description as code_value, '' as external_code from tl_tobacco_use_description
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'family_history_relationship' as code_type, famhist_relationship_code as code_id, famhist_relationship_code as code_value, famhist_relationship_code as external_code from tl_family_history_relationship
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'occupation' as code_type, occupation as code_id, occupation as code_value, occupation_code as external_code from occupation
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'source_info_codes' as code_type, source_info as code_id, source_description as code_value, partner_id as external_code from tl_source_info
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'distributor_codes' as code_type, distributor_code as code_id, distributor_description as code_value, '' as external_code from tl_distributor_codes
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'source_partner_codes' as code_type, partner_id as code_id, source_info as code_value, '' as external_code from tl_source_info where partner_id is not null and rtrim(partner_id) &lt;&gt; ''
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'PurposeOfCoverage' as code_type, description as code_id, purpose_of_coverage_id as code_value, '' as external_code from tl_purpose_of_coverage_desc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'policy_status' as code_type, short_code as code_id, policy_status_code as code_value, '' as external_code from tl_policy_status
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'PolicyStatus' as code_type, policy_status_code as code_id, description as code_value, '' as external_code from tl_policy_status_description
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'table_rating_reason' as code_type, reason_text as code_id, reason_text as code_value, reason_code as external_code from tl_final_action_reason where reason_status = 'Table Rating'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct lang.code_value as language_code, 'table_rating_reason' as code_type, reason_text as code_id, alt_reason_text as code_value, reason_code as external_code from tl_final_action_reason, (select * from tl_code where code_type = 'System' and c</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>ode_id = 'AltLanguage') lang where reason_status = 'Table Rating'and lang.code_value is not null and alt_reason_text is not null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'tpa_name' as code_type, t.tpa_code as code_id, p.last_name as code_value, t.tpa_short_name as external_code from tpa t, person p where t.person_id = p.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'active_aus_users' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value, rtrim(aus_user.login_id) as external_code from aus_user, person where</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text> aus_user.is_active&lt;&gt;0 and aus_user.person_id = person.person_id and (aus_user.deleted is null or aus_user.deleted = 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'aus_users' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value, rtrim(aus_user.login_id) as external_code from aus_user, person where  aus_u</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>ser.person_id = person.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'aus_users_basic' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value, rtrim(aus_user.login_id) as external_code from aus_user, person where </Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>aus_user.is_active&lt;&gt;0 and aus_user.person_id = person.person_id and (aus_user.deleted is null or aus_user.deleted = 0) and (aus_user.is_agent is null or aus_user.is_agent = 0) and (aus_user.is_agency is null or aus_user.is_agency = 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'active_underwriter' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value, rtrim(aus_user.login_id) as external_code from aus_user, person whe</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>re aus_user.is_underwriter&lt;&gt;0 and aus_user.is_active&lt;&gt;0 and aus_user.person_id = person.person_id and (aus_user.deleted is null or aus_user.deleted = 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'underwriter' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) + ' (D)' as code_value, rtrim(aus_user.login_id) as external_code from aus_user, person w</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>here aus_user.is_underwriter&lt;&gt;0 and aus_user.person_id = person.person_id and (aus_user.deleted is not null and aus_user.deleted &lt;&gt; 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'underwriter' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) + ' (I)' as code_value, rtrim(aus_user.login_id) as external_code from aus_user, person w</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>here aus_user.is_underwriter&lt;&gt;0 and aus_user.person_id = person.person_id and (aus_user.deleted is null or aus_user.deleted = 0) and (aus_user.is_active is null or aus_user.is_active = 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'underwriter' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value, rtrim(aus_user.login_id) as external_code from aus_user, person where aus_</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>user.is_underwriter&lt;&gt;0 and aus_user.person_id = person.person_id and (aus_user.deleted is null or aus_user.deleted = 0) and (aus_user.is_active is not null and aus_user.is_active &lt;&gt; 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'active_service_associate' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>rtrim(aus_user.login_id) as external_code from aus_user, person where (aus_user.is_active is not null and aus_user.is_active &lt;&gt; 0) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>(aus_user.is_service_associate is not null and aus_user.is_service_associate &lt;&gt; 0) and aus_user.person_id = person.person_id and (aus_user.deleted is null or aus_user.deleted = 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'service_associate' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) + ' (D)' as code_value,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>rtrim(aus_user.login_id) as external_code from aus_user, person where (aus_user.is_service_associate is not null and aus_user.is_service_associate &lt;&gt; 0) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>aus_user.person_id = person.person_id and (aus_user.deleted is not null and aus_user.deleted &lt;&gt; 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'service_associate' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) + ' (I)' as code_value,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>rtrim(aus_user.login_id) as external_code from aus_user, person where (aus_user.is_service_associate is not null and aus_user.is_service_associate &lt;&gt; 0) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>aus_user.person_id = person.person_id and (aus_user.deleted is null or aus_user.deleted = 0) and (aus_user.is_active is null or aus_user.is_active = 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'service_associate' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>rtrim(aus_user.login_id) as external_code from aus_user, person where (aus_user.is_service_associate is not null and aus_user.is_service_associate &lt;&gt; 0) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>aus_user.person_id = person.person_id and (aus_user.deleted is null or aus_user.deleted = 0) and (aus_user.is_active is not null and aus_user.is_active &lt;&gt; 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'underwriter_and_service_associate' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>rtrim(aus_user.login_id) as external_code from aus_user, person where ((aus_user.is_service_associate is not null and aus_user.is_service_associate &lt;&gt; 0) or
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>(aus_user.is_underwriter is not null and aus_user.is_underwriter &lt;&gt; 0)) and aus_user.person_id = person.person_id and (aus_user.deleted is null or aus_user.deleted = 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'active_team' as code_type, cast(team_id as char(30)) as code_id, team_name as code_value, '' as external_code from team where (is_active is not null and is_active &lt;&gt; 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'team' as code_type, cast(team_id as char(30)) as code_id, rtrim(team_name) + ' (D)' as code_value, '' as external_code from team where (deleted is not null and deleted &lt;&gt; 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'team' as code_type, cast(team_id as char(30)) as code_id, rtrim(team_name) + ' (I)' as code_value, '' as external_code from team where (deleted is null or deleted = 0) and (is_active is null or is_active = 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'team' as code_type, cast(team_id as char(30)) as code_id, rtrim(team_name) as code_value, '' as external_code from team where (deleted is null or deleted = 0) and (is_active is not null and is_active &lt;&gt; 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select language_code, 'benefit_' + lower(rtrim(ltrim(plan_code_id))) as code_type, cast(benefit_id as char(30)) as code_id, name as code_value, '' as external_code from plan_benefit where g_number is null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select language_code, 'benefit_' + lower(rtrim(ltrim(plan_code_id))) + '_' + lower(rtrim(ltrim(g_number))) as code_type, cast(benefit_id as char(30)) as code_id, name as code_value, '' as external_code from plan_benefit where g_number is not null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select language_code, 'benefitperiod_' + lower(rtrim(ltrim(plan_code_id))) as code_type, period_id as code_id, period as code_value, '' as external_code from benefit_period where g_number is null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select language_code, 'benefitperiod_' + lower(rtrim(ltrim(plan_code_id))) + '_' + lower(rtrim(ltrim(g_number))) as code_type, period_id as code_id, period as code_value, '' as external_code from benefit_period where g_number is not null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select language_code, 'eliminationperiod_' + lower(rtrim(ltrim(plan_code_id))) as code_type, period_id as code_id, period as code_value, '' as external_code from elimination_period where g_number is null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select language_code, 'eliminationperiod_' + lower(rtrim(ltrim(plan_code_id))) + '_' + lower(rtrim(ltrim(g_number))) as code_type, period_id as code_id, period as code_value, '' as external_code from elimination_period where g_number is not null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select language_code, 'benefit_' + lower(rtrim(ltrim(g_number))) + '_' + lower(rtrim(ltrim(plan_code_id)))  as code_type, cast(benefit_id as char(30)) as code_id, name as code_value, '' as external_code from plan_benefit where g_number is not null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select language_code, 'benefitperiod_' +  lower(rtrim(ltrim(g_number))) + '_' + lower(rtrim(ltrim(plan_code_id)))  as code_type, period_id as code_id, period as code_value, '' as external_code from benefit_period where g_number is not null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select language_code, 'eliminationperiod_' + lower(rtrim(ltrim(g_number))) + '_' + lower(rtrim(ltrim(plan_code_id)))  as code_type, period_id as code_id, period as code_value, '' as external_code from elimination_period where g_number is not null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select distinct 'en-us' as language_code, 'g_number_' + lower(rtrim(association_code)) as code_type, g_number as code_id, g_number as code_value, '' as external_code from association_plan where g_number is not null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'active_login_cm' as code_type, rtrim(aus_user.login_id) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>cast(aus_user.user_id as char(30)) as external_code from aus_user, person where (aus_user.deleted is null or aus_user.deleted = 0) and (aus_user.is_active is not null and aus_user.is_active &lt;&gt; 0) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>(aus_user.is_service_associate is not null and aus_user.is_service_associate &lt;&gt; 0) and aus_user.person_id = person.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'active_login_uw' as code_type, rtrim(aus_user.login_id) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>cast(aus_user.user_id as char(30)) as external_code from aus_user, person where (aus_user.deleted is null or aus_user.deleted = 0) and (aus_user.is_active is not null and aus_user.is_active &lt;&gt; 0) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>(aus_user.is_underwriter is not null and aus_user.is_underwriter &lt;&gt; 0) and aus_user.person_id = person.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select language_code, 'issue_request_' + code_type as code_type, code_id, code_value, external_code from tl_code where code_type in (select code_id from tl_code where language_code = 'en-us' and code_type = 'AmendmentType')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'employer' as code_type, company.company_code as code_id, person.last_name as code_value, cast(company.person_id as char(30)) as external_code from company, person where person.person_id = company.person_id and (class_type</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text> = 'Employer')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'agent_users' as code_type, cast(aus_user.user_id as char(30)) as code_id, aus_user.agent_number as code_value, rtrim(aus_user.login_id) as external_code from aus_user where aus_user.is_active&lt;&gt;0 and (aus_user.deleted is n</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>ull or aus_user.deleted = 0) and (aus_user.is_agent is not null and aus_user.is_agent &lt;&gt; 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'agency_users' as code_type, cast(aus_user.user_id as char(30)) as code_id, aus_user.agency_number as code_value, rtrim(aus_user.login_id) as external_code from aus_user where aus_user.is_active&lt;&gt;0 and (aus_user.deleted is</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text> null or aus_user.deleted = 0) and (aus_user.is_agency is not null and aus_user.is_agency &lt;&gt; 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select language_code, ('plan_' + rtrim(option_type) + '_' + rtrim(plan_code_id)) as code_type, cast(sequence_number as char(30)) as code_id, description as code_value, '' as external_code from tl_plan_option
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'trust' as code_type, company.company_code as code_id, person.last_name as code_value, cast(company.person_id as char(30)) as external_code from company, person where person.person_id = company.person_id and (class_type = </Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>'Trust')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text>select 'en-us' as language_code, 'ppo' as code_type, cast(company.person_id as char(30)) as code_id, person.last_name as code_value, cast(company.expiration_date as char(30)) as external_code from company, person where person.person_id = company.person_id</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>codes_view</VIEW_NAME><Text> and (class_type = 'PPO')
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>codes_view</VIEW_NAME><depname>rulebook_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>rulebook_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>codes_view</VIEW_NAME><depname>rulebook_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>rulebook_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>codes_view</VIEW_NAME><depname>rulebook_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>description</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>codes_view</VIEW_NAME><depname>rulebook_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>type</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>codes_view</VIEW_NAME><depname>rulebook_rate_class</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>code_type</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>codes_view</VIEW_NAME><depname>rulebook_rate_class</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>code_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>codes_view</VIEW_NAME><depname>rulebook_rate_class</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>code_value</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>codes_view</VIEW_NAME><depname>rulebook_rate_class</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>external_code</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>ss_upd_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1410378132</Check_Sum><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>
create view ss_upd_view
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	tfp.case_group_id as nyl_family_id, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.coverage_type as cvg, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.group_number as gnum, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.family_id as family, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.current_epsilon_key as dbkees, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.new_epsilon_key as dbkees2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.applicant_sex_code as sex, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.insurance_volume_applied_for as amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.member_ssn as socsec, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.applicant_address_line1 as addr1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.applicant_address_line2 as addr2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.applicant_address_line3 as addr3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.applicant_city as city, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.applicant_state_code as state, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.applicant_zip_code as zip, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.applicant_home_phone as phone1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.applicant_work_phone as phone2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.mortality_rating as rating, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.applicant_last_name as lname, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.applicant_first_name as fname, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.applicant_middle_initial as mi, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.applicant_title as leadtitle, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.applicant_trailing_title as trailtitle,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.applicant_dob as dob, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.member_last_name as mbr_lname, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.member_first_name as mbr_fname, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.member_dob as mbrdob,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mb.process_date
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	tpa_family_person tfp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	marsh_data_proxy_view mdp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	marsh_balance mb
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	tfp.tpa_family_id = cast(mdp.family_id as int) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	tfp.current_epsilon_dbkey = cast(mdp.current_epsilon_key as numeric(12,0)) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	mdp.balance_id = mb.balance_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	(mdp.record_type = 'u') and 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	(mdp.marsh_id not in
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>		(select distinct
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>			marsh_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>		 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>			marsh_error
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>		)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ss_upd_view</VIEW_NAME><Text>	)
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>marsh_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>balance_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>family_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>current_epsilon_key</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>new_epsilon_key</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>record_type</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>group_number</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>coverage_type</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>member_first_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>member_last_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>member_ssn</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>member_dob</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_title</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_first_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_last_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_middle_initial</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_trailing_title</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_sex_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_dob</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_address_line1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_address_line2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_address_line3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_city</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_state_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_zip_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_home_phone</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_work_phone</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>insurance_volume_applied_for</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ss_upd_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>mortality_rating</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>data_mart_requirement</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1719978619</Check_Sum><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>create view data_mart_requirement as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.insured_requirement_id as requirement_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.requirement_information_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.requirement_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.added_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>		ltrim(rtrim(dbo.clrLSDecrypt(ps.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ' ' + rtrim(dbo.clrLSDecrypt(ps.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 	person ps, aus_user u
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>		u.person_id = ps.person_id and u.user_id = rv.added_by
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	) as added_by_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.added_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.closed_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>		ltrim(rtrim(dbo.clrLSDecrypt(ps.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ' ' + rtrim(dbo.clrLSDecrypt(ps.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 	person ps, aus_user u
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>		u.person_id = ps.person_id and u.user_id = rv.closed_by
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	) as closed_by_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.closed_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>		tc.code_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 	tl_code tc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>		tc.language_code = 'en-us' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>		tc.code_type = 'RequirementStatus' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>		((tc.code_id = rv.closed_disposition) or
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>		(rv.closed_disposition is null and tc.code_id = 'O'))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	) as closed_disposition,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>		tc.code_value
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 	tl_code tc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>		tc.language_code = 'en-us' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>		tc.code_type = 'RequirementStatus' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>		((tc.code_id = rv.closed_disposition) or
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>		(rv.closed_disposition is null and tc.code_id = 'O'))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	) as requirement_status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.needed_for_approval_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.notify_when_satisfied,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.review_message_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.policy_person_id as applicant_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.followup_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.ordered_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.ordered_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.can_auto_approve,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.received_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.note_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.received_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>		ltrim(rtrim(dbo.clrLSDecrypt(ps.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ' ' + rtrim(dbo.clrLSDecrypt(ps.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 	person ps, aus_user u
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>		u.person_id = ps.person_id and u.user_id = rv.received_by
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	) as received_by_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.received_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.create_comment,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.provider,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.evidence_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.authorization_required,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.external_requirement_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.last_followup_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.manual_or_automatic_entry,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.new_business_until_closed,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.provider_order_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.schedule_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.complete_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	rv.alt_create_comment,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	tlr.requirement_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	tlr.requirement_category,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	tlr.expiration_days,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	tlr.followup_days,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	tlr.requirement_type_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	tlr.notify_when_received,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	tlr.is_active,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	tlr.updated_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>		ltrim(rtrim(dbo.clrLSDecrypt(ps.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ' ' + rtrim(dbo.clrLSDecrypt(ps.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 	person ps, aus_user u
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>		u.person_id = ps.person_id and u.user_id = tlr.updated_by
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	) as updated_by_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	tlr.update_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	tlr.hippa_auth_required,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	tlr.external_followup_days,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	tlr.hierarchy,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	tlr.alt_lang,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	(select description from tl_language where language_code = tlr.alt_lang
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	 select code_value from tl_code where code_type = 'language' and code_id = tlr.alt_lang) as alt_lang_description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	tlr.alt_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	requirement_view rv,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	tl_requirement tlr
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_requirement</VIEW_NAME><Text>	tlr.requirement_code = rv.requirement_code
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>clrLSDecrypt</depname><owner>dbo</owner><type>assembly scalar </type><updated>no</updated><selected>no</selected><column /></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insured_requirement_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>requirement_information_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>requirement_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>added_by</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>added_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>closed_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>closed_by</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>closed_disposition</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>needed_for_approval_flag</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>notify_when_satisfied</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>review_message_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>followup_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>ordered_by</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>can_auto_approve</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>received_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>note_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>received_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>received_by</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>create_comment</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>ordered_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>provider</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>evidence_type</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>authorization_required</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>external_requirement_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>last_followup_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>manual_or_automatic_entry</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>new_business_until_closed</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>provider_order_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>schedule_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>complete_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_requirement</VIEW_NAME><depname>requirement_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>alt_create_comment</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>ssintran_error_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1535372744</Check_Sum><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>
create view ssintran_error_view
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	tfp.case_group_id as nyl_family_id, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.marsh_id as row_id, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.record_type as updflag, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.group_number as gnum, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.coverage_type as covrtype, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.relationship_code as who, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_last_name as lname, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_first_name as fname, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_middle_initial as mi, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_title as leadtitle, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_trailing_title as trailtitle, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_dob as dob, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_address_line1 as addr1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_address_line2 as addr2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_address_line3 as addr3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_city as city, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_state_code as state, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_zip_code as zip, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_home_phone as phone1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_work_phone as phone2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_sex_code as sex, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.member_ssn as socsec, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.insurance_volume_applied_for as mnvolume, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.waiting_period as waitperiod, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.last_exam_date as dtlstexam, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.last_blood_profile_date as dtlstblood, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.mortality_rating as rating, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.legal_text_id1 as legaltxtid1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.conditional_text_id1 as condtextid1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.legal_text_id2 as legaltxtid2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.conditional_text_id2 as condtextid2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.legal_text_id3 as legaltxtid3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.conditional_text_id3 as condtextid3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	mb.start_date as dtrun, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.family_id as family, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.current_epsilon_key as dbkees, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.member_first_name as mbrname, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.member_dob as mbrdob,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	me.marsh_error_code as error_cd,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>		code_value as reason
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>		tl_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>		(code_type = 'marsh_error_code') and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>		(code_id = me.marsh_error_code)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	) as error_reason,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	me.marsh_error_detail as error_description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	mb.process_date as pdate, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.new_epsilon_key as dbkees2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_height as height, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_weight as weight
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	tpa_family_person tfp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	marsh_data_proxy_view md,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	marsh_error me, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	marsh_balance mb
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	tfp.tpa_family_id = cast(md.family_id as int) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	tfp.current_epsilon_dbkey = cast(md.current_epsilon_key as numeric(12,0)) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	mb.balance_id = md.balance_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	me.marsh_id = md.marsh_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	'' as nyl_family_id, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.marsh_id as row_id, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.record_type as updflag, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.group_number as gnum, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.coverage_type as covrtype, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.relationship_code as who, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_last_name as lname, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_first_name as fname, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_middle_initial as mi, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_title as leadtitle, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_trailing_title as trailtitle, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_dob as dob, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_address_line1 as addr1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_address_line2 as addr2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_address_line3 as addr3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_city as city, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_state_code as state, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_zip_code as zip, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_home_phone as phone1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_work_phone as phone2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_sex_code as sex, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.member_ssn as socsec, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.insurance_volume_applied_for as mnvolume, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.waiting_period as waitperiod, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.last_exam_date as dtlstexam, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.last_blood_profile_date as dtlstblood, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.mortality_rating as rating, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.legal_text_id1 as legaltxtid1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.conditional_text_id1 as condtextid1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.legal_text_id2 as legaltxtid2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.conditional_text_id2 as condtextid2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.legal_text_id3 as legaltxtid3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.conditional_text_id3 as condtextid3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	mb.start_date as dtrun, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.family_id as family, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.current_epsilon_key as dbkees, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.member_first_name as mbrname, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.member_dob as mbrdob,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	me.marsh_error_code as error_cd,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>		code_value as reason
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>		tl_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>		(code_type = 'marsh_error_code') and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>		(code_id = me.marsh_error_code)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	) as error_reason,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	me.marsh_error_detail as error_description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	mb.process_date as pdate, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.new_epsilon_key as dbkees2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_height as height, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	md.applicant_weight as weight
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	marsh_data_proxy_view md,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	marsh_error me, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	marsh_balance mb
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	mb.balance_id = md.balance_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	cast(cast(md.family_id as int) as varchar(9)) + '_' + cast(cast(md.current_epsilon_key as numeric(12,0)) as varchar(12)) not in (select cast(tpa_family_id as varchar(9))  + '_' + cast(current_epsilon_dbkey as varchar(12)) from tpa_family_person) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_error_view</VIEW_NAME><Text>	me.marsh_id = md.marsh_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>marsh_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>balance_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>family_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>current_epsilon_key</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>new_epsilon_key</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>record_type</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>group_number</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>coverage_type</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>member_first_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>member_ssn</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>member_dob</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>relationship_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_title</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_first_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_last_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_middle_initial</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_trailing_title</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_sex_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_dob</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_address_line1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_address_line2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_address_line3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_city</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_state_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_zip_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_home_phone</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_work_phone</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_height</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_weight</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>insurance_volume_applied_for</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>waiting_period</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>last_exam_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>last_blood_profile_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>mortality_rating</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>legal_text_id1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>conditional_text_id1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>legal_text_id2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>conditional_text_id2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>legal_text_id3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_error_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>conditional_text_id3</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>ssinwaiv_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1424116192</Check_Sum><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>
create view ssinwaiv_view
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.marsh_id as row_id, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.group_number as gnum, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.coverage_type as covrtype, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.applicant_last_name as lname, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.applicant_first_name as fname, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.applicant_dob as dob, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.conditional_text_id1 as condtextid1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation1_line1 as t1line1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation1_line2 as t1line2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation1_line3 as t1line3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation1_line4 as t1line4, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation1_line5 as t1line5, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation1_line6 as t1line6, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation1_line7 as t1line7, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation1_line8 as t1line8, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation1_line9 as t1line9, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation1_line10 as t1line10, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.conditional_text_id2 as condtextid2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation2_line1 as t2line1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation2_line2 as t2line2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation2_line3 as t2line3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation2_line4 as t2line4, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation2_line5 as t2line5, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation2_line6 as t2line6, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation2_line7 as t2line7, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation2_line8 as t2line8, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation2_line9 as t2line9, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation2_line10 as t2line10, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.conditional_text_id3 as condtextid3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation3_line1 as t3line1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation3_line2 as t3line2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation3_line3 as t3line3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation3_line4 as t3line4, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation3_line5 as t3line5, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation3_line6 as t3line6, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation3_line7 as t3line7, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation3_line8 as t3line8, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation3_line9 as t3line9, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.explanation3_line10 as t3line10, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.family_id as family, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.current_epsilon_key as dbkees,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mb.process_date
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	marsh_data_proxy_view mdp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	marsh_balance mb
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	mdp.balance_id = mb.balance_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	(marsh_id not in
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>		(select distinct 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>			marsh_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>		 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>			marsh_error
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>		)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssinwaiv_view</VIEW_NAME><Text>	)
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>marsh_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>balance_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>family_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>current_epsilon_key</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>group_number</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>coverage_type</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_first_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_last_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_dob</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>conditional_text_id1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation1_line1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation1_line2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation1_line3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation1_line4</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation1_line5</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation1_line6</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation1_line7</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation1_line8</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation1_line9</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation1_line10</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>conditional_text_id2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation2_line1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation2_line2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation2_line3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation2_line4</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation2_line5</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation2_line6</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation2_line7</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation2_line8</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation2_line9</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation2_line10</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>conditional_text_id3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation3_line1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation3_line2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation3_line3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation3_line4</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation3_line5</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation3_line6</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation3_line7</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation3_line8</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation3_line9</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssinwaiv_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>explanation3_line10</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>data_mart_tpa</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1282776668</Check_Sum><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>create view data_mart_tpa as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	tv.person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	tv.party_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	ltrim(rtrim(dbo.clrLSDecrypt(tv.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ' ' + rtrim(dbo.clrLSDecrypt(tv.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}'))) as full_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dbo.clrLSDecrypt(tv.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dbo.clrLSDecrypt(tv.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dbo.clrLSDecrypt(tv.middle_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as middle_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	tv.title,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	tv.suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dbo.clrLSDecrypt(tv.tax_id,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as tax_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	tv.tax_type_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	cast(dbo.clrLSDecrypt(tv.birth_date,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as datetime) as birth_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	tv.sex,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	tv.email_address,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	tv.alt_email_address,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	tv.marital_status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	tv.tpa_short_name as tpa_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	ltrim(rtrim(tv.contact_first_name) + ' ' + rtrim(tv.contact_last_name)) as contact_full_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	tv.contact_last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	tv.contact_first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	tv.auto_closure_days,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	tv.expiration_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dma.business_city,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dma.business_postal_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dma.business_address_line1,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dma.business_address_line2,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dma.business_address_line3,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dma.business_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dma.business_state_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dma.business_state_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dma.business_country_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dmp.work_phone_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dmp.work_phone_area_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dmp.work_phone_prefix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dmp.work_phone_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dmp.work_phone_extension,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dmp.work_phone_pin,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dmp.fax_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dmp.fax_area_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dmp.fax_prefix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dmp.fax_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dmp.fax_extension,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dmp.fax_pin
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	tpa_view tv,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	data_mart_address dma,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	data_mart_phone dmp
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dma.person_id = tv.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_tpa</VIEW_NAME><Text>	dmp.person_id = tv.person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>clrLSDecrypt</depname><owner>dbo</owner><type>assembly scalar </type><updated>no</updated><selected>no</selected><column /></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_city</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_postal_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_address_line1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_address_line2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_address_line3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_state_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_state_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_country_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_area_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_prefix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_suffix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_extension</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_pin</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_area_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_prefix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_suffix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_extension</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_pin</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>tpa_short_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>contact_last_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>contact_first_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>auto_closure_days</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>expiration_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>party_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>last_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>first_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>middle_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>title</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>suffix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>tax_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>tax_type_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>birth_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>sex</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>email_address</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>marital_status</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_tpa</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>alt_email_address</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>ssintran_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>305862732</Check_Sum><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>create view [dbo].[ssintran_view]
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.marsh_id as row_id, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.record_type as updflag, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.group_number as gnum, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.coverage_type as covrtype, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.relationship_code as who, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.applicant_last_name as lname, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.applicant_first_name as fname, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.applicant_middle_initial as mi, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.applicant_title as leadtitle, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.applicant_trailing_title as trailtitle, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.applicant_dob as dob, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.applicant_address_line1 as addr1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.applicant_address_line2 as addr2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.applicant_address_line3 as addr3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.applicant_city as city, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.applicant_state_code as state, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.applicant_zip_code as zip, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.applicant_home_phone as phone1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.applicant_work_phone as phone2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.applicant_sex_code as sex, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.member_ssn as socsec, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.insurance_volume_applied_for as mnvolume, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.waiting_period as waitperiod, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.last_exam_date as dtlstexam, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.last_blood_profile_date as dtlstblood, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.mortality_rating as rating, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.legal_text_id1 as legaltxtid1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.conditional_text_id1 as condtextid1, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.legal_text_id2 as legaltxtid2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.conditional_text_id2 as condtextid2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.legal_text_id3 as legaltxtid3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.conditional_text_id3 as condtextid3, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	mb.start_date as dtrun, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.family_id as family, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.current_epsilon_key as dbkees, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.member_first_name as mbrname, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.member_dob as mbrdob, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	mb.process_date as pdate, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.new_epsilon_key as dbkees2, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.applicant_height as height, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	md.applicant_weight as weight,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		rtrim(dbo.clrLSDecrypt(auv.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ', ' + rtrim(dbo.clrLSDecrypt(auv.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) as underwriter_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		aus_user_view auv,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		tpa_family_person tfp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		policy p,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		policy_person pp
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		cast(md.family_id as numeric) = tfp.tpa_family_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		cast(md.current_epsilon_key as numeric) = tfp.current_epsilon_dbkey and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		tfp.policy_person_id = pp.policy_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		pp.policy_id = p.policy_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		auv.user_id = p.underwriter_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	) as underwriter_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		rtrim(dbo.clrLSDecrypt(auv.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ', ' + rtrim(dbo.clrLSDecrypt(auv.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) as service_associate_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		aus_user_view auv,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		tpa_family_person tfp,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		policy p,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		policy_person pp
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		cast(md.family_id as numeric) = tfp.tpa_family_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		cast(md.current_epsilon_key as numeric) = tfp.current_epsilon_dbkey and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		tfp.policy_person_id = pp.policy_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		pp.policy_id = p.policy_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>		auv.user_id = p.service_associate_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	) as service_associate_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	marsh_data_proxy_view md,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	marsh_balance mb
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	mb.balance_id = md.balance_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>ssintran_view</VIEW_NAME><Text>	cast(md.error_count as char(1)) = '0'
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>last_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>first_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>user_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>clrLSDecrypt</depname><owner>dbo</owner><type>assembly scalar </type><updated>no</updated><selected>no</selected><column /></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>marsh_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>balance_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>error_count</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>family_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>current_epsilon_key</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>new_epsilon_key</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>record_type</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>group_number</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>coverage_type</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>member_first_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>member_ssn</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>member_dob</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>relationship_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_title</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_first_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_last_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_middle_initial</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_trailing_title</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_sex_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_dob</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_address_line1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_address_line2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_address_line3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_city</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_state_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_zip_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_home_phone</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_work_phone</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_height</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_weight</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insurance_volume_applied_for</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>waiting_period</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>last_exam_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>last_blood_profile_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>mortality_rating</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>legal_text_id1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>conditional_text_id1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>legal_text_id2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>conditional_text_id2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>legal_text_id3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>ssintran_view</VIEW_NAME><depname>marsh_data_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>conditional_text_id3</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-977748121</Check_Sum><CREATE_TEXT><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><Text>create view [dbo].[auto_closure_proxy_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><Text>		*
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><Text>		policy_proxy_view
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><Text>	applicant_status_short in ('PE', 'PM', 'NB', 'FA') and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><Text>	policy_person_id in
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><Text>		(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><Text>			ir.policy_person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><Text>		 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><Text>			insured_requirement ir
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><Text>		 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><Text>			((ir.closed_disposition is null or
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><Text>	 		  ir.closed_disposition in('O', 'H')) and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><Text>			 ir.ordered_date is not null) or
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><Text>			ir.closed_disposition = 'OR'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><Text>	 	)
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>company_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_number</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>priority</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_status_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_status_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>case_group_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>association_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_status_short</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_status_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>primary_plan_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>is_member</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>adverse_history</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>relationship_to_insured</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>party_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insured_title</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insured_last_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insured_middle_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insured_first_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insured_suffix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insured_tax_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insured_birth_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insured_client_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>primary_insured_flag</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insured_underwriting_amount</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>application_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>application_number</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>added_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>receive_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>reopen_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>underwriter_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>underwriter_login_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>team_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>service_associate_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>service_associate_login_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>tpa_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>cedent_policy_number</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>cedent_company_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>cedent_underwriter_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>cedent_contact_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>cedent_date_sent</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>international_or_domestic</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>idb_flag</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>currency_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>employer_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>alternate_case_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>source_info</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>auto_closure_proxy_view</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>distributor_code</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>data_mart_company</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-41979795</Check_Sum><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>create view data_mart_company as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	cv.company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dbo.clrLSDecrypt(cv.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as company_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	cv.person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	cv.party_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dbo.clrLSDecrypt(cv.tax_id,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as tax_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	cv.email_address,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	cv.alt_email_address,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	cv.class_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	cv.preferred_contact_mode,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	cv.allow_aus_approval_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	cv.correspondence_directory,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	cv.field1,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	cv.field2,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	cv.field3,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	cv.field4,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	cv.field5,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dma.business_city,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dma.business_postal_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dma.business_address_line1,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dma.business_address_line2,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dma.business_address_line3,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dma.business_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dma.business_state_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dma.business_state_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dma.business_country_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dma.billing_city,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dma.billing_postal_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dma.billing_address_line1,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dma.billing_address_line2,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dma.billing_address_line3,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dma.billing_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dma.billing_state_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dma.billing_state_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dma.billing_country_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dmp.work_phone_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dmp.work_phone_area_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dmp.work_phone_prefix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dmp.work_phone_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dmp.work_phone_extension,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dmp.work_phone_pin,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dmp.fax_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dmp.fax_area_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dmp.fax_prefix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dmp.fax_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dmp.fax_extension,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dmp.fax_pin
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	company_view cv,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	data_mart_address dma,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	data_mart_phone dmp
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dma.person_id = cv.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_company</VIEW_NAME><Text>	dmp.person_id = cv.person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>clrLSDecrypt</depname><owner>dbo</owner><type>assembly scalar </type><updated>no</updated><selected>no</selected><column /></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>party_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>last_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>tax_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>email_address</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>alt_email_address</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>preferred_contact_mode</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>class_type</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>field1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>field2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>field3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>field4</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>field5</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>company_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>allow_aus_approval_flag</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>correspondence_directory</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_city</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_postal_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_address_line1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_address_line2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_address_line3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_state_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_state_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_country_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>billing_city</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>billing_postal_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>billing_address_line1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>billing_address_line2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>billing_address_line3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>billing_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>billing_state_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>billing_state_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>billing_country_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_area_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_prefix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_suffix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_extension</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_pin</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_area_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_prefix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_suffix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_extension</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_company</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_pin</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>2015233528</Check_Sum><CREATE_TEXT><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><Text>create view [dbo].[policy_proxy_view_uw_rm_count] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><Text>	pp.*,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><Text>	rvw.unchk_rvw_count as uw_rm_count
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><Text>	unchecked_rvw_msg_count as rvw RIGHT OUTER JOIN policy_proxy_view as pp ON (rvw.policy_person_id = pp.policy_person_id)
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>company_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_number</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>priority</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_status_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_status_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>case_group_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>association_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_status_short</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_status_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>primary_plan_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>is_member</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>adverse_history</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>relationship_to_insured</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>party_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insured_title</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insured_last_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insured_middle_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insured_first_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insured_suffix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insured_tax_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insured_birth_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insured_client_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>primary_insured_flag</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>insured_underwriting_amount</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>application_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>application_number</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>added_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>receive_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>reopen_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>underwriter_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>underwriter_login_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>team_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>service_associate_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>service_associate_login_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>tpa_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>cedent_policy_number</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>cedent_company_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>cedent_underwriter_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>cedent_contact_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>cedent_date_sent</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>international_or_domestic</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>idb_flag</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>currency_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>employer_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>alternate_case_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>source_info</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>policy_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>distributor_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>unchecked_rvw_msg_count</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>policy_proxy_view_uw_rm_count</VIEW_NAME><depname>unchecked_rvw_msg_count</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>unchk_rvw_count</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>data_mart_coverage</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>836625390</Check_Sum><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>create view data_mart_coverage as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.policy_coverage_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.policy_id as case_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.plan_code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	plc.description as plan_code_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	plc.line_of_business_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		lob.name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 	line_of_business lob
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		lob.line_of_business_code = plc.line_of_business_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	) as line_of_business_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.death_benefit_option_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.purpose_of_coverage_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		poc.code_value
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 	tl_code poc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		poc.code_type = 'purpose_of_coverage' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		poc.code_id = icv.purpose_of_coverage_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		poc.language_code = 'en-us'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		poc.description
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 	tl_purpose_of_coverage_desc poc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		poc.purpose_of_coverage_id = icv.purpose_of_coverage_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	) as purpose_of_coverage,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.coverage_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.premium_mode,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.investment_objective,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.pref_date_of_withdrawl,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.planned_premium,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.initial_planned_premium,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.equivalent_age,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.can_take_final_action_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.dividend_option,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		div.code_value
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 	tl_code div
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		div.code_type = 'Dividend Type' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		div.code_id = icv.dividend_option and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		div.language_code = 'en-us'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		div.code_value
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 	tl_acord_codes div
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		div.code_type = 'Dividend Type' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		div.code_id = icv.dividend_option
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	) as dividend_option_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.approved_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.policy_person_id as applicant_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.coverage_person_id as coverage_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.perm_flat_extra_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.temp_flat_extra_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.temp_flat_extra_period,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.flat_extra_reason,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.temp_table_rating,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.temp_table_rating_reason,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.rate_class_quoted,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.rate_class_approved,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.rate_class_issued,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.aviation_exclusion,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.perm_table_rating,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.perm_table_rating_reason,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.coverage_status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.reason_text,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.is_smoker,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.business_ownership_percent,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.final_action_by_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		ltrim(rtrim(dbo.clrLSDecrypt(ps.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ' ' + rtrim(dbo.clrLSDecrypt(ps.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 	person ps, aus_user u
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		u.person_id = ps.person_id and u.user_id = icv.final_action_by_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	) as final_action_by_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.final_action_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.final_action_note,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.elimination_days,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.payout_frequency,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.waiting_period,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.g_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.relationship_to_insured_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.web_quoted_class,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.modal_premium_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.issued_times_standard,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.jls_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.split_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.reinsurance_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.rated_up_age,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.reinsurance_company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	(select dbo.clrLSDecrypt(cpv.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') from company_view cpv where cpv.company_code = icv.reinsurance_company_code) as reinsurance_company_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	insured_coverages_view icv,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	tl_plan_code plc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	plc.plan_code_id = icv.plan_code_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.coverage_status is not null
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.policy_coverage_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.policy_id as case_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.plan_code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	plc.description as plan_code_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	plc.line_of_business_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		lob.name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 	line_of_business lob
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		lob.line_of_business_code = plc.line_of_business_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	) as line_of_business_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.death_benefit_option_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.purpose_of_coverage_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		poc.code_value
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 	tl_code poc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		poc.code_type = 'purpose_of_coverage' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		poc.code_id = icv.purpose_of_coverage_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		poc.language_code = 'en-us'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		poc.description
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 	tl_purpose_of_coverage_desc poc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		poc.purpose_of_coverage_id = icv.purpose_of_coverage_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	) as purpose_of_coverage,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.coverage_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.premium_mode,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.investment_objective,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.pref_date_of_withdrawl,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.planned_premium,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.initial_planned_premium,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.equivalent_age,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.can_take_final_action_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.dividend_option,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		div.code_value
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 	tl_code div
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		div.code_type = 'Dividend Type' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		div.code_id = icv.dividend_option and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		div.language_code = 'en-us'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		div.code_value
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 	tl_acord_codes div
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		div.code_type = 'Dividend Type' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		div.code_id = icv.dividend_option
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	) as dividend_option_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.approved_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.policy_person_id as applicant_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.coverage_person_id as coverage_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.perm_flat_extra_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.temp_flat_extra_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.temp_flat_extra_period,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.flat_extra_reason,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.temp_table_rating,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.temp_table_rating_reason,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.rate_class_quoted,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.rate_class_approved,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.rate_class_issued,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.aviation_exclusion,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.perm_table_rating,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.perm_table_rating_reason,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	'Pending' as coverage_status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.reason_text,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.is_smoker,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.business_ownership_percent,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.final_action_by_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		ltrim(rtrim(dbo.clrLSDecrypt(ps.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ' ' + rtrim(dbo.clrLSDecrypt(ps.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 	person ps, aus_user u
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>		u.person_id = ps.person_id and u.user_id = icv.final_action_by_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	) as final_action_by_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.final_action_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.final_action_note,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.elimination_days,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.payout_frequency,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.waiting_period,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.g_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.relationship_to_insured_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.web_quoted_class,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.modal_premium_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.issued_times_standard,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.jls_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.split_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.reinsurance_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.rated_up_age,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.reinsurance_company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	(select dbo.clrLSDecrypt(cpv.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') from company_view cpv where cpv.company_code = icv.reinsurance_company_code) as reinsurance_company_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	insured_coverages_view icv,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	tl_plan_code plc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	plc.plan_code_id = icv.plan_code_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_coverage</VIEW_NAME><Text>	icv.coverage_status is null
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>clrLSDecrypt</depname><owner>dbo</owner><type>assembly scalar </type><updated>no</updated><selected>no</selected><column /></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>last_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>company_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_coverage_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>plan_code_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>death_benefit_option_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>purpose_of_coverage_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>coverage_type</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>amount</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>premium_mode</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>investment_objective</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>pref_date_of_withdrawl</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>planned_premium</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>initial_planned_premium</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>equivalent_age</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>can_take_final_action_flag</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>dividend_option</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>approved_amount</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>modal_premium_amount</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>relationship_to_insured_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>coverage_person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>perm_flat_extra_amount</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>temp_flat_extra_amount</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>temp_flat_extra_period</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>flat_extra_reason</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>temp_table_rating</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>temp_table_rating_reason</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>rate_class_quoted</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>rate_class_approved</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>rate_class_issued</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>aviation_exclusion</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>perm_table_rating</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>perm_table_rating_reason</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>coverage_status</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>reason_text</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>is_smoker</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>final_action_note</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_ownership_percent</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>final_action_by_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>final_action_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>elimination_days</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>payout_frequency</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>waiting_period</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>g_number</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>web_quoted_class</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>issued_times_standard</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>jls_flag</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>split_flag</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>reinsurance_company_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>reinsurance_amount</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_coverage</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>rated_up_age</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>data_mart_user</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-400017736</Check_Sum><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>create view data_mart_user as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.party_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	ltrim(rtrim(dbo.clrLSDecrypt(uv.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ' ' + rtrim(dbo.clrLSDecrypt(uv.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}'))) as full_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dbo.clrLSDecrypt(uv.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dbo.clrLSDecrypt(uv.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dbo.clrLSDecrypt(uv.middle_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as middle_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.title,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dbo.clrLSDecrypt(uv.tax_id,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as tax_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.tax_type_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	cast(dbo.clrLSDecrypt(uv.birth_date,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as datetime) as birth_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.sex,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.email_address,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.alt_email_address,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.marital_status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.user_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.login_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.password,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.is_active,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.preferred_language_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.level_of_authority,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.is_underwriter,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.is_service_associate,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.role_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.is_agent,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.agent_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.is_agency,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.agency_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	asr.name as role_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.restrict_to_teams,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.job_title,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.account_locked,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.account_locked_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.bad_login_attempt_count,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.last_bad_login_attempt_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.must_change_password,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	uv.last_password_change_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dma.business_city,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dma.business_postal_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dma.business_address_line1,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dma.business_address_line2,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dma.business_address_line3,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dma.business_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dma.business_state_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dma.business_state_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dma.business_country_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dmp.work_phone_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dmp.work_phone_area_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dmp.work_phone_prefix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dmp.work_phone_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dmp.work_phone_extension,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dmp.work_phone_pin,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dmp.fax_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dmp.fax_area_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dmp.fax_prefix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dmp.fax_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dmp.fax_extension,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dmp.fax_pin
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	aus_user_view uv,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	aus_security_roles asr,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	data_mart_address dma,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	data_mart_phone dmp
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	asr.role_id = uv.role_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dma.person_id = uv.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_user</VIEW_NAME><Text>	dmp.person_id = uv.person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>party_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>last_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>first_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>middle_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>title</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>suffix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>tax_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>tax_type_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>birth_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>sex</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>preferred_language_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>email_address</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>marital_status</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>alt_email_address</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>user_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>login_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>password</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>is_active</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>level_of_authority</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>is_underwriter</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>restrict_to_teams</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>role_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>is_service_associate</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>job_title</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>account_locked</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>account_locked_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>bad_login_attempt_count</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>last_bad_login_attempt_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>must_change_password</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>last_password_change_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>is_agent</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>agent_number</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>is_agency</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>aus_user_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>agency_number</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>clrLSDecrypt</depname><owner>dbo</owner><type>assembly scalar </type><updated>no</updated><selected>no</selected><column /></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_city</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_postal_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_address_line1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_address_line2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_address_line3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_state_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_state_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_country_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_area_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_prefix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_suffix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_extension</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_pin</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_area_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_prefix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_suffix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_extension</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_user</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_pin</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>data_mart_party</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>68579171</Check_Sum><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>create view data_mart_party as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.case_party_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.case_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.party_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.relation,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.party_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ltrim(rtrim(dbo.clrLSDecrypt(ppv.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ' ' + rtrim(dbo.clrLSDecrypt(ppv.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}'))) as full_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dbo.clrLSDecrypt(ppv.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dbo.clrLSDecrypt(ppv.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dbo.clrLSDecrypt(ppv.middle_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as middle_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.title,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dbo.clrLSDecrypt(ppv.tax_id,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as tax_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.tax_type_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	cast(dbo.clrLSDecrypt(ppv.birth_date,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as datetime) as birth_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.sex,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.email_address,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.alt_email_address,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.marital_status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.client_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.class_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.preferred_contact_mode,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.field1,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.field2,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.field3,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.field4,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	ppv.field5,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.residence_city,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.residence_postal_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.residence_address_line1,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.residence_address_line2,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.residence_address_line3,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.residence_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.residence_state_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.residence_state_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.residence_country_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.business_city,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.business_postal_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.business_address_line1,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.business_address_line2,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.business_address_line3,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.business_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.business_state_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.business_state_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.business_country_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.billing_city,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.billing_postal_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.billing_address_line1,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.billing_address_line2,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.billing_address_line3,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.billing_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.billing_state_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.billing_state_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.billing_country_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dmp.home_phone_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dmp.home_phone_area_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dmp.home_phone_prefix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dmp.home_phone_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dmp.home_phone_extension,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dmp.home_phone_pin,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dmp.work_phone_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dmp.work_phone_area_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dmp.work_phone_prefix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dmp.work_phone_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dmp.work_phone_extension,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dmp.work_phone_pin,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dmp.fax_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dmp.fax_area_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dmp.fax_prefix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dmp.fax_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dmp.fax_extension,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dmp.fax_pin
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	party_proxy_view ppv,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	data_mart_address dma,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	data_mart_phone dmp
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dma.person_id = ppv.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_party</VIEW_NAME><Text>	dmp.person_id = ppv.person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>clrLSDecrypt</depname><owner>dbo</owner><type>assembly scalar </type><updated>no</updated><selected>no</selected><column /></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>residence_city</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>residence_postal_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>residence_address_line1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>residence_address_line2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>residence_address_line3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>residence_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>residence_state_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>residence_state_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>residence_country_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_city</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_postal_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_address_line1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_address_line2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_address_line3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_state_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_state_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_country_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>billing_city</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>billing_postal_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>billing_address_line1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>billing_address_line2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>billing_address_line3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>billing_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>billing_state_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>billing_state_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>billing_country_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>home_phone_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>home_phone_area_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>home_phone_prefix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>home_phone_suffix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>home_phone_extension</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>home_phone_pin</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_area_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_prefix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_suffix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_extension</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_pin</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_area_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_prefix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_suffix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_extension</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_pin</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>case_party_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>case_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>party_type</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>relation</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>party_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>last_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>first_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>middle_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>title</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>suffix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>tax_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>tax_type_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>birth_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>sex</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>email_address</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>marital_status</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>client_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>alt_email_address</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>preferred_contact_mode</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>class_type</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>field1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>field2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>field3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>field4</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_party</VIEW_NAME><depname>party_proxy_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>field5</column></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>data_mart_applicant</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>1796517715</Check_Sum><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text /></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>create view data_mart_applicant as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.policy_id as case_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select dbo.clrLSDecrypt(cpv.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') from company_view cpv where cpv.company_code = p.company_code) as company_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.policy_number as case_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.application_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.issue_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.underwriter_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ', ' + rtrim(dbo.clrLSDecrypt(ps.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 	person ps, aus_user u
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		u.person_id = ps.person_id and u.user_id = p.underwriter_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as underwriter_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.team_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		tm.team_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		team tm
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		tm.team_id = p.team_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as team_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.application_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.agent_signed_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.policy_status_code as case_status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.policy_status_date as case_status_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.receive_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.payment_mode_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		pmod.code_value
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		tl_acord_codes pmod
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		pmod.code_type = 'PaymentMode' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		pmod.code_id = p.payment_mode_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		pmod.code_value
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		tl_acord_codes pmod
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		pmod.code_type = 'PaymentMode' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		pmod.code_id = p.payment_mode_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as payment_mode_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.payment_method_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		pmeth.code_value
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		tl_acord_codes pmeth
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		pmeth.code_type = 'PaymentMethod' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		pmeth.code_id = p.payment_method_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		pmeth.code_value
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		tl_acord_codes pmeth
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		pmeth.code_type = 'PaymentMethod' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		pmeth.code_id = p.payment_method_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as payment_method_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.last_underwrite_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.allow_aus_approval,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select top 1 final_action_by_id from insured_coverages_view where policy_person_id = i.policy_person_id) as final_action_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ', ' + rtrim(dbo.clrLSDecrypt(ps.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 	person ps, aus_user u
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		u.person_id = ps.person_id and u.user_id = (select top 1 final_action_by_id from insured_coverages_view where policy_person_id = i.policy_person_id)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as final_action_by_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select top 1 final_action_date from insured_coverages_view where policy_person_id = i.policy_person_id) as final_action_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select top 1 final_action_note from insured_coverages_view where policy_person_id = i.policy_person_id) as final_action_note,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select top 1 reason_text from insured_coverages_view where policy_person_id = i.policy_person_id) as reason_text,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.reinsurance_indicator,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.reinsurance_vendor_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		riv.name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		reinsurance_vendor riv
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		riv.reinsurance_vendor_code = p.reinsurance_vendor_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as reinsurance_vendor_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.updated_by as case_updated_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ', ' + rtrim(dbo.clrLSDecrypt(ps.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 	person ps, aus_user u
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		u.person_id = ps.person_id and u.user_id = p.updated_by
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as case_updated_by_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.updated_date as case_updated_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.added_by case_added_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ', ' + rtrim(dbo.clrLSDecrypt(ps.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 	person ps, aus_user u
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		u.person_id = ps.person_id and u.user_id = p.added_by
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as case_added_by_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.added_date as case_added_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.cwa_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.cwa_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.priority,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dbo.clrLSDecrypt(p.bank_rounting_number,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as bank_routing_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dbo.clrLSDecrypt(p.bank_account_number,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as bank_account_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.credit_card_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		credit.code_value
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		tl_acord_codes credit
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		credit.code_type = 'Credit Card Type' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		credit.code_id = p.credit_card_type
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		credit.code_value
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		tl_acord_codes credit
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		credit.code_type = 'Credit Card Type' and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		credit.code_id = p.credit_card_type
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as credit_card_type_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dbo.clrLSDecrypt(p.credit_card_number,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as credit_card_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dbo.clrLSDecrypt(p.credit_card_expiration_year,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as credit_card_expiration_year,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dbo.clrLSDecrypt(p.credit_card_expiration_month,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as credit_card_expiration_month,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.list_bill_location,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.list_bill_employee_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.bill_day,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.marketing_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.mode_premium,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.requested_issue_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.case_group_id as case_family_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		value
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		object_property
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		object_id = p.policy_id and name = 'TPAFamilyId'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as tpa_family_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		value
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		object_property
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		object_id = i.policy_person_id and name = 'CurrentEpsilonKey'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as current_epsilon_dbkey,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.service_associate_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ', ' + rtrim(dbo.clrLSDecrypt(ps.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 	person ps, aus_user u
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		u.person_id = ps.person_id and u.user_id = p.service_associate_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as service_associate_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.association_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		assoc.name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		association assoc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		assoc.association_code = p.association_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as association_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		tv.tpa_short_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 	tpa_view tv
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 	tv.tpa_code = p.tpa_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as tpa_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		ltrim(rtrim(dbo.clrLSDecrypt(tv.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 	tpa_view tv
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 	tv.tpa_code = p.tpa_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as tpa_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.amex_account,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.performed_jet_issue_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.source_info,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select source_description from tl_source_info where source_info = p.source_info
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 select code_value from tl_code where code_type = 'source_info' and code_id = p.source_info and language_code = 'en-us') as source_description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select partner_id from tl_source_info where source_info = p.source_info
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 select external_code from tl_code where code_type = 'source_info' and code_id = p.source_info and language_code = 'en-us') as partner_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.lead_number_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.distributor_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select distributor_description from tl_distributor_codes where distributor_code = p.distributor_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 select code_value from tl_code where code_type = 'distributor_codes' and code_id = p.distributor_code and language_code = 'en-us') as distributor_description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.alternate_case_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select top 1 agent_number from agent_view where policy_id = p.policy_id and agent_number is not null) as agent_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select top 1 ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ', ' + rtrim(dbo.clrLSDecrypt(ps.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}'))) from person ps, agent_view av where av.person_id = ps.person_id a</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>nd av.policy_id = p.policy_id and av.agent_number is not null) as agent_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select top 1 agency_number from agency_view where policy_id = p.policy_id) as agency_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select top 1 routing_number from agency_view where policy_id = p.policy_id) as routing_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select top 1 rtrim(dbo.clrLSDecrypt(ps.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) from person ps, agency_view av where av.person_id = ps.person_id and av.policy_id = p.policy_id) as agency_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.cedent_policy_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.cedent_company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select dbo.clrLSDecrypt(cpv.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') from company_view cpv where cpv.company_code = p.cedent_company_code) as cedent_company_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.cedent_fax_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.cedent_underwriter_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ', ' + rtrim(dbo.clrLSDecrypt(ps.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 	person ps
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		p.cedent_underwriter_id = ps.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as cedent_underwriter_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.cedent_contact_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ', ' + rtrim(dbo.clrLSDecrypt(ps.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 	person ps
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		p.cedent_contact_id = ps.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as cedent_contact_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.cedent_date_sent,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.international_or_domestic,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.idb_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.currency_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select code_value from tl_code where code_type = 'currency_code' and code_id = p.currency_code and language_code = 'en-us') as currency_description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.preferred_language_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select description from tl_language where language_code = p.preferred_language_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 select code_value from tl_code where code_type = 'language' and code_id = p.preferred_language_code and language_code = 'en-us') as preferred_language_description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	p.teleunderwriting_indicator,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.person_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.party_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.policy_person_id as applicant_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	rtrim(dbo.clrLSDecrypt(i.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ', ' + rtrim(dbo.clrLSDecrypt(i.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) as full_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dbo.clrLSDecrypt(i.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dbo.clrLSDecrypt(i.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dbo.clrLSDecrypt(i.middle_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as middle_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.title,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dbo.clrLSDecrypt(i.tax_id,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as tax_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.tax_type_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	cast(dbo.clrLSDecrypt(i.birth_date,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as datetime) as birth_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(cast(CURRENT_TIMESTAMP - cast(dbo.clrLSDecrypt(i.birth_date,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}') as datetime) as int)/365) as age,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.sex,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.email_address,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.alt_email_address,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.marital_status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.client_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.signed_state_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		ssn.state_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		tl_country_state ssn
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		ssn.country_state_id = i.signed_state_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as signed_state_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.underwriting_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select top 1 issue_age from insured_coverages_view where policy_person_id = i.policy_person_id) as issue_age,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.primary_insured_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.aviation_exclusion,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.add_uw_amt,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select code_value from tl_code where code_type = 'applicant_status' and code_id = i.applicant_status and language_code = 'en-us') as applicant_status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.applicant_status as applicant_status_short,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.applicant_status_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.is_member,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.allow_auto_approval,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.adverse_history,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.und_allow_auto_approval,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.und_allow_jet_issue,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.und_allow_auto_ordering,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.added_date as applicant_added_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.added_by as applicant_added_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ', ' + rtrim(dbo.clrLSDecrypt(ps.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 	person ps, aus_user u
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		u.person_id = ps.person_id and u.user_id = i.added_by
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as applicant_added_by_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.reopen_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.retro_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.aviation_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.entertainer_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.sports_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.foreign_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.additional_in_force,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.relationship_to_insured as relationship_to_insured_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select code_value from tl_acord_codes where code_type = 'VPI Relation RoleCode' and cast(code_id as char(30)) = i.relationship_to_insured
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 select code_value from tl_code where code_type = 'VPI Relation RoleCode' and cast(code_id as char(30)) = i.relationship_to_insured and language_code = 'en-us') as relationship_to_insured,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select top 1 plan_code_id from insured_coverages_view where policy_person_id = i.policy_person_id) as plan_code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select top 1 planned_premium from insured_coverages_view where policy_person_id = i.policy_person_id) as planned_premium,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select top 1 web_quoted_class from insured_coverages_view where policy_person_id = i.policy_person_id) as web_quoted_class,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select top 1 rate_class_quoted from insured_coverages_view where policy_person_id = i.policy_person_id) as rate_class_quoted,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select top 1 rate_class_approved from insured_coverages_view where policy_person_id = i.policy_person_id) as rate_class_approved,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select top 1 rate_class_issued from insured_coverages_view where policy_person_id = i.policy_person_id) as rate_class_issued,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select top 1 amount from insured_coverages_view where policy_person_id = i.policy_person_id) as amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select top 1 perm_table_rating from insured_coverages_view where policy_person_id = i.policy_person_id) as perm_table_rating,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select top 1 perm_flat_extra_amount from insured_coverages_view where policy_person_id = i.policy_person_id) as perm_flat_extra_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dma.residence_city,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dma.residence_postal_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dma.residence_address_line1,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dma.residence_address_line2,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dma.residence_address_line3,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dma.residence_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dma.residence_state_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dma.residence_state_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dma.residence_country_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dma.business_city,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dma.business_postal_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dma.business_address_line1,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dma.business_address_line2,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dma.business_address_line3,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dma.business_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dma.business_state_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dma.business_state_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dma.business_country_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dmp.home_phone_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dmp.home_phone_area_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dmp.home_phone_prefix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dmp.home_phone_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dmp.home_phone_extension,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dmp.home_phone_pin,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dmp.work_phone_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dmp.work_phone_area_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dmp.work_phone_prefix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dmp.work_phone_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dmp.work_phone_extension,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dmp.work_phone_pin,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dmp.fax_country_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dmp.fax_area_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dmp.fax_prefix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dmp.fax_suffix,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dmp.fax_extension,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dmp.fax_pin,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.create_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.expiration_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.manual_entry_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.income,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.net_worth,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.total_inforce,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.replacement_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.replacement_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select tobacco_use_id from tobacco where requirement_information_id = ap.requirement_information_id) as smoker_status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.birth_country,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		bc.country_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		tl_country bc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		bc.country_id = ap.birth_country
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as birth_country_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.birth_state,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		bsn.state_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		tl_country_state bsn
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		bsn.country_state_id = ap.birth_state
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as birth_state_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.drivers_license_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.drivers_license_country_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		drc.country_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		tl_country drc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		drc.country_id = ap.drivers_license_country_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as drivers_license_country_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.drivers_license_state,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		drsn.state_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		tl_country_state drsn
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		drsn.country_state_id = ap.drivers_license_state
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as drivers_license_state_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.bankruptcy_disposition,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.bankruptcy_discharge_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.occupation,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.height_inches,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.weight_pounds,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.weght_previous_year,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.reason_for_weight_change,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.waist_inches,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.last_md_visit,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.last_md_result,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.added_by as application_added_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ', ' + rtrim(dbo.clrLSDecrypt(ps.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 	person ps, aus_user u
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		u.person_id = ps.person_id and u.user_id = ap.added_by
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as application_added_by_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.added_date as application_added_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.updated_by as application_updated_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')) + ', ' + rtrim(dbo.clrLSDecrypt(ps.first_name,'{ECEB2AFD-D1D2-4b8f-870D-3C840CB1023B}')))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 	person ps, aus_user u
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		u.person_id = ps.person_id and u.user_id = ap.updated_by
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as application_updated_by_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.update_date as application_updated_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.beneficiary_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.medical_authorization_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.citizenship_country_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		cc.country_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		tl_country cc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		cc.country_id = ap.citizenship_country_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as citizenship_country_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.doctor_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.doctor_addr,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.doctor_city,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.doctor_state,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		docsn.state_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		tl_country_state docsn
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>		docsn.country_state_id = ap.doctor_state
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	) as doctor_state_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.doctor_zip,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.last_visit_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.visit_reason,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.findings,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.treatments,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.still_under_treatment_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.prior_consultations_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.prior_consultation_detail,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.unearned_income,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.employer,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.years_at_employer,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.employer_address,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.income_prev_year,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.visa_type,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.job_duties,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.hippa_authorization_flag,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.monthly_expense,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.last_blood_profile_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.best_day_to_call,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.best_time_to_call,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.systolic_bp_reading,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.diastolic_bp_reading,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.cholesterol_reading,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.issue_state,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.business_income,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.business_net_worth,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.book_value,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.market_value,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.inspection_income,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.inspection_net_worth,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.inspection_business_income,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.inspection_business_net_worth,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.inspection_book_value,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.inspection_market_value,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.statement_income,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.statement_net_worth,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.statement_business_income,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.statement_business_net_worth,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.statement_book_value,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.statement_market_value,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.other_income,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.other_net_worth,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.other_business_income,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.other_business_net_worth,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.other_book_value,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.other_market_value
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	policy p,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	insured i,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	application_info_view ap,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	data_mart_address dma,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	data_mart_phone dmp
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	i.policy_id = p.policy_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	ap.policy_person_id = i.policy_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dma.person_id = i.person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>data_mart_applicant</VIEW_NAME><Text>	dmp.person_id = i.person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>agency_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>agency_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>agency_number</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>agency_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>routing_number</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>agency_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>agent_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>agent_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>agent_number</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>agent_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>create_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>expiration_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>requirement_information_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>manual_entry_flag</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>income</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>net_worth</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>total_inforce</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>replacement_amount</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>replacement_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>birth_country</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>drivers_license_number</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>drivers_license_country_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>drivers_license_state</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>bankruptcy_disposition</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>bankruptcy_discharge_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>occupation</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>height_inches</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>weight_pounds</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>weght_previous_year</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>reason_for_weight_change</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>waist_inches</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>last_md_visit</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>last_md_result</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>added_by</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>added_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>updated_by</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>update_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>beneficiary_type</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>medical_authorization_flag</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>citizenship_country_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>doctor_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>doctor_addr</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>doctor_city</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>doctor_state</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>doctor_zip</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>last_visit_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>visit_reason</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>findings</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>treatments</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>still_under_treatment_flag</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>prior_consultations_flag</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>prior_consultation_detail</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>unearned_income</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>employer</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>years_at_employer</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>employer_address</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>income_prev_year</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>visa_type</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>job_duties</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>birth_state</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>hippa_authorization_flag</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>monthly_expense</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>last_blood_profile_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>best_day_to_call</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>best_time_to_call</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>systolic_bp_reading</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>diastolic_bp_reading</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>cholesterol_reading</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>issue_state</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_income</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_net_worth</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>book_value</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>market_value</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>inspection_income</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>inspection_net_worth</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>inspection_business_income</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>inspection_business_net_worth</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>inspection_book_value</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>inspection_market_value</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>statement_income</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>statement_net_worth</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>statement_business_income</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>statement_business_net_worth</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>statement_book_value</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>statement_market_value</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>other_income</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>other_net_worth</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>other_business_income</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>other_business_net_worth</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>other_book_value</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>other_market_value</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>clrLSDecrypt</depname><owner>dbo</owner><type>assembly scalar </type><updated>no</updated><selected>no</selected><column /></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>last_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>company_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>company_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>residence_city</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>residence_postal_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>residence_address_line1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>residence_address_line2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>residence_address_line3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>residence_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>residence_state_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>residence_state_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>residence_country_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_city</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_postal_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_address_line1</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_address_line2</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_address_line3</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_state_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_state_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_address</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>business_country_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>home_phone_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>home_phone_area_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>home_phone_prefix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>home_phone_suffix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>home_phone_extension</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>home_phone_pin</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_area_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_prefix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_suffix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_extension</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>work_phone_pin</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_country_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_area_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_prefix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_suffix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_extension</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>data_mart_phone</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>fax_pin</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>party_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>last_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>first_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>middle_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>title</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>suffix</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>tax_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>tax_type_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>birth_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>sex</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>email_address</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>marital_status</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>client_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>alt_email_address</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>signed_state_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>underwriting_amount</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>primary_insured_flag</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>aviation_exclusion</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>add_uw_amt</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_status</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>applicant_status_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>is_member</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>allow_auto_approval</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>adverse_history</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>und_allow_auto_approval</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>und_allow_jet_issue</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>und_allow_auto_ordering</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>added_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>added_by</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>reopen_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>retro_type</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>aviation_flag</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>entertainer_flag</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>sports_flag</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>foreign_flag</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>additional_in_force</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>relationship_to_insured</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>plan_code_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>amount</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>planned_premium</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>policy_person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>perm_flat_extra_amount</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>rate_class_quoted</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>rate_class_approved</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>rate_class_issued</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>perm_table_rating</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>reason_text</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>final_action_note</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>final_action_by_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>final_action_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>web_quoted_class</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>issue_age</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>tpa_code</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>tpa_short_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>data_mart_applicant</VIEW_NAME><depname>tpa_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>yes</selected><column>last_name</column></VIEW_DEPENDS></VIEW><SPROC Action="Alter"><SPROC_NAME>usp_AUS_CheckLogon</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-196369340</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_CheckLogon</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_CheckLogon
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_CheckLogon</SPROC_NAME><Text>@LogonID as Varchar(50),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_CheckLogon</SPROC_NAME><Text>@Password as Varchar(8)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_CheckLogon</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_CheckLogon</SPROC_NAME><Text>Declare @UserID as Integer
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_CheckLogon</SPROC_NAME><Text>Set @UserID = (SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_CheckLogon</SPROC_NAME><Text>user_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_CheckLogon</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_CheckLogon</SPROC_NAME><Text>aus_user
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_CheckLogon</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_CheckLogon</SPROC_NAME><Text>login_id = @LogonID And
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_CheckLogon</SPROC_NAME><Text>password = @Password)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_CheckLogon</SPROC_NAME><Text>If (@UserID &gt;= 0)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_CheckLogon</SPROC_NAME><Text>Return @UserID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_CheckLogon</SPROC_NAME><Text>Else
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_CheckLogon</SPROC_NAME><Text>Return -1
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_CheckLogon</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>452094538</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_DeleteCoverage
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@policy_coverage_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@amount numeric(12),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@amount1 numeric(12),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@can_take_final_action_flag int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@can_take_final_action_flag1 int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@coverage_status char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@coverage_status1 char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@coverage_type char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@coverage_type1 char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@death_benefit_option_code char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@death_benefit_option_code1 char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@equivalent_age int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@equivalent_age1 int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@perm_flat_extra_amount numeric(5,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@perm_flat_extra_amount1 numeric(5,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@temp_flat_extra_amount numeric(5,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@temp_flat_extra_amount1 numeric(5,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@temp_flat_extra_period int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@temp_flat_extra_period1 int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@flat_extra_reason varchar(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@flat_extra_reason1 varchar(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@indicator_code char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@indicator_code1 char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@initial_planned_premium numeric(12,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@initial_planned_premium1 numeric(12,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@investment_objective char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@investment_objective1 char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@perm_table_rating char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@perm_table_rating1 char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@perm_table_reason varchar(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@perm_table_reason1 varchar(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@plan_code_id char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@plan_code_id1 char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@planned_premium numeric(12,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@planned_premium1 numeric(12,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@policy_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@policy_id1 int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@pref_date_of_withdrawl datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@pref_date_of_withdrawl1 datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@premium_mode char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@premium_mode1 char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@purpose_of_coverage_id char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@purpose_of_coverage_id1 char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@temp_table_rating char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@temp_table_rating1 char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@temp_table_reason varchar(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>@temp_table_reason1 varchar(100)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>SET NOCOUNT OFF;
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>DELETE FROM policy_coverage WHERE (policy_coverage_id = @policy_coverage_id) AND (amount = @amount OR @amount1 IS NULL AND amount IS NULL) AND (can_take_final_action_flag = @can_take_final_action_flag OR @can_take_final_action_flag1 IS NULL AND can_take_f</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>inal_action_flag IS NULL) AND (coverage_status = @coverage_status OR @coverage_status1 IS NULL AND coverage_status IS NULL) AND (coverage_type = @coverage_type OR @coverage_type1 IS NULL AND coverage_type IS NULL) AND (death_benefit_option_code = @death_b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>enefit_option_code OR @death_benefit_option_code1 IS NULL AND death_benefit_option_code IS NULL) AND (equivalent_age = @equivalent_age OR @equivalent_age1 IS NULL AND equivalent_age IS NULL) AND (perm_flat_extra_amount = @perm_flat_extra_amount OR @perm_f</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>lat_extra_amount1 IS NULL AND perm_flat_extra_amount IS NULL) AND (temp_flat_extra_amount = @temp_flat_extra_amount OR @temp_flat_extra_amount1 IS NULL AND temp_flat_extra_amount IS NULL) AND (temp_flat_extra_period = @temp_flat_extra_period OR @temp_flat</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>_extra_period1 IS NULL AND temp_flat_extra_period IS NULL) AND (flat_extra_reason = @flat_extra_reason OR @flat_extra_reason1 IS NULL AND flat_extra_reason IS NULL) AND (indicator_code = @indicator_code OR @indicator_code1 IS NULL AND indicator_code IS NU</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>LL) AND (initial_planned_premium = @initial_planned_premium OR @initial_planned_premium1 IS NULL AND initial_planned_premium IS NULL) AND (investment_objective = @investment_objective OR @investment_objective1 IS NULL AND investment_objective IS NULL) AND</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text> (perm_table_rating = @perm_table_rating OR @perm_table_rating1 IS NULL AND perm_table_rating IS NULL) AND (perm_table_reason = @perm_table_reason OR @perm_table_reason1 IS NULL AND perm_table_reason IS NULL) AND (plan_code_id = @plan_code_id OR @plan_cod</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>e_id1 IS NULL AND plan_code_id IS NULL) AND (planned_premium = @planned_premium OR @planned_premium1 IS NULL AND planned_premium IS NULL) AND (policy_id = @policy_id OR @policy_id1 IS NULL AND policy_id IS NULL) AND (pref_date_of_withdrawl = @pref_date_of</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>_withdrawl OR @pref_date_of_withdrawl1 IS NULL AND pref_date_of_withdrawl IS NULL) AND (premium_mode = @premium_mode OR @premium_mode1 IS NULL AND premium_mode IS NULL) AND (purpose_of_coverage_id = @purpose_of_coverage_id OR @purpose_of_coverage_id1 IS N</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME><Text>ULL AND purpose_of_coverage_id IS NULL) AND (temp_table_rating = @temp_table_rating OR @temp_table_rating1 IS NULL AND temp_table_rating IS NULL) AND (temp_table_reason = @temp_table_reason OR @temp_table_reason1 IS NULL AND temp_table_reason IS NULL)
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_DeleteCoverage</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-151672787</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_DEMO
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME><Text>@personID int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME><Text>select * from person,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME><Text>person_address,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME><Text>person_address_line,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME><Text>person_phone,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME><Text>requirement_information,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME><Text>part2
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME><Text>where person.person_id = @personID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME><Text>and person_address.person_id = person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME><Text>and person_address_line.person_id = person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME><Text>and person_phone.person_id = person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME><Text>and requirement_information.person_id = person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME><Text>and requirement_type_id = "part2"
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME><Text>and requirement_information.requirement_information_id = part2.requirement_information_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME><Text>and address_type = "home"
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME><Text>and phone_type_id = "home"
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_DEMO</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetAddress</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1775382416</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAddress</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetAddress
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAddress</SPROC_NAME><Text>@insured_id  as varchar(4)    --same as insured_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAddress</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAddress</SPROC_NAME><Text>SELECT     policy_person.policy_person_id AS insured_id, person_address.city AS city, person_address.country_id AS country,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAddress</SPROC_NAME><Text>person_address.postal_code AS postal_code, person_address.address_line1 AS addr1, person_address.address_line2 AS addr2,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAddress</SPROC_NAME><Text>person_address.address_line3 AS addr3, person_address.address_type_code AS addr_type
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAddress</SPROC_NAME><Text>FROM         policy_person INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAddress</SPROC_NAME><Text>person_address ON policy_person.person_id = person_address.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAddress</SPROC_NAME><Text>WHERE   policy_person.policy_person_id =@insured_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetAddress</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>USP_AUS_GetAgencyInfo</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>727915092</Check_Sum><SPROC_TEXT><SPROC_NAME>USP_AUS_GetAgencyInfo</SPROC_NAME><Text>CREATE PROCEDURE USP_AUS_GetAgencyInfo
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetAgencyInfo</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetAgencyInfo</SPROC_NAME><Text>select person.last_name  as agencyname
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetAgencyInfo</SPROC_NAME><Text>from person , agency
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetAgencyInfo</SPROC_NAME><Text>where agency.person_id = person.person_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>USP_AUS_GetAgencyInfo</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1612493275</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetAgencyInfobyPolicyID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>@policy_id as int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>SELECT         	person.last_name AS company,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>person_address_line.address_line AS addr1,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>person_address.city AS city,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>person_address.postal_code AS postal_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>person_address.country_state_id AS state,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>person_phone.area_code AS area_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>person_phone.prefix AS prefix,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>person_phone.suffix AS suffix,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>rtrim(person_phone.area_code) + '-'  + rtrim( person_phone.prefix) + '-' + rtrim(person_phone.suffix) as phonenumber,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>person.email_address AS email_address
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>FROM        	agency INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>person ON agency.person_id = person.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>person_address ON person.person_id = person_address.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>person_address_line ON person_address.person_id = person_address_line.person_id AND
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>person_address.address_type_code = person_address_line.address_type_code INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>person_phone ON person.person_id = person_phone.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>policy_person ON person.person_id = policy_person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME><Text>WHERE     	(person_phone.phone_type_code = 'work' and policy_person.policy_id = @policy_id )
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetAgencyInfobyPolicyID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>904401001</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetAgentbyPolicyID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>@policy_id as int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>SELECT     		 RTRIM(person.first_name) + '  ' +RTRIM(person.last_name)  AS agentname,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>agent.agent_number AS agent_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>person.last_name AS last_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>person.first_name AS first_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>person.email_address AS email_address,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>person_address.city AS city,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>person_address.country_id AS country,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>person_address.postal_code AS postal_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>person_address.country_state_id AS state,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>person_phone.country_calling_code AS country_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>person_phone.area_code AS area_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>person_phone.suffix AS suffix,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>person_phone.prefix AS prefix,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>rtrim(person_phone.area_code) + '-' + rtrim(person_phone.prefix) + ' -' + rtrim(person_phone.suffix) as phone,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>policy_person_agent.commission_split,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>person_address_line.address_line AS addr1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>FROM         		 policy_person INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>agent ON policy_person.person_id = agent.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>person ON policy_person.person_id = person.person_id AND agent.person_id = person.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>person_address ON person.person_id = person_address.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>person_phone ON person.person_id = person_phone.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>policy_person_agent ON policy_person.policy_person_id = policy_person_agent.policy_person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>person_address_line ON person_address.person_id = person_address_line.person_id AND
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>person_address.address_type_code = person_address_line.address_type_code
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>WHERE     		(policy_person.role_id LIKE 'agent%')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>AND (person_phone.phone_type_code = 'work')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME><Text>AND (policy_person.policy_id = @policy_id)
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetAgentbyPolicyID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1348130858</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetBeneficiariesbyInsuredID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>@insured_id as int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>rtrim(person.first_name) + ' '+ rtrim(person.last_name) as 'fullname',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>policy_coverage.amount AS amount,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>case coverage_person.role_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>when 'primarybeneficiary' then 'P'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>when 'contigbeneficiary' then 'C'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>end as role,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>coverage_person.relationship_to_insured_code AS relationship,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>coverage_person_beneficiary.percentage AS percentage,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>coverage_person_beneficiary.amount AS amount,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>coverage_person.person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>coverage_person_beneficiary.irrevokable_indicator AS irrevoke,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>person.first_name AS fname, person.last_name AS lname,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>coverage_person_beneficiary.beneficiary_type AS benetype,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>person.tax_id AS tax_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>convert(char(10),person.birth_date,101) as birth_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>datediff(day, datepart(year, birth_date),datepart(year, getdate())) as age
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>from
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>coverage_person,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>policy_coverage,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>person,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>coverage_person_beneficiary
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>coverage_person.policy_coverage_id =
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>(select cp.policy_coverage_id from coverage_person_insured cpi, coverage_person cp
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>where cpi.policy_person_id = @insured_id and cpi.coverage_person_id = cp.coverage_person_id) and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>coverage_person.role_id like '%beneficiary' and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>policy_coverage.policy_coverage_id = coverage_person.policy_coverage_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>person.person_id = coverage_person.person_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME><Text>coverage_person_beneficiary.coverage_person_id = coverage_person.coverage_person_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetBeneficiariesbyInsuredID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetCompanies</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>479195876</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetCompanies</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetCompanies
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetCompanies</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetCompanies</SPROC_NAME><Text>select 	RTrim(cmp.company_code) as CompanyCode,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetCompanies</SPROC_NAME><Text>(RTrim(cmp.company_code) + ' - ' + RTrim(prs.last_name)) as CompCodeName,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetCompanies</SPROC_NAME><Text>RTrim(prs.last_name) as CompanyNames
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetCompanies</SPROC_NAME><Text>from 	company cmp,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetCompanies</SPROC_NAME><Text>person prs
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetCompanies</SPROC_NAME><Text>where 	cmp.person_id = prs.person_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetCompanies</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetCountries</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>864384579</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetCountries</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetCountries
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetCountries</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetCountries</SPROC_NAME><Text>Select 	country_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetCountries</SPROC_NAME><Text>country_name
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetCountries</SPROC_NAME><Text>From 	tl_country
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetCountries</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetCountryState</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1480858089</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetCountryState</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetCountryState
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetCountryState</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetCountryState</SPROC_NAME><Text>SELECT     state_code, state_name, country_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetCountryState</SPROC_NAME><Text>FROM         tl_country_state
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetCountryState</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_getEventCount</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-418961784</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_getEventCount</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_getEventCount
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_getEventCount</SPROC_NAME><Text>@evtcount int =null output
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_getEventCount</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_getEventCount</SPROC_NAME><Text>select count(*) as evtcount from aus_event where schedule_datetime is NULL and status = 1
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_getEventCount</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1627116928</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetFamilyHistorybyInsuredID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>@Insured_id as int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>SELECT replace( family_history.famhist_relationship_code, 'sib','Sibling') AS Relationship,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>case family_history.living_status
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>when 'L' then 'Living'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>when 'D' then 'Deceased'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>when 'U' then 'Unknown'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>when 'N' then 'Not Answered'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>else 'Unknown'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>end as status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>family_history.cancer_age AS Cancer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>family_history.heart_disease_age AS Heart,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>family_history.other_disease_age AS Other,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>family_history.reason_for_death AS Reason,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>family_history.age as age
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>FROM policy_person  INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>person ON policy_person.person_id = person.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>requirement_information INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>family_history ON requirement_information.requirement_information_id = family_history.requirement_information_id ON
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>person.person_id = requirement_information.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>where policy_person.policy_person_id = @Insured_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>/*
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>SELECT replace( family_history.famhist_relationship_code, 'sib','Sibling') AS Relationship,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>case family_history.living_status
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>when 'L' then 'Living'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>when 'D' then 'Deceased'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>when 'U' then 'Unknown'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>when 'N' then 'Not Answered'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>else 'Unknown'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>end as status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>case family_history.age
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>when 0 then '  '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>end as age,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>--family_history.cancer_age AS Cancer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>case family_history.cancer_age
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>when 0  then '  '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>end as cancer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>--family_history.heart_disease_age AS Heart,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>case  family_history.heart_disease_age
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>when 0 then ' '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>end as heart,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>case family_history.other_disease_age
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>when 0 then ' '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>end as other,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>--family_history.other_disease_age AS Other,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>family_history.reason_for_death AS Reason
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>FROM policy_person  INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>person ON policy_person.person_id = person.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>requirement_information INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>family_history ON requirement_information.requirement_information_id = family_history.requirement_information_id ON
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>person.person_id = requirement_information.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>where policy_person.policy_person_id = @Insured_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME><Text>*/
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetFamilyHistorybyInsuredID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetFamilyRelationships</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-51294229</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyRelationships</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetFamilyRelationships
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyRelationships</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyRelationships</SPROC_NAME><Text>SELECT     famhist_relationship_code AS familyrelationships
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetFamilyRelationships</SPROC_NAME><Text>FROM         tl_family_history_relationship
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetFamilyRelationships</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Add"><SPROC_NAME>usp_AUS_GetInsuredBannerByInsuredID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1750162790</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredBannerByInsuredID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetInsuredBannerByInsuredID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredBannerByInsuredID</SPROC_NAME><Text>@insuredID as Integer
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredBannerByInsuredID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredBannerByInsuredID</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredBannerByInsuredID</SPROC_NAME><Text>(RTrim(person.first_name) + ' ' + Rtrim(person.last_name)) + ';' +
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredBannerByInsuredID</SPROC_NAME><Text>Cast(policy_person_insured.underwriting_amount as Varchar(20)) + ';' +
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredBannerByInsuredID</SPROC_NAME><Text>(Select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredBannerByInsuredID</SPROC_NAME><Text>Case
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredBannerByInsuredID</SPROC_NAME><Text>When policy_person_insured.issue_age is null Then ''
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredBannerByInsuredID</SPROC_NAME><Text>Else Cast(policy_person_insured.issue_age as Varchar(8))
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredBannerByInsuredID</SPROC_NAME><Text>End) AS UserInfo
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredBannerByInsuredID</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredBannerByInsuredID</SPROC_NAME><Text>policy_person_insured INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredBannerByInsuredID</SPROC_NAME><Text>policy_person ON policy_person_insured.policy_person_id = policy_person.policy_person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredBannerByInsuredID</SPROC_NAME><Text>person ON policy_person.person_id = person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredBannerByInsuredID</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredBannerByInsuredID</SPROC_NAME><Text>policy_person_insured.policy_person_id  = @insuredID
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetInsuredBannerByInsuredID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-320498428</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>CREATE PROCEDURE usp_Aus_GetInsuredByPersonID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>@PersonID as varchar(15)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>Select 	prs.last_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>prs.first_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>prs.middle_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>prs.title,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>prs.suffix,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>prs.marital_status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>prs.sex,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>prs.birth_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>prs.tax_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>From 	person As prs
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>/* Left Join
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>(requirement_information as rqi Inner Join
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>part2 as pt2 on pt2.requirement_information_id = rqi.requirement_information_id)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>On prs.person_id = rqi.person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>person_address pad */
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>Where 	prs.person_id = @PersonID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>/* And
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME><Text>pad.person_id = prs.person_id  */
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_Aus_GetInsuredByPersonID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Add"><SPROC_NAME>usp_AUS_GetInsuredInfoHeaderByPolicyID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-2008649410</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInfoHeaderByPolicyID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetInsuredInfoHeaderByPolicyID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInfoHeaderByPolicyID</SPROC_NAME><Text>@policy_id as varchar(20)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInfoHeaderByPolicyID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInfoHeaderByPolicyID</SPROC_NAME><Text>SELECT    rtrim(person.first_name) + ' ' + rtrim(person.last_name) as 'insured_name',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInfoHeaderByPolicyID</SPROC_NAME><Text>policy_person.policy_person_id as 'insured_id',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInfoHeaderByPolicyID</SPROC_NAME><Text>policy_person.policy_id AS 'policy_id',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInfoHeaderByPolicyID</SPROC_NAME><Text>policy_person_insured.underwriting_amount as 'underwriting_amount',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInfoHeaderByPolicyID</SPROC_NAME><Text>tobacco.tobacco_use_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInfoHeaderByPolicyID</SPROC_NAME><Text>---   (datediff(day, datepart(year, birth_date),datepart(year, getdate()))) as 'issue_age'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInfoHeaderByPolicyID</SPROC_NAME><Text>policy_person_insured.issue_age
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInfoHeaderByPolicyID</SPROC_NAME><Text>-- insured_application_info.issue_age
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInfoHeaderByPolicyID</SPROC_NAME><Text>FROM         person INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInfoHeaderByPolicyID</SPROC_NAME><Text>policy_person ON person.person_id = policy_person.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInfoHeaderByPolicyID</SPROC_NAME><Text>policy_person_insured ON policy_person.policy_person_id = policy_person_insured.policy_person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInfoHeaderByPolicyID</SPROC_NAME><Text>insured_application_info ON policy_person_insured.policy_person_id = insured_application_info.policy_person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInfoHeaderByPolicyID</SPROC_NAME><Text>tobacco ON insured_application_info.requirement_information_id = tobacco.requirement_information_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInfoHeaderByPolicyID</SPROC_NAME><Text>WHERE     (policy_person.policy_id = @policy_id)
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetInsuredInfoHeaderByPolicyID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-831181744</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetInsuredInformation
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>@insured_id as int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>SELECT             insured_application_info.policy_person_id as 'Insured_id',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>RTRIM(person.title) + ' ' + RTRIM(person.first_name) + ' ' + RTRIM(person.last_name) + ' ' + RTRIM(person.suffix) AS  'fullname',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>person.first_name AS 'fname',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>person.last_name as 'lname',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>person.title AS 'title',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>person.suffix AS' suffix',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>person.tax_type_id AS' tax_type_id',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>convert(char(20),  person.birth_date, 101) AS 'birth_date',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>person.sex AS sex,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>person.marital_status AS 'marital_status',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.birth_country AS 'birth_country',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.residence_country AS 'residence_country',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.income AS 'income',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.drivers_license_number AS 'drivers_license_number',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.drivers_license_country_id AS 'drivers_license_country_id',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>(select  country_id  from tl_country_state where country_state_id = drivers_license_country_id) AS 'drivers_license_country',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.drivers_license_state AS 'drivers_license_state_id',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>(select state_code from tl_country_state where country_state_id = drivers_license_state) AS 'drivers_license_state',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.occupation AS 'occupation',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.height_inches AS 'height_inches',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.weight_pounds AS 'weight_pounds_current',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.weght_previous_year AS 'weight_pounds_prev',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.reason_for_weight_change AS 'reason_for_weight_change',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.income_prev_year AS 'income_prev',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.employer_address AS 'employer_address',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.years_at_employer AS 'years_at_employer',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.employer AS 'employer',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.unearned_income AS 'unearned_income',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.still_under_treatment_flag AS 'still_under_treatment',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>policy_person.policy_person_id AS 'insured_id',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.net_worth AS 'net_worth',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.total_inforce AS 'total_inforce',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.replacement_amount AS replacement_amount,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.residence_state AS 'residence_state_id',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>(select state_code from tl_country_state
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>where country_state_id = residence_state) AS residence_state,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.bankruptcy_disposition AS 'bankruptcy_disposition',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.bankruptcy_discharge_date AS 'bankruptcy_discharge_date',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>case  insured_application_info.medical_authorization_flag
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>when  1 then 'Yes'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>when 0 then 'No'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>else   '  '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>end   AS 'medical_authorization_flag',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.citizenship_country_id AS 'citizenship_country',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.doctor_name AS 'doctor_name',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.doctor_addr AS 'doctor_addr',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.doctor_city AS 'doctor_city',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.doctor_state AS 'doctor_state',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.doctor_zip AS 'doctor_zip',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.last_visit_date AS 'last_visit_date',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.treatments AS 'treatments',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.findings AS 'findings',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info.visit_reason AS 'visit_reason',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>person.tax_id AS 'tax_id'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>FROM        policy_person INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>policy_person_insured ON policy_person.policy_person_id = policy_person_insured.policy_person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>person ON policy_person.person_id = person.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>insured_application_info ON policy_person_insured.policy_person_id = insured_application_info.policy_person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>WHERE     (insured_application_info.policy_person_id = @insured_id)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>--exec usp_AUS_GetAddress @insured_id  = @insured_id   , @address_type = 'residence'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME><Text>--exec usp_AUS_GetPhoneNumber  @policy_person_id = @insured_id,  @phone_type_code ='Home'
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetInsuredInformation</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Add"><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>421631826</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetInsuredProducts
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>@insured_id as int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>SELECT    	policy_coverage.amount AS 'amount',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>policy_coverage.investment_objective AS 'investment_objective',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>policy_coverage.planned_premium AS 'planned_premium',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>policy_person_insured.underwriting_amount AS 'UW_Amount',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>policy_person_insured.issue_age AS 'issue_age',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>coverage_person_insured.coverage_person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>policy_coverage.purpose_of_coverage_id AS 'purpose_coverage',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>--tl_purpose_of_coverage_desc.description AS 'plan_description1',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>tl_plan_code.description as 'plan_description',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>coverage_person.relationship_to_insured_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>policy_coverage.plan_code_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>policy_coverage.coverage_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>policy_coverage.premium_mode,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>coverage_person.policy_coverage_id, tl_plan_code.description AS plan_description, policy_person.policy_person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>FROM         policy_person INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>policy_person_insured ON policy_person.policy_person_id = policy_person_insured.policy_person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>coverage_person_insured ON policy_person_insured.policy_person_id = coverage_person_insured.policy_person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>coverage_person ON coverage_person_insured.coverage_person_id = coverage_person.coverage_person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>policy_coverage ON coverage_person.policy_coverage_id = policy_coverage.policy_coverage_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>tl_purpose_of_coverage ON policy_coverage.purpose_of_coverage_id = tl_purpose_of_coverage.purpose_of_coverage_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>tl_purpose_of_coverage_desc ON
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>tl_purpose_of_coverage.purpose_of_coverage_id = tl_purpose_of_coverage_desc.purpose_of_coverage_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>tl_plan_code ON policy_coverage.plan_code_id = tl_plan_code.plan_code_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME><Text>WHERE     (policy_person.policy_person_id = @insured_id)
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetInsuredProducts</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetMIBDetail</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-754984769</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBDetail</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetMIBDetail
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBDetail</SPROC_NAME><Text>@insuredID int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBDetail</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBDetail</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBDetail</SPROC_NAME><Text>mib_code.mib_header_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBDetail</SPROC_NAME><Text>mib_code.seq_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBDetail</SPROC_NAME><Text>mib_code.field_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBDetail</SPROC_NAME><Text>mib_code.data_item
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBDetail</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBDetail</SPROC_NAME><Text>insured_requirement INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBDetail</SPROC_NAME><Text>requirement_information ON insured_requirement.requirement_information_id = requirement_information.requirement_information_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBDetail</SPROC_NAME><Text>mib_header ON requirement_information.requirement_information_id = mib_header.requirement_information_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBDetail</SPROC_NAME><Text>mib_code ON mib_header.mib_header_id = mib_code.mib_header_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBDetail</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBDetail</SPROC_NAME><Text>insured_requirement.policy_person_id = @insuredID AND (insured_requirement.requirement_code = 'MIB')
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetMIBDetail</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>217231835</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetMIBHeader
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>@insuredID int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>mib_header.mib_header_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>mib_header.dcode,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>mib_header.csy,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>mib_header.last_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>mib_header.first_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>mib_header.birth_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>mib_header.policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>mib_header.place_of_birth,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>mib_header.reply_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>mib_header.application_prefix,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>mib_header.error_msg_text,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>mib_header.rec_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>mib_header.inq_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>mib_header.inq_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>mib_header.inquiry_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>mib_header.modify_datetime
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>insured_requirement INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>requirement_information ON insured_requirement.requirement_information_id = requirement_information.requirement_information_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>mib_header ON requirement_information.requirement_information_id = mib_header.requirement_information_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>insured_requirement.policy_person_id = @insuredID AND (insured_requirement.requirement_code = 'MIB')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>ORDER BY
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME><Text>mib_header.last_name ASC
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetMIBHeader</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetMVRDetailByInsuredID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>307057760</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRDetailByInsuredID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetMVRDetailByInsuredID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRDetailByInsuredID</SPROC_NAME><Text>@insuredID int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRDetailByInsuredID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRDetailByInsuredID</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRDetailByInsuredID</SPROC_NAME><Text>mvr_detail.data,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRDetailByInsuredID</SPROC_NAME><Text>mvr_detail.record_type
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRDetailByInsuredID</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRDetailByInsuredID</SPROC_NAME><Text>mvr_detail INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRDetailByInsuredID</SPROC_NAME><Text>mvr_header ON mvr_detail.mvr_header_id = mvr_header.mvr_header_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRDetailByInsuredID</SPROC_NAME><Text>requirement_information ON mvr_header.requirement_information_id = requirement_information.requirement_information_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRDetailByInsuredID</SPROC_NAME><Text>insured_requirement ON requirement_information.requirement_information_id = insured_requirement.requirement_information_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRDetailByInsuredID</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRDetailByInsuredID</SPROC_NAME><Text>(insured_requirement.policy_person_id = @insuredID)
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetMVRDetailByInsuredID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>2072689319</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetMVRHeaderByInsuredID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>@insuredID int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>mvr_header.report_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>mvr_header.state,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>mvr_header.license_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>mvr_header.license_status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>mvr_header.license_class,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>mvr_header.expire_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>mvr_header.issue_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>mvr_header.restrictions,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>mvr_header.report_status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>mvr_header.license_city_state,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>mvr_header.license_address,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>mvr_header.last_name + ', ' + mvr_header.first_name + ', ' + mvr_header.middle_name as license_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>mvr_header.driver_information
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>mvr_detail INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>mvr_header ON mvr_detail.mvr_header_id = mvr_header.mvr_header_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>requirement_information ON mvr_header.requirement_information_id = requirement_information.requirement_information_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>insured_requirement ON requirement_information.requirement_information_id = insured_requirement.requirement_information_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME><Text>WHERE insured_requirement.policy_person_id = @insuredID
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetMVRHeaderByInsuredID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>390718922</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>CREATE  PROCEDURE usp_AUS_GetNoteByNoteID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>@noteID as Integer
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>RTrim(person.first_name) + ' ' + RTrim(person.last_name) as 'Person',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>RTrim(notes.topic),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>RTrim(notes.note_type),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>RTrim(notes.visibility),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>notes.added_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>notes.update_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>notes.diary_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>notes.note,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>(SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>RTrim(person.first_name) + ' ' + RTrim(person.last_name)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>policy_person_insured INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>policy_person ON policy_person_insured.policy_person_id = policy_person.policy_person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>person ON policy_person.person_id = person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>policy_person_insured.policy_person_id = notes.policy_person_id) as 'Insured'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>aus_user INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>notes ON aus_user.user_id = notes.author INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>person ON aus_user.person_id = person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME><Text>note_id = @noteID
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetNoteByNoteID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1589978532</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetNotesByPolicyID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>@policyID int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>notes.note_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>notes.policy_person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>notes.note_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>notes.topic,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>notes.visibility,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>notes.added_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>notes.update_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>notes.diary_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>notes.note,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>(Select RTrim(person.first_name) + ' ' + RTrim(person.last_name)) as insured_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>(SELECT RTrim(person.first_name) + ' ' + RTrim(person.last_name)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>FROM aus_user INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>person ON aus_user.person_id = person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>WHERE notes.author = aus_user.user_id) as author_name
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>policy_person_insured INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>notes ON policy_person_insured.policy_person_id = notes.policy_person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>policy_person ON policy_person_insured.policy_person_id = policy_person.policy_person_id LEFT OUTER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>person ON policy_person.person_id = person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>(policy_person.policy_id = 1)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>AND (policy_person.role_id LIKE '%insured%')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>ORDER BY
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME><Text>notes.added_date DESC
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetNotesByPolicyID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1693457647</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetNotesByPolicyIDInsuredID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>@policyID int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>@insuredID int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>notes.note_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>notes.policy_person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>notes.note_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>notes.topic,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>notes.visibility,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>notes.added_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>notes.update_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>notes.diary_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>notes.note,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>(Select RTrim(person.first_name) + ' ' + RTrim(person.last_name)) as insured_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>(SELECT RTrim(person.first_name) + ' ' + RTrim(person.last_name)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>FROM aus_user INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>person ON aus_user.person_id = person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>WHERE notes.author = aus_user.user_id) as author_name
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>policy_person_insured INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>notes ON policy_person_insured.policy_person_id = notes.policy_person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>policy_person ON policy_person_insured.policy_person_id = policy_person.policy_person_id LEFT OUTER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>person ON policy_person.person_id = person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>(policy_person.policy_id = @policyID)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>AND (policy_person_insured.policy_person_id = @insuredID)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>AND (policy_person.role_id LIKE '%insured%')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>ORDER BY
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME><Text>notes.added_date DESC
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetNotesByPolicyIDInsuredID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetNoteTypes</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1528283282</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteTypes</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetNoteTypes
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteTypes</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteTypes</SPROC_NAME><Text>Select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteTypes</SPROC_NAME><Text>RTrim(note_type) as "Text",
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteTypes</SPROC_NAME><Text>RTrim(note_type) as "Value"
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteTypes</SPROC_NAME><Text>From
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteTypes</SPROC_NAME><Text>tl_note_type
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteTypes</SPROC_NAME><Text>Order By
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetNoteTypes</SPROC_NAME><Text>note_type
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetNoteTypes</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1947950480</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetOwner_PayorbyPolicyID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>@policy_id as varchar(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>@person_type as varchar(20)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>SELECT    	rtrim( person.first_name) + ' ' + rtrim( person.last_name ) as  fullname,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>person.first_name AS fname,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>person.last_name AS lname,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>person.tax_id as tax_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>person_address.city AS city,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>person_address.country_id AS country,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>person_address.postal_code AS postal_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>person_address.country_state_id AS state,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>person_address_line.address_line AS addr1,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>policy_person.relationship_to_insured as relationship,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>convert(char(20),person.birth_date,101) as birth_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>person.person_type_id as persontype
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>FROM         	policy_person INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>person ON policy_person.person_id = person.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>person_address ON person.person_id = person_address.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>person_address_line ON person_address.person_id = person_address_line.person_id AND
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>person_address.address_type_code = person_address_line.address_type_code
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>WHERE     	(policy_person.role_id = @person_type)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>AND (person_address_line.sequence_no = 0)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME><Text>AND (policy_person.policy_id = @policy_id)
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetOwner_PayorbyPolicyID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetPersonByPersonID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1786733112</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersonByPersonID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetPersonByPersonID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersonByPersonID</SPROC_NAME><Text>@PersonID as int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersonByPersonID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersonByPersonID</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersonByPersonID</SPROC_NAME><Text>title,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersonByPersonID</SPROC_NAME><Text>first_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersonByPersonID</SPROC_NAME><Text>middle_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersonByPersonID</SPROC_NAME><Text>last_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersonByPersonID</SPROC_NAME><Text>suffix,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersonByPersonID</SPROC_NAME><Text>client_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersonByPersonID</SPROC_NAME><Text>sex,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersonByPersonID</SPROC_NAME><Text>tax_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersonByPersonID</SPROC_NAME><Text>email_address
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersonByPersonID</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersonByPersonID</SPROC_NAME><Text>person
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersonByPersonID</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersonByPersonID</SPROC_NAME><Text>person_id = @PersonID
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetPersonByPersonID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetPersons</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1391585901</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersons</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetPersons AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersons</SPROC_NAME><Text>select top 100 *
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPersons</SPROC_NAME><Text>from person
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetPersons</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetPhoneNumber</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1434306729</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPhoneNumber</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetPhoneNumber
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPhoneNumber</SPROC_NAME><Text>@insured_id as int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPhoneNumber</SPROC_NAME><Text>--@--phone_type_code as varchar(20)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPhoneNumber</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPhoneNumber</SPROC_NAME><Text>SELECT    	policy_person.policy_person_id as 'Insured_id',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPhoneNumber</SPROC_NAME><Text>person_phone.phone_type_code AS 'phone_type_code',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPhoneNumber</SPROC_NAME><Text>person_phone.area_code AS 'area_code',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPhoneNumber</SPROC_NAME><Text>person_phone.prefix AS 'prefix',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPhoneNumber</SPROC_NAME><Text>person_phone.suffix AS 'suffix',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPhoneNumber</SPROC_NAME><Text>rtrim(person_phone.area_code) + '-' + rtrim(person_phone.prefix) + '-' + rtrim(person_phone.suffix) as 'phone_number',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPhoneNumber</SPROC_NAME><Text>rtrim (person_phone.country_calling_code) + '-' + rtrim(person_phone.area_code) + '-' + rtrim(person_phone.prefix) + '-' + rtrim(person_phone.suffix) as 'international_phone_number',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPhoneNumber</SPROC_NAME><Text>person_phone.country_calling_code AS 'country_calling_code'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPhoneNumber</SPROC_NAME><Text>FROM         	policy_person INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPhoneNumber</SPROC_NAME><Text>person_phone ON policy_person.person_id = person_phone.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPhoneNumber</SPROC_NAME><Text>WHERE     	(policy_person.policy_person_id = @insured_id)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPhoneNumber</SPROC_NAME><Text>AND (person_phone.phone_type_code = 'Home')
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetPhoneNumber</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetPolicy_FaceAmountbyID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-645647536</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicy_FaceAmountbyID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetPolicy_FaceAmountbyID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicy_FaceAmountbyID</SPROC_NAME><Text>@policy_id as varchar(20)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicy_FaceAmountbyID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicy_FaceAmountbyID</SPROC_NAME><Text>select sum(amount) from policy_coverage
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicy_FaceAmountbyID</SPROC_NAME><Text>where policy_id = @policy_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetPolicy_FaceAmountbyID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetPolicyHeaderInfobyID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1315100043</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyHeaderInfobyID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetPolicyHeaderInfobyID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyHeaderInfobyID</SPROC_NAME><Text>@policy_id as varchar(20)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyHeaderInfobyID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyHeaderInfobyID</SPROC_NAME><Text>SELECT     policy_number AS 'Policy_number',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyHeaderInfobyID</SPROC_NAME><Text>(select sum(amount) from policy_coverage where policy_id = @policy_id ) as 'FaceAmount',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyHeaderInfobyID</SPROC_NAME><Text>policy_status_code AS 'policy_status_code',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyHeaderInfobyID</SPROC_NAME><Text>convert(char(20), receive_date,101) as 'receive_date',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyHeaderInfobyID</SPROC_NAME><Text>(SELECT count(*) FROM policy_person where (policy_id = @policy_id) AND (role_id = 'insured')) AS 'numinsured'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyHeaderInfobyID</SPROC_NAME><Text>FROM         policy
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyHeaderInfobyID</SPROC_NAME><Text>WHERE     (policy_id = @policy_id)
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetPolicyHeaderInfobyID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1578063652</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetPolicyInfobyPolicyID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>@policy_id as int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>SELECT             policy.policy_number AS Policy_Number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>convert(char(20),policy.receive_date,101) as receive_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>convert(char(20),policy.issue_date,101) as issue_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>policy.cwa_amount as cwa_amount,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>team.team_name AS team_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>policy.team_id as team_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>person_1.last_name AS underwriter,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>policy.underwriter_id as underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>person_2.last_name AS company,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>policy.company_code as company_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>convert(char(20),policy.agent_signed_date,101) AS agent_signed_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>rtrim(person.last_name) + ',' + RTRIM(person.first_name) AS Name ,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>(select sum(amount) from policy_coverage where policy_id = @policy_id ) as 'FaceAmount'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>FROM         	policy INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>policy_person ON policy.policy_id = policy_person.policy_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>person ON policy_person.person_id = person.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>team ON policy.team_id = team.team_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>aus_user ON policy.underwriter_id = aus_user.user_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>person person_1 ON aus_user.person_id = person_1.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>company ON policy.company_code = company.company_code INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>person person_2 ON company.person_id = person_2.person_id  INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>policy_person_insured ON policy_person.policy_person_id = policy_person_insured.policy_person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME><Text>where policy.policy_id = @policy_id and policy_person_insured.primary_insured_flag = 1
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetPolicyInfobyPolicyID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetPolicyNumByPolicyID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>785087166</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyNumByPolicyID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetPolicyNumByPolicyID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyNumByPolicyID</SPROC_NAME><Text>@PolicyID int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyNumByPolicyID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyNumByPolicyID</SPROC_NAME><Text>Select 	company_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyNumByPolicyID</SPROC_NAME><Text>policy_number
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyNumByPolicyID</SPROC_NAME><Text>From 	policy
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyNumByPolicyID</SPROC_NAME><Text>Where  policy_id = @PolicyID
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetPolicyNumByPolicyID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetPolicyNumInsured</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1689562675</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyNumInsured</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetPolicyNumInsured
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyNumInsured</SPROC_NAME><Text>@policy_id as varchar (20)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyNumInsured</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyNumInsured</SPROC_NAME><Text>SELECT     COUNT(*) AS Expr1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyNumInsured</SPROC_NAME><Text>FROM         policy INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyNumInsured</SPROC_NAME><Text>policy_person ON policy.policy_id = policy_person.policy_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyNumInsured</SPROC_NAME><Text>policy_person_insured ON policy_person.policy_person_id = policy_person_insured.policy_person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPolicyNumInsured</SPROC_NAME><Text>WHERE     (policy.policy_id = @policy_id)
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetPolicyNumInsured</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetPurposeofCoverage</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>902866773</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPurposeofCoverage</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetPurposeofCoverage
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPurposeofCoverage</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPurposeofCoverage</SPROC_NAME><Text>SELECT      purpose_of_coverage_id AS purposeofcoverage
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetPurposeofCoverage</SPROC_NAME><Text>FROM         tl_purpose_of_coverage
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetPurposeofCoverage</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetQuestionsAnswersbyInsuredID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-169697110</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetQuestionsAnswersbyInsuredID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetQuestionsAnswersbyInsuredID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetQuestionsAnswersbyInsuredID</SPROC_NAME><Text>@insured_id as int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetQuestionsAnswersbyInsuredID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetQuestionsAnswersbyInsuredID</SPROC_NAME><Text>SELECT         	part2_answers.answer_text AS answer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetQuestionsAnswersbyInsuredID</SPROC_NAME><Text>part2_answers.answer_comment AS comments,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetQuestionsAnswersbyInsuredID</SPROC_NAME><Text>tl_questions.question_text AS question,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetQuestionsAnswersbyInsuredID</SPROC_NAME><Text>part2_answers.question_number AS questionnumber
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetQuestionsAnswersbyInsuredID</SPROC_NAME><Text>FROM         	policy_person_insured INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetQuestionsAnswersbyInsuredID</SPROC_NAME><Text>policy_person ON policy_person_insured.policy_person_id = policy_person.policy_person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetQuestionsAnswersbyInsuredID</SPROC_NAME><Text>person ON policy_person.person_id = person.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetQuestionsAnswersbyInsuredID</SPROC_NAME><Text>part2_answers INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetQuestionsAnswersbyInsuredID</SPROC_NAME><Text>requirement_information ON part2_answers.requirement_information_id = requirement_information.requirement_information_id ON
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetQuestionsAnswersbyInsuredID</SPROC_NAME><Text>person.person_id = requirement_information.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetQuestionsAnswersbyInsuredID</SPROC_NAME><Text>tl_questions ON part2_answers.question_number = tl_questions.question_number
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetQuestionsAnswersbyInsuredID</SPROC_NAME><Text>where 		policy_person_insured.policy_person_id = @insured_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetQuestionsAnswersbyInsuredID</SPROC_NAME><Text>ORDER BY part2_answers.question_number
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetQuestionsAnswersbyInsuredID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetRelatedPoliciesbyPolicyID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>625871523</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRelatedPoliciesbyPolicyID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetRelatedPoliciesbyPolicyID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRelatedPoliciesbyPolicyID</SPROC_NAME><Text>--really the insured_id.... come back and change
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRelatedPoliciesbyPolicyID</SPROC_NAME><Text>@policy_id  as varchar(20)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRelatedPoliciesbyPolicyID</SPROC_NAME><Text>as
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRelatedPoliciesbyPolicyID</SPROC_NAME><Text>SELECT   company AS Company,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRelatedPoliciesbyPolicyID</SPROC_NAME><Text>status AS Status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRelatedPoliciesbyPolicyID</SPROC_NAME><Text>relationship as Relationship,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRelatedPoliciesbyPolicyID</SPROC_NAME><Text>convert(char(20), issue_date ,101) AS year_issued,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRelatedPoliciesbyPolicyID</SPROC_NAME><Text>amount AS amount,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRelatedPoliciesbyPolicyID</SPROC_NAME><Text>adb_amount AS ADB
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRelatedPoliciesbyPolicyID</SPROC_NAME><Text>from       related_policies
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRelatedPoliciesbyPolicyID</SPROC_NAME><Text>where     policy_person_id =@policy_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetRelatedPoliciesbyPolicyID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>238156509</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetReviewMessageByPolicyID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>@policyID as Int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>(SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>Case
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>When review_message.message_type = 0 AND review_message.checkoff_flag = 0  Then 0
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>When review_message.message_type = 0 AND review_message.checkoff_flag = -1  Then 4
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>Else review_message.message_type
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>End) as 'message_type',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>review_message.review_message_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>review_message.note_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>review_message.message,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>review_message.checkoff_flag,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>review_message.review_message_comment,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>review_message.policy_person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>review_message INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>policy_person ON review_message.policy_person_id = policy_person.policy_person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>person ON policy_person.person_id = person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>(policy_person.policy_id = @policyID)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>AND (policy_person.role_id  LIKE '%insured%')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>ORDER BY
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>review_message.policy_person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>review_message.message_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME><Text>review_message.note_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetReviewMessageByPolicyID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>430672260</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetReviewMessageTopicByMessageID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>@messageID as Int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>@insuredID as Int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>(Select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>Case
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>When RTrim(person.first_name)  = '' Then RTrim(person.last_name)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>When RTrim(person.last_name)  = '' Then RTrim(person.first_name)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>When RTrim(person.first_name) = '' And RTrim(person.last_name)= '' Then 'Unknown'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>Else RTrim(person.last_name) + ', ' + RTrim(person.first_name)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>End) + 	';' +
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>review_message.message AS 'TopicInfo'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>policy_person_insured INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>policy_person ON policy_person_insured.policy_person_id = policy_person.policy_person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>person ON policy_person.person_id = person.person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>review_message
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>policy_person_insured.policy_person_id = @insuredID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME><Text>And review_message.review_message_id = @messageID
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetReviewMessageTopicByMessageID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1744387475</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetRule
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@rule_id integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@rule_name char(50) output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@rulebook_id int output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@description varchar(1000) output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@added_by int output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@added_date datetime output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@added_by_name char(50) output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@updated_by int output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@update_date datetime output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@updated_by_name char(50) output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@rule_text varchar(2000) output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@is_active smallint output
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@rule_id = rule_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@rule_name = rule_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@rulebook_id = rulebook_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@description = description,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@added_by = added_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@added_date = added_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@updated_by = updated_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@update_date = update_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@is_active = is_active,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@rule_text = rule_text
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>from te_rule where rule_id = @rule_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@added_by_name = RTRIM(person.first_name) + ' ' + RTRIM(person.last_name)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>FROM         person INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>aus_user ON person.person_id = aus_user.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>te_rule ON aus_user.user_id = te_rule.added_by
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>where te_rule.rule_id = @rule_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>@updated_by_name = RTRIM(person1.first_name) + ' ' + RTRIM(person1.last_name)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>FROM         person person1 INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>aus_user ON person1.person_id = aus_user.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>te_rule ON aus_user.user_id = te_rule.updated_by
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME><Text>where te_rule.rule_id = @rule_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetRule</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetRulebookPlancodes</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1202461432</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRulebookPlancodes</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetRulebookPlancodes
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRulebookPlancodes</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRulebookPlancodes</SPROC_NAME><Text>@rulebook_id int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRulebookPlancodes</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRulebookPlancodes</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRulebookPlancodes</SPROC_NAME><Text>SELECT     tr_plan_code_rulebook.plan_code_id, tr_plan_code_rulebook.effective_date, tl_plan_code.plan_code_id as plan_code
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRulebookPlancodes</SPROC_NAME><Text>FROM         tr_plan_code_rulebook INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRulebookPlancodes</SPROC_NAME><Text>tl_plan_code ON tr_plan_code_rulebook.plan_code_id = tl_plan_code.plan_code_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRulebookPlancodes</SPROC_NAME><Text>WHERE     (tr_plan_code_rulebook.rulebook_id = @rulebook_id)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetRulebookPlancodes</SPROC_NAME><Text>RETURN
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetRulebookPlancodes</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetTeams</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1875090218</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetTeams</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetTeams
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetTeams</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetTeams</SPROC_NAME><Text>Select 	team_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetTeams</SPROC_NAME><Text>RTrim(team_name) as TeamName
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetTeams</SPROC_NAME><Text>From 	team
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetTeams</SPROC_NAME><Text>Order By TeamName
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetTeams</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetTobaccoType</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>296995772</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetTobaccoType</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetTobaccoType
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetTobaccoType</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetTobaccoType</SPROC_NAME><Text>Select *
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetTobaccoType</SPROC_NAME><Text>From tl_Tobacco_Type
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetTobaccoType</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetUnderwriters</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1015719665</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUnderwriters</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetUnderwriters
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUnderwriters</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUnderwriters</SPROC_NAME><Text>Select 	aus.user_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUnderwriters</SPROC_NAME><Text>(Select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUnderwriters</SPROC_NAME><Text>Case
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUnderwriters</SPROC_NAME><Text>When RTrim(per.first_name)  = '' Then RTrim(per.last_name)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUnderwriters</SPROC_NAME><Text>When RTrim(per.last_name)  = '' Then RTrim(per.first_name)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUnderwriters</SPROC_NAME><Text>When RTrim(per.first_name) = '' And RTrim(per.last_name)= '' Then 'Unknown'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUnderwriters</SPROC_NAME><Text>Else RTrim(per.last_name) + ', ' + RTrim(per.first_name)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUnderwriters</SPROC_NAME><Text>End) as 'Person'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUnderwriters</SPROC_NAME><Text>From 	person per,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUnderwriters</SPROC_NAME><Text>aus_user aus
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUnderwriters</SPROC_NAME><Text>Where 	per.person_id = aus.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUnderwriters</SPROC_NAME><Text>AND aus.user_id &gt; 0
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUnderwriters</SPROC_NAME><Text>AND per.first_name not like '%AUSsystem%'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUnderwriters</SPROC_NAME><Text>Order By Person
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetUnderwriters</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>USP_AUS_GetUnderwritersbyPolicyID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>957741192</Check_Sum><SPROC_TEXT><SPROC_NAME>USP_AUS_GetUnderwritersbyPolicyID</SPROC_NAME><Text>CREATE PROCEDURE USP_AUS_GetUnderwritersbyPolicyID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetUnderwritersbyPolicyID</SPROC_NAME><Text>@policy_id as varchar(20)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetUnderwritersbyPolicyID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetUnderwritersbyPolicyID</SPROC_NAME><Text>Select 	aus.user_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetUnderwritersbyPolicyID</SPROC_NAME><Text>(Select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetUnderwritersbyPolicyID</SPROC_NAME><Text>Case
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetUnderwritersbyPolicyID</SPROC_NAME><Text>When RTrim(per.first_name)  = '' Then RTrim(per.last_name)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetUnderwritersbyPolicyID</SPROC_NAME><Text>When RTrim(per.last_name)  = '' Then RTrim(per.first_name)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetUnderwritersbyPolicyID</SPROC_NAME><Text>When RTrim(per.first_name) = '' And RTrim(per.last_name)= '' Then 'Unknown'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetUnderwritersbyPolicyID</SPROC_NAME><Text>Else RTrim(per.last_name) + ', ' + RTrim(per.first_name)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetUnderwritersbyPolicyID</SPROC_NAME><Text>End) as 'Person'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetUnderwritersbyPolicyID</SPROC_NAME><Text>From 	person per,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetUnderwritersbyPolicyID</SPROC_NAME><Text>aus_user aus,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetUnderwritersbyPolicyID</SPROC_NAME><Text>policy pol
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetUnderwritersbyPolicyID</SPROC_NAME><Text>Where 	per.person_id = aus.person_id AND
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetUnderwritersbyPolicyID</SPROC_NAME><Text>pol.underwriter_id = aus.user_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>USP_AUS_GetUnderwritersbyPolicyID</SPROC_NAME><Text>pol.policy_id = @policy_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>USP_AUS_GetUnderwritersbyPolicyID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetUserInfo</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1425883765</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUserInfo</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetUserInfo
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUserInfo</SPROC_NAME><Text>@userid as int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUserInfo</SPROC_NAME><Text>as
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUserInfo</SPROC_NAME><Text>Select distinct
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUserInfo</SPROC_NAME><Text>person.first_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUserInfo</SPROC_NAME><Text>person.last_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUserInfo</SPROC_NAME><Text>aus_user.level_of_authority,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUserInfo</SPROC_NAME><Text>aus_user.login_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUserInfo</SPROC_NAME><Text>from
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUserInfo</SPROC_NAME><Text>aus_user, person
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUserInfo</SPROC_NAME><Text>--aus_user_role
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUserInfo</SPROC_NAME><Text>where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUserInfo</SPROC_NAME><Text>aus_user.user_id  = @userid
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUserInfo</SPROC_NAME><Text>--and aus_user_role.user_id = aus_user.user_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetUserInfo</SPROC_NAME><Text>and aus_user.person_id = person.person_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetUserInfo</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_GetValidRulebook</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1185341919</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_GetValidRulebook</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_GetValidRulebook
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetValidRulebook</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetValidRulebook</SPROC_NAME><Text>@plancodeID nchar(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetValidRulebook</SPROC_NAME><Text>@effective_date datetime
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetValidRulebook</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetValidRulebook</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetValidRulebook</SPROC_NAME><Text>declare @rulebookID int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetValidRulebook</SPROC_NAME><Text>/* SET NOCOUNT ON */
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetValidRulebook</SPROC_NAME><Text>select @rulebookID = (SELECT TOP 1 rulebook_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetValidRulebook</SPROC_NAME><Text>FROM tr_plan_code_rulebook
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetValidRulebook</SPROC_NAME><Text>WHERE plan_code_id = @plancodeID AND
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetValidRulebook</SPROC_NAME><Text>effective_date &lt; @effective_date
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetValidRulebook</SPROC_NAME><Text>ORDER BY effective_date DESC)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetValidRulebook</SPROC_NAME><Text>select * from te_rulebook where rulebook_id = @rulebookID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_GetValidRulebook</SPROC_NAME><Text>RETURN
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_GetValidRulebook</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertAddressType</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1552196151</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAddressType</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertAddressType
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAddressType</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAddressType</SPROC_NAME><Text>@code nchar(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAddressType</SPROC_NAME><Text>@langCode nChar(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAddressType</SPROC_NAME><Text>@description nchar(50)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAddressType</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAddressType</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAddressType</SPROC_NAME><Text>/* SET NOCOUNT ON */
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAddressType</SPROC_NAME><Text>insert into tl_address_type values(@code, @code)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAddressType</SPROC_NAME><Text>insert into tl_address_type_description values (@code, @langCode, @description)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAddressType</SPROC_NAME><Text>RETURN
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertAddressType</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>475908350</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertAUSUser
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>@user_id int =null output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>@person_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>@login_id char (10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>@password char(16),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>@is_active smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>@level_of_authority numeric(9),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>@is_underwriter int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>@role_id int = null
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>INSERT INTO aus_user
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>login_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>password,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>is_active,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>level_of_authority,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>is_underwriter
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>VALUES (
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>@person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>@login_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>@password,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>@is_active,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>@level_of_authority,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>@is_underwriter
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>select @user_id = @@identity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>insert into aus_user_role
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>user_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>role_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>values
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>@user_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>@role_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME><Text>return @user_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertAUSUser</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertBand</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1306512029</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBand</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertBand
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBand</SPROC_NAME><Text>@band_id int =null output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBand</SPROC_NAME><Text>@based_on char(100)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBand</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBand</SPROC_NAME><Text>insert into te_band
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBand</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBand</SPROC_NAME><Text>based_on
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBand</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBand</SPROC_NAME><Text>values
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBand</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBand</SPROC_NAME><Text>@based_on
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBand</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBand</SPROC_NAME><Text>select @band_id = @@identity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBand</SPROC_NAME><Text>return @band_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertBand</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertBeneficiaryType</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>932718181</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBeneficiaryType</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertBeneficiaryType
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBeneficiaryType</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBeneficiaryType</SPROC_NAME><Text>@code nchar(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBeneficiaryType</SPROC_NAME><Text>@langCode nChar(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBeneficiaryType</SPROC_NAME><Text>@description nchar(20)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBeneficiaryType</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBeneficiaryType</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBeneficiaryType</SPROC_NAME><Text>/* SET NOCOUNT ON */
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBeneficiaryType</SPROC_NAME><Text>insert into tl_beneficiary_type (beneficiary_type) values(@code)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBeneficiaryType</SPROC_NAME><Text>insert into tl_beneficiary_type_desc (beneficiary_type, language_code, description) values (@code, @langCode, @description)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertBeneficiaryType</SPROC_NAME><Text>RETURN
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertBeneficiaryType</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1080075222</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertCoverage
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@policy_coverage_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@policy_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@plan_code_id char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@death_benefit_option_code char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@purpose_of_coverage_id char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@coverage_type char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@indicator_code char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@amount numeric(12),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@coverage_status char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@premium_mode char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@investment_objective char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@pref_date_of_withdrawl datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@planned_premium numeric(12,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@initial_planned_premium numeric(12,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@equivalent_age int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@can_take_final_action_flag int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@temp_flat_extra_period int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@perm_flat_extra_amount numeric(5,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@temp_flat_extra_amount numeric(5,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@flat_extra_reason varchar(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@temp_table_rating char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@temp_table_reason varchar(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@perm_table_rating char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>@perm_table_reason varchar(100)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>SET NOCOUNT OFF;
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>INSERT INTO policy_coverage(policy_coverage_id, policy_id, plan_code_id, death_benefit_option_code, purpose_of_coverage_id, coverage_type, indicator_code, amount, coverage_status, premium_mode, investment_objective, pref_date_of_withdrawl, planned_premium</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>, initial_planned_premium, equivalent_age, can_take_final_action_flag, temp_flat_extra_period, perm_flat_extra_amount, temp_flat_extra_amount, flat_extra_reason, temp_table_rating, temp_table_reason, perm_table_rating, perm_table_reason) VALUES (@policy_c</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>overage_id, @policy_id, @plan_code_id, @death_benefit_option_code, @purpose_of_coverage_id, @coverage_type, @indicator_code, @amount, @coverage_status, @premium_mode, @investment_objective, @pref_date_of_withdrawl, @planned_premium, @initial_planned_premi</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME><Text>um, @equivalent_age, @can_take_final_action_flag, @temp_flat_extra_period, @perm_flat_extra_amount, @temp_flat_extra_amount, @flat_extra_reason, @temp_table_rating, @temp_table_reason, @perm_table_rating, @perm_table_reason);
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertCoverage</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>351380336</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertCoveragePerson
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>@coverage_person_id int =null output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>@policy_coverage_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>@person_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>@role_id char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>@relationship_to_insured_code char(10)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>INSERT INTO coverage_person
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>policy_coverage_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>role_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>relationship_to_insured_code
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>VALUES
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>@policy_coverage_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>@person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>@role_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>@relationship_to_insured_code
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>select @coverage_person_id = @@identity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME><Text>return @coverage_person_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertCoveragePerson</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertCoverageType</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1355562497</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverageType</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertCoverageType
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverageType</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverageType</SPROC_NAME><Text>@coverage_type nchar(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverageType</SPROC_NAME><Text>@description nChar(50),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverageType</SPROC_NAME><Text>@external_code nchar(50)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverageType</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverageType</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverageType</SPROC_NAME><Text>INSERT INTO tl_coverage_type
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverageType</SPROC_NAME><Text>(coverage_type, description, external_code)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertCoverageType</SPROC_NAME><Text>VALUES     (@coverage_type, @description, @external_code)	RETURN
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertCoverageType</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertFamHistRelationship</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1865984605</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamHistRelationship</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertFamHistRelationship
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamHistRelationship</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamHistRelationship</SPROC_NAME><Text>@relationshipcode char(20)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamHistRelationship</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamHistRelationship</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamHistRelationship</SPROC_NAME><Text>/* SET NOCOUNT ON */
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamHistRelationship</SPROC_NAME><Text>insert into tl_family_history_relationship values(@relationshipcode)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamHistRelationship</SPROC_NAME><Text>RETURN
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertFamHistRelationship</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertFamilyHistory</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>384963697</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamilyHistory</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertFamilyHistory
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamilyHistory</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamilyHistory</SPROC_NAME><Text>@reqinfo_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamilyHistory</SPROC_NAME><Text>@famhist_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamilyHistory</SPROC_NAME><Text>@relationship char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamilyHistory</SPROC_NAME><Text>@living_status char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamilyHistory</SPROC_NAME><Text>@age int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamilyHistory</SPROC_NAME><Text>@cancer_flag int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamilyHistory</SPROC_NAME><Text>@cancer_age int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamilyHistory</SPROC_NAME><Text>@heart_disease_flag int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamilyHistory</SPROC_NAME><Text>@heart_disease_age int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamilyHistory</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamilyHistory</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamilyHistory</SPROC_NAME><Text>/* SET NOCOUNT ON */
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamilyHistory</SPROC_NAME><Text>insert into family_history values(@famhist_id, @reqinfo_id,@relationship,@living_status,' ', @age, @cancer_flag, @cancer_age, @heart_disease_flag, @heart_disease_age, 0,0,' ')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertFamilyHistory</SPROC_NAME><Text>RETURN
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertFamilyHistory</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1337428034</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertInsuredRequirement
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@insured_requirement_id int =null output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@requirement_information_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@requirement_code char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@added_by int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@added_date datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@closed_date datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@closed_by int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@closed_disposition char(2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@needed_for_approval_flag smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@notify_when_satisfied smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@review_message_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@policy_person_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@followup_date datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@ordered_by char (20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@can_auto_approve int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@notify_when_received smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@received_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@note_id int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>INSERT INTO insured_requirement
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>requirement_information_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>requirement_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>added_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>added_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>closed_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>closed_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>closed_disposition,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>needed_for_approval_flag,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>notify_when_satisfied,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>review_message_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>policy_person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>followup_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>ordered_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>can_auto_approve,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>notify_when_received,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>received_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>note_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>VALUES
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@requirement_information_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@requirement_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@added_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@added_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@closed_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@closed_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@closed_disposition,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@needed_for_approval_flag,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@notify_when_satisfied,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@review_message_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@policy_person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@followup_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@ordered_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@can_auto_approve,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@notify_when_received,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@received_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>@note_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>select @insured_requirement_id = @@identity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME><Text>return @insured_requirement_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertInsuredRequirement</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertLanguage</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-361124428</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertLanguage</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertLanguage    @LangCode nchar(10),   @Description nchar(50),   @exCol nchar(10) AS INSERT INTO tl_language (language_code, description, external_code)  VALUES(@LangCode, @Description, @exCol)
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertLanguage</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-729992084</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertNote
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>@authorID as Integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>@insuredID as Integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>@noteType as Char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>@topic as Char(254),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>@visibility as Char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>@diaryDate as DateTime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>@note as varchar(8000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>As
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>Declare @insertDate as DateTime
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>Set @insertDate = GetDate()
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>Insert Into Notes (
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>author,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>policy_person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>note_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>topic,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>visibility,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>added_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>diary_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>note)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>Values (
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>@authorID,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>@insuredID,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>@noteType,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>@topic,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>@visibility,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>@insertDate,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>@diaryDate,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>@note +char(13) +char(13))
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>IF (@@Error = 0)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>Return @@Identity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>ELSE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME><Text>Return 0
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertNote</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertNoteType</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1451990094</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNoteType</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertNoteType
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNoteType</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNoteType</SPROC_NAME><Text>@code nchar(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNoteType</SPROC_NAME><Text>@langCode nChar(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNoteType</SPROC_NAME><Text>@description nchar(20)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNoteType</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNoteType</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNoteType</SPROC_NAME><Text>/* SET NOCOUNT ON */
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNoteType</SPROC_NAME><Text>insert into tl_note_type values(@code)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertNoteType</SPROC_NAME><Text>insert into tl_note_type_description values (@code, @langCode, @description)	RETURN
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertNoteType</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-16354335</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertPerson
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@person_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@last_name char (50),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@first_name char (20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@middle_name char (20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@title char (10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@suffix char (10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@tax_id char (11),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@tax_type_id char (4),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@birth_date datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@sex char (1),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@person_type_id char (10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@preferred_language_code char (10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@email_address char (100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@marital_status char (20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@client_id char (15)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>INSERT INTO person
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>last_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>first_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>middle_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>title, suffix, tax_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>tax_type_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>birth_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>sex,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>person_type_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>preferred_language_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>email_address,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>marital_status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>client_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>VALUES
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@last_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@first_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@middle_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@title,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@suffix,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@tax_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@tax_type_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@birth_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@sex,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@person_type_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@preferred_language_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@email_address,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@marital_status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>@client_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertPerson</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1449564564</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertPersonAddress
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>@person_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>@address_type_code char (20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>@address_line1 char(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>@address_line2 char(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>@address_line3 char(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>@city char (30),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>@country_id char (8),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>@postal_code char (50),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>@country_state_id char (10)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>insert into person_address
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>address_type_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>address_line1,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>address_line2,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>address_line3,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>city,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>country_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>postal_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>country_state_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>values
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>@person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>@address_type_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>@address_line1,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>@address_line2,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>@address_line3,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>@city,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>@country_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>@postal_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>@country_state_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertPersonAddress</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertPhoneType</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1358314050</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPhoneType</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertPhoneType
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPhoneType</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPhoneType</SPROC_NAME><Text>@code nchar(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPhoneType</SPROC_NAME><Text>@langCode nChar(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPhoneType</SPROC_NAME><Text>@description nchar(20)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPhoneType</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPhoneType</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPhoneType</SPROC_NAME><Text>/* SET NOCOUNT ON */
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPhoneType</SPROC_NAME><Text>insert into tl_phone_type values(@code)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPhoneType</SPROC_NAME><Text>insert into tl_phone_type_description values (@code, @langCode, @description)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPhoneType</SPROC_NAME><Text>RETURN
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertPhoneType</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertPlanCodes</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1474953013</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPlanCodes</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertPlanCodes
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPlanCodes</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPlanCodes</SPROC_NAME><Text>@plancodeID nchar(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPlanCodes</SPROC_NAME><Text>@lobcode nChar(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPlanCodes</SPROC_NAME><Text>@description nchar(30)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPlanCodes</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPlanCodes</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPlanCodes</SPROC_NAME><Text>/* SET NOCOUNT ON */
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPlanCodes</SPROC_NAME><Text>insert into tl_plan_code (plan_code_id, line_of_business_code, description) values(@plancodeID, @lobcode, @description)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPlanCodes</SPROC_NAME><Text>RETURN
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertPlanCodes</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-546851804</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertPointAllocation
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@point_id int =null output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@can_points_from numeric,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@can_points_to numeric,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@cad_points_from numeric,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@cad_points_to numeric,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@ao_points_from numeric,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@ao_points_to numeric,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@kickout_flag smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@rate_class char (10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@smoking_rate_class char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@review_message varchar(1000),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@assign_points int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>insert into ta_point_allocation
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>can_points_from,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>can_points_to,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>cad_points_from,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>cad_points_to,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>ao_points_from,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>ao_points_to,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>kickout_flag,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>rate_class,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>smoking_rate_class,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>review_message,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>assign_points
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>values
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@can_points_from,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@can_points_to,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@cad_points_from,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@cad_points_to,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@ao_points_from,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@ao_points_to,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@kickout_flag,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@rate_class,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@smoking_rate_class,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@review_message,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>@assign_points
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>select @point_id = @@identity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME><Text>return @point_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertPointAllocation</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1669041846</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertPolicy
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@policy_id int =null output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@company_code char (5),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@policy_number char (20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@application_number char (20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@issue_date datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@underwriter_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@team_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@application_date datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@agent_signed_date datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@policy_status_code char (15),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@receive_date datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@policy_status char (20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@dirty_flag smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@current_edit_user_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@current_edit_date datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@payment_mode char (20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@last_underwrite_date datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@allow_aus_approval smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@final_action_date datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@reinsurance_indicator char (10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@reinsurance_vendor_code char (10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@final_action_note_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@updated_by int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@added_by int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@final_action_by int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@cwa_amount numeric(19, 4),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@cwa_date datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@payment_type char (10)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>declare @dateNow datetime
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>set @dateNow = getdate()
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>INSERT INTO policy
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>company_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>application_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>issue_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>team_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>application_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>agent_signed_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>policy_status_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>receive_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>policy_status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>dirty_flag,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>current_edit_user_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>current_edit_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>payment_mode_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>last_underwrite_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>allow_aus_approval,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>final_action_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>reinsurance_indicator,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>reinsurance_vendor_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>final_action_note_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>updated_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>updated_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>added_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>final_action_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>added_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>cwa_amount,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>cwa_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>payment_method_code
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>VALUES
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@company_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@application_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@issue_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@team_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@application_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@agent_signed_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@policy_status_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@receive_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@policy_status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@dirty_flag,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@current_edit_user_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@current_edit_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@payment_mode,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@last_underwrite_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@allow_aus_approval,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@final_action_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@reinsurance_indicator,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@reinsurance_vendor_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@final_action_note_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@updated_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@dateNow,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@added_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@final_action_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@dateNow,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@cwa_amount,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@cwa_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>@payment_type
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>select @policy_id = @@identity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME><Text>return @policy_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertPolicy</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-380546999</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertPolicyCoverage
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@policy_coverage_id int =null output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@policy_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@plan_code_id char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@death_benefit_option_code char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@purpose_of_coverage_id char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@coverage_type char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@indicator_code char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@amount numeric(12, 0),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@coverage_status char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@premium_mode char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@investment_objective char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@pref_date_of_withdrawl datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@planned_premium numeric(12, 2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@initial_planned_premium numeric(12, 2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@equivalent_age int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@can_take_final_action_flag int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@temp_flat_extra_period int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@perm_flat_extra_amount numeric(5, 2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@temp_flat_extra_amount numeric(5, 2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@flat_extra_reason varchar(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@temp_table_rating char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@temp_table_reason varchar(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@perm_table_rating char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@perm_table_reason varchar(100)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>INSERT INTO policy_coverage
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>policy_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>plan_code_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>death_benefit_option_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>purpose_of_coverage_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>coverage_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>indicator_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>amount,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>coverage_status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>premium_mode,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>investment_objective,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>pref_date_of_withdrawl,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>planned_premium,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>initial_planned_premium,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>equivalent_age,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>can_take_final_action_flag,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>temp_flat_extra_period,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>perm_flat_extra_amount,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>temp_flat_extra_amount,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>flat_extra_reason,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>temp_table_rating,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>temp_table_reason,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>perm_table_rating,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>perm_table_reason
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>VALUES
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@policy_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@plan_code_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@death_benefit_option_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@purpose_of_coverage_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@coverage_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@indicator_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@amount,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@coverage_status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@premium_mode,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@investment_objective,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@pref_date_of_withdrawl,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@planned_premium,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@initial_planned_premium,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@equivalent_age,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@can_take_final_action_flag,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@temp_flat_extra_period,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@perm_flat_extra_amount,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@temp_flat_extra_amount,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@flat_extra_reason,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@temp_table_rating,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@temp_table_reason,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@perm_table_rating,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>@perm_table_reason
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>select @policy_coverage_id = @@identity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME><Text>return @policy_coverage_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertPolicyCoverage</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertPolicyPerson</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>637465390</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPerson</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertPolicyPerson
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPerson</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPerson</SPROC_NAME><Text>@policy_person_id int =null output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPerson</SPROC_NAME><Text>@policy_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPerson</SPROC_NAME><Text>@person_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPerson</SPROC_NAME><Text>@role_id nchar(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPerson</SPROC_NAME><Text>@relationship_to_insured nchar(10)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPerson</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPerson</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPerson</SPROC_NAME><Text>insert into policy_person (policy_id, person_id, role_id, relationship_to_insured) values (@policy_id, @person_id, @role_id, @relationship_to_insured)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPerson</SPROC_NAME><Text>select @policy_person_id = @@identity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPerson</SPROC_NAME><Text>return @policy_person_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertPolicyPerson</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Add"><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-211957652</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertPolicyPersonInsured
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>@policy_person_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>@signed_state_id nchar(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>@underwriting_amount numeric(9),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>@issue_age int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>@primary_insured_flag int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>insert into policy_person_insured
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>policy_person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>signed_state_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>underwriting_amount,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>issue_age,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>primary_insured_flag
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>values
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>@policy_person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>@signed_state_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>@underwriting_amount,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>@issue_age,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>@primary_insured_flag
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME><Text>return
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertPolicyPersonInsured</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertPolicyRole</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>611696817</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyRole</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertPolicyRole
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyRole</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyRole</SPROC_NAME><Text>@code nchar(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyRole</SPROC_NAME><Text>@langCode nChar(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyRole</SPROC_NAME><Text>@description nchar(50)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyRole</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyRole</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyRole</SPROC_NAME><Text>/* SET NOCOUNT ON */
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyRole</SPROC_NAME><Text>insert into tl_policy_role values(@code)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyRole</SPROC_NAME><Text>insert into tl_policy_role_description values (@code, @langCode, @description)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyRole</SPROC_NAME><Text>RETURN
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertPolicyRole</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertPolicyStatusCode</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1864380837</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyStatusCode</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertPolicyStatusCode
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyStatusCode</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyStatusCode</SPROC_NAME><Text>@code nchar(15),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyStatusCode</SPROC_NAME><Text>@langCode nChar(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyStatusCode</SPROC_NAME><Text>@description nchar(50)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyStatusCode</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyStatusCode</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyStatusCode</SPROC_NAME><Text>/* SET NOCOUNT ON */
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyStatusCode</SPROC_NAME><Text>insert into tl_policy_status values(@code,'')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyStatusCode</SPROC_NAME><Text>insert into tl_policy_status_description values (@code, @langCode, @description)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPolicyStatusCode</SPROC_NAME><Text>RETURN
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertPolicyStatusCode</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertPurposeOfCoverage</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-834127036</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPurposeOfCoverage</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertPurposeOfCoverage
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPurposeOfCoverage</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPurposeOfCoverage</SPROC_NAME><Text>@code nchar(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPurposeOfCoverage</SPROC_NAME><Text>@langCode nChar(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPurposeOfCoverage</SPROC_NAME><Text>@description nchar(20)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPurposeOfCoverage</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPurposeOfCoverage</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPurposeOfCoverage</SPROC_NAME><Text>/* SET NOCOUNT ON */
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPurposeOfCoverage</SPROC_NAME><Text>insert into tl_purpose_of_coverage values(@code)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPurposeOfCoverage</SPROC_NAME><Text>insert into tl_purpose_of_coverage_desc values (@code, @langCode, @description)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertPurposeOfCoverage</SPROC_NAME><Text>RETURN
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertPurposeOfCoverage</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>315862035</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>
CREATE PROCEDURE usp_AUS_InsertRequirement
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@requirement_code char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@requirement_name char(50),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@requirement_category smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@notify_when_satisfied smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@can_auto_approve smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@expiration_days integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@followup_days integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@external_followup_days integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@requirement_type_id char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@default_ordered_by char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@notify_when_received smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@is_active smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@added_by integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@external_requirement_code varchar(50),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@provider char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@evidence_type char(50),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@authorization_required smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@hippa_auth_required smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@hierarchy integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@new_business_until_closed smallint
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>declare @addDate as datetime
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>set @addDate = GetDate()
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>INSERT INTO tl_requirement
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	requirement_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	requirement_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	requirement_category,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	notify_when_satisfied,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	can_auto_approve,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	expiration_days,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	followup_days,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	external_followup_days,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	requirement_type_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	default_ordered_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	notify_when_received,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	is_active,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	added_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	added_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	update_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	updated_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	external_requirement_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	provider,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	evidence_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	authorization_required,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	hippa_auth_required,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	hierarchy,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	new_business_until_closed
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>VALUES
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@requirement_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@requirement_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@requirement_category,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@notify_when_satisfied,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@can_auto_approve,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@expiration_days,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@followup_days,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@external_followup_days,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@requirement_type_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@default_ordered_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@notify_when_received,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@is_active,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@added_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@addDate,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@addDate,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@added_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@external_requirement_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@provider,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@evidence_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@authorization_required,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@hippa_auth_required,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@hierarchy,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>	@new_business_until_closed
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertRequirement</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-332668261</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertRequirementGroup
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>@requirement_group_id int = null output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>@name char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>@description char(254),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>@is_active int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>INSERT INTO tl_requirement_group
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>description,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>is_active
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>VALUES
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>@name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>@description,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>@is_active
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>select @requirement_group_id = @@identity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME><Text>return @requirement_group_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertRequirementGroup</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-332875</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertRequirementInformation
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@requirement_information_id int =null output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@person_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@create_date datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@match_method int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@status char(2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@vendor_id char(15),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@manual_or_electronic_entry char(1),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@expiration_date datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@added_by int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@requirement_type_id char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@requirement_request_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@lifespan_days int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>INSERT INTO requirement_information
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>create_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>match_method,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>vendor_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>manual_or_electronic_entry,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>expiration_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>added_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>requirement_type_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>requirement_request_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>lifespan_days
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>VALUES
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@create_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@match_method,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@vendor_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@manual_or_electronic_entry,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@expiration_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@added_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@requirement_type_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@requirement_request_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>@lifespan_days
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>select @requirement_information_id = @@identity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME><Text>return @requirement_information_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertRequirementInformation</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1643461443</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertReviewMessage
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@review_message_id int =null output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@note_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@policy_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@sequence_number int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@message_type char(1),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@message char(254),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@origin_code char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@checkoff_flag smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@message_number int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@added_date datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@check_off_date datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@checked_off_by int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@policy_person_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@rule_name char(50),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@review_message_comment text
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>INSERT INTO review_message
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>note_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>policy_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>sequence_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>message_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>message,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>origin_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>checkoff_flag,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>message_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>added_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>check_off_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>checked_off_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>policy_person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>rule_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>review_message_comment
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>VALUES
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@note_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@policy_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@sequence_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@message_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@message,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@origin_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@checkoff_flag,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@message_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@added_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@check_off_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@checked_off_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@policy_person_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@rule_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>@review_message_comment
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>select @review_message_id = @@identity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME><Text>return @review_message_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertReviewMessage</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-281999018</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertRule
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>@rule_id int = null output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>@added_date datetime = null output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>@rule_name char (50),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>@rulebook_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>@description char (100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>@is_active int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>@added_by int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>@updated_by int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>@rule_text varchar (2000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>declare @dateNow datetime
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>set @dateNow = getdate()
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>INSERT INTO te_rule
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>rule_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>rulebook_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>description,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>is_active,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>added_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>added_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>update_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>updated_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>rule_text
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>VALUES (
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>@rule_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>@rulebook_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>@description,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>@is_active,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>@dateNow,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>@added_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>@dateNow,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>@updated_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>@rule_text)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>select @rule_id = @@identity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>select @added_date = @dateNow
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME><Text>return
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertRule</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>607187935</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertRulebook
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@rulebook_name char (20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@description char (100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@effective_date datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@is_active int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@non_smoking_classes int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@age_calc_rule int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@added_by int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@rulebook_script text,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@smokingMonths int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@smokingIsPositive smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@rulebook_id int = null output
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>declare @InsertDate datetime
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>set @InsertDate = GetDate()
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>INSERT INTO te_rulebook
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>(	rulebook_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>description,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>effective_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>is_active,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>non_smoking_classes,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>added_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>age_calc_rule,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>updated_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>update_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>added_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>smoker_quit_months_duration,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>smoker_if_positive_test,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>rulebook_script )
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>VALUES
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>(	@rulebook_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@description,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@effective_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@is_active,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@non_smoking_classes,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@InsertDate,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@age_calc_rule,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@added_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@InsertDate,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@added_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@smokingMonths,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@smokingIsPositive,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>@rulebook_script )
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>select @rulebook_id  = @@identity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME><Text>return @rulebook_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertRulebook</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1867241837</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>
CREATE PROCEDURE usp_AUS_InsertRuleOption
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@rule_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@option_type int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@sequence_no int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@review_message varchar(1000),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@comment_text varchar(1000),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@requirement_code char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@requirement_group_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@rate_class char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@rate_class_smoking char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@is_checkable smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@decline_coverage_flag smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@allow_jet_issue int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@allow_auto_approval int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@is_smoker_flag smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@points int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@priority int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@allow_auto_ordering int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>insert into ta_rule_option
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	rule_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	option_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	sequence_no,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	review_message,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	comment_text,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	requirement_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	requirement_group_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	rate_class,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	rate_class_smoking,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	is_checkable,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	decline_policy_flag,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	is_smoker_flag,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	points,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	priority,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	allow_jet_issue,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	allow_auto_approval,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	allow_auto_ordering
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>values (
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@rule_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@option_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@sequence_no,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@review_message,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@comment_text,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@requirement_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@requirement_group_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@rate_class,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@rate_class_smoking,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@is_checkable,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@decline_coverage_flag,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@is_smoker_flag,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@points,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@priority,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@allow_jet_issue,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@allow_auto_approval,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>	@allow_auto_ordering
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertRuleOption</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>607685658</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertTeam
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>@team_id int=null output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>@team_name char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>@description char(254),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>@is_active smallint
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>INSERT INTO team
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>team_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>description,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>is_active
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>VALUES
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>@team_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>@description,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>@is_active
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>select @team_id = @@identity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME><Text>return @team_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertTeam</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertTobaccoType</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1503202351</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoType</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertTobaccoType
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoType</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoType</SPROC_NAME><Text>@code nchar(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoType</SPROC_NAME><Text>@langCode nChar(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoType</SPROC_NAME><Text>@description nchar(20)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoType</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoType</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoType</SPROC_NAME><Text>/* SET NOCOUNT ON */
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoType</SPROC_NAME><Text>insert into tl_tobacco_type values(@code, @code)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoType</SPROC_NAME><Text>insert into tl_tobacco_type_description values (@code, @langCode, @description)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoType</SPROC_NAME><Text>RETURN
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertTobaccoType</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_InsertTobaccoUse</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>2019109397</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoUse</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_InsertTobaccoUse
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoUse</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoUse</SPROC_NAME><Text>@code nchar(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoUse</SPROC_NAME><Text>@langCode nChar(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoUse</SPROC_NAME><Text>@description nchar(20)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoUse</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoUse</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoUse</SPROC_NAME><Text>/* SET NOCOUNT ON */
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoUse</SPROC_NAME><Text>insert into tl_tobacco_use values(@code, @code)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoUse</SPROC_NAME><Text>insert into tl_tobacco_use_description values (@code, @langCode, @description)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_InsertTobaccoUse</SPROC_NAME><Text>RETURN
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_InsertTobaccoUse</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-748279634</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_MyWork_DiaryPastDue
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><Text>@underwriterID as varchar(4),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><Text>@mydate as  datetime
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><Text>as
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><Text>SELECT     	@mydate as mydate,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><Text>policy.policy_number as policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><Text>rtrim(person.first_name) + ' ' +( person.last_name)  as insured_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><Text>person.last_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><Text>person.first_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><Text>convert(char(10), notes.diary_date, 101) as  diary_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><Text>notes.topic as topic,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><Text>policy.policy_id as policy_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><Text>FROM         	policy INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><Text>aus_user ON policy.underwriter_id = aus_user.user_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><Text>policy_person ON policy.policy_id = policy_person.policy_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><Text>person ON policy_person.person_id = person.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><Text>policy_person_insured ON policy_person.policy_person_id = policy_person_insured.policy_person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><Text>notes ON policy_person_insured.policy_person_id = notes.policy_person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME><Text>WHERE     	(aus_user.user_id = @underwriterID)   AND (convert(char(10),notes.diary_date,101) &lt; =  convert(char(10),@mydate,101))
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_MyWork_DiaryPastDue</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1970266928</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_MyWork_ReferralInBox
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>@underwriterID as varchar(4),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>@mydate as  datetime
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>as
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>SELECT policy.policy_number as policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>rtrim(ins.first_name) + ' ' +(ins.last_name)  as insured_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>rtrim(auth_person.first_name) + ' ' +(auth_person.last_name)  as author_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>rtrim(refer_person.first_name) + ' ' +(refer_person.last_name)  as referred_to_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>convert(char(10), notes.diary_date, 101) as  diary_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>'&lt;img src=Image/bell.gif&gt;' as past_due,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>notes.topic as topic,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>policy.policy_id as policy_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>from notes, policy, policy_person_insured, policy_person, person ins, aus_user auth_user, person auth_person, aus_user refer_user, person refer_person
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>where notes.note_type = 'refer'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and notes.updated_by = auth_user.user_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and auth_user.person_id = auth_person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and notes.refer_to_user_id = refer_user.user_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and refer_user.person_id = refer_person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and policy.policy_id = policy_person.policy_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and policy_person.person_id = ins.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and policy_person.policy_person_id = policy_person_insured.policy_person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and policy_person_insured.policy_person_id = notes.policy_person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and notes.diary_date &lt;=@mydate
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and refer_user.user_id = @underwriterID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>union
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>SELECT policy.policy_number as policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>rtrim(ins.first_name) + ' ' +(ins.last_name)  as insured_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>rtrim(auth_person.first_name) + ' ' +(auth_person.last_name)  as author_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>rtrim(refer_person.first_name) + ' ' +(refer_person.last_name)  as referred_to_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>convert(char(10), notes.diary_date, 101) as  diary_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>'' as past_due,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>notes.topic as topic,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>policy.policy_id as policy_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>from notes, policy, policy_person_insured, policy_person, person ins, aus_user auth_user, person auth_person, aus_user refer_user, person refer_person
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>where notes.note_type = 'refer'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and notes.updated_by = auth_user.user_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and auth_user.person_id = auth_person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and notes.refer_to_user_id = refer_user.user_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and refer_user.person_id = refer_person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and policy.policy_id = policy_person.policy_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and policy_person.person_id = ins.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and policy_person.policy_person_id = policy_person_insured.policy_person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and policy_person_insured.policy_person_id = notes.policy_person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and notes.diary_date &gt; @mydate
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME><Text>and refer_user.user_id = @underwriterID
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_MyWork_ReferralInBox</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-592805335</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_MyWork_ReferralOutBox
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>@underwriterID as varchar(4),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>@mydate as  datetime
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>as
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>SELECT policy.policy_number as policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>rtrim(ins.first_name) + ' ' +(ins.last_name)  as insured_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>rtrim(auth_person.first_name) + ' ' +(auth_person.last_name)  as author_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>rtrim(refer_person.first_name) + ' ' +(refer_person.last_name)  as referred_to_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>convert(char(10), notes.diary_date, 101) as  diary_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>'&lt;img src=Image/bell.gif&gt;' as past_due,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>notes.topic as topic,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>policy.policy_id as policy_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>from notes, policy, policy_person_insured, policy_person, person ins, aus_user auth_user, person auth_person, aus_user refer_user, person refer_person
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>where notes.note_type = 'refer'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and notes.author = auth_user.user_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and auth_user.person_id = auth_person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and notes.refer_to_user_id = refer_user.user_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and refer_user.person_id = refer_person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and policy.policy_id = policy_person.policy_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and policy_person.person_id = ins.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and policy_person.policy_person_id = policy_person_insured.policy_person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and policy_person_insured.policy_person_id = notes.policy_person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and notes.author &lt;&gt; notes.refer_to_user_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and notes.diary_date &lt;= @mydate
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and auth_user.user_id = @underwriterID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>union
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>SELECT policy.policy_number as policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>rtrim(ins.first_name) + ' ' +(ins.last_name)  as insured_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>rtrim(auth_person.first_name) + ' ' +(auth_person.last_name)  as author_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>rtrim(refer_person.first_name) + ' ' +(refer_person.last_name)  as referred_to_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>convert(char(10), notes.diary_date, 101) as  diary_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>'' as past_due,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>notes.topic as topic,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>policy.policy_id as policy_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>from notes, policy, policy_person_insured, policy_person, person ins, aus_user auth_user, person auth_person, aus_user refer_user, person refer_person
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>where notes.note_type = 'refer'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and notes.author = auth_user.user_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and auth_user.person_id = auth_person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and notes.refer_to_user_id = refer_user.user_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and refer_user.person_id = refer_person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and policy.policy_id = policy_person.policy_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and policy_person.person_id = ins.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and policy_person.policy_person_id = policy_person_insured.policy_person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and policy_person_insured.policy_person_id = notes.policy_person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and notes.author &lt;&gt; notes.refer_to_user_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and notes.diary_date &gt; @mydate
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME><Text>and auth_user.user_id = @underwriterID
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_MyWork_ReferralOutBox</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_MyWork_Work</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1376803742</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_Work</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_MyWork_Work
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_Work</SPROC_NAME><Text>@underwriterID  as  varchar(4),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_Work</SPROC_NAME><Text>@mydate as datetime
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_Work</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_Work</SPROC_NAME><Text>select  policy_status_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_Work</SPROC_NAME><Text>convert(char(20),DATEDIFF(day, application_date, @mydate) ,101) AS no_of_days,  1 as numpol
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_Work</SPROC_NAME><Text>from policy
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_Work</SPROC_NAME><Text>where underwriter_id = @underwriterID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_Work</SPROC_NAME><Text>and policy_status_code in('New Business' , 'Pending' , 'Pending Mail', 'Final Action')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWork_Work</SPROC_NAME><Text>order by policy_status_code, no_of_days
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_MyWork_Work</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_MyWorkRequirementsPastDue</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1136797833</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWorkRequirementsPastDue</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_MyWorkRequirementsPastDue
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWorkRequirementsPastDue</SPROC_NAME><Text>@underwriterID as varchar(4),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWorkRequirementsPastDue</SPROC_NAME><Text>@followupdate as datetime
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWorkRequirementsPastDue</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWorkRequirementsPastDue</SPROC_NAME><Text>SELECT CONVERT(char(20), insured_requirement.followup_date, 101) AS 'followup_date',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWorkRequirementsPastDue</SPROC_NAME><Text>RTRIM(person.last_name) + ', ' + RTRIM(person.first_name)  AS 'insured_name',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWorkRequirementsPastDue</SPROC_NAME><Text>insured_requirement.requirement_code AS'requirementtype',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWorkRequirementsPastDue</SPROC_NAME><Text>policy.policy_number as policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWorkRequirementsPastDue</SPROC_NAME><Text>policy.policy_id as policy_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWorkRequirementsPastDue</SPROC_NAME><Text>from   insured_requirement, policy_person, policy, person
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWorkRequirementsPastDue</SPROC_NAME><Text>where  policy_person.person_id = person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWorkRequirementsPastDue</SPROC_NAME><Text>and policy_person.policy_id = policy.policy_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWorkRequirementsPastDue</SPROC_NAME><Text>and insured_requirement.policy_person_id = policy_person.policy_person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWorkRequirementsPastDue</SPROC_NAME><Text>and insured_requirement.followup_date &lt;= @followupdate
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_MyWorkRequirementsPastDue</SPROC_NAME><Text>and policy.underwriter_id= @underwriterID
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_MyWorkRequirementsPastDue</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_Search</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-834285969</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_Search
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>@CompanyID as Varchar(5),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>@PolicyNum as Varchar(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>@InsuredFirstName as Varchar(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>@InsuredLastName as VarChar(50),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>@TaxID as Varchar(11),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>@UnderwriterID as Int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>@TeamID as Int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>@ClientID as Varchar(15),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>@Age as Int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>@Status as Varchar(15),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>@SortField as Varchar(20) = '',
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>@SortDirection as Varchar(20) = ''
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Declare	@SQLText as varchar(8000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>--Debug
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>/*Declare	@CompanyID as Varchar(5)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Declare	@PolicyNum as Varchar(20)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Declare @InsuredFirstName as Varchar(20)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Declare	@InsuredLastName as VarChar(50)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Declare	@TaxID as Varchar(11)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Declare	@UnderwriterID as Int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Declare	@TeamID as Int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Declare	@ClientID as Varchar(15)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Declare	@Age as Int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Declare	@Status as Varchar(15)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Declare	@SortField as Varchar(20)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Declare	@SortDirection as Varchar(20)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Select @CompanyID = ''
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Select @PolicyNum = ''
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Select @InsuredFirstName = ''
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Select @InsuredLastName = 'H'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Select @TaxID = ''
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Select @UnderwriterID = 0
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Select @TeamID = 0
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Select @ClientID = ''
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Select @Age = 0
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Select @Status = 'All'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Select @SortField = ''*/
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>-- old currency line
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>--	'''$'' + Convert(varchar(20), insured_benefits.amount) as ''face_amount'', '+char(13)+char(9)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>--Core SQL
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Set @SQLText = 'SELECT '+char(13)+char(9)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>'dbo.policy.policy_id, '+char(13)+char(9)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>'dbo.policy.company_code as ''co_id'', '+char(13)+char(9)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>'dbo.policy.policy_number as ''policy_num'', '+char(13)+char(9)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>'dbo.policy.priority as ''priority'', '+char(13)+char(9)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>'RTRIM(dbo.person.last_name) + '', '' + RTRIM(dbo.person.first_name) AS Name, '+char(13)+char(9)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>'dbo.person.tax_id as SSN, '+char(13)+char(9)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>'dbo.person.client_id as ''client_Id'', '+char(13)+char(9)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>'dbo.policy_person_insured.underwriting_amount as ''underwriting_amount'', '+char(13)+char(9)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>'Convert(Varchar(20), policy.receive_date, 101) as ''rcv_date'', '+char(13)+char(9)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>'dbo.tl_policy_status.short_code as ''status'', '+char(13)+char(9)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>'(select RTRIM(dbo.person.last_name) + '', '' + RTRIM(dbo.person.first_name) AS Name ' +
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>' FROM person, aus_user ' +
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>' WHERE policy.underwriter_id = aus_user.user_id  And person.person_id = aus_user.person_id) as ''underwriter'',' +char(13)+char(9)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>'dbo.team.team_name as ''team'' '+char(13)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>'FROM '+char(13)+char(9)+' policy_person INNER JOIN '+char(13)+char(9)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>'policy ON policy_person.policy_id = policy.policy_id INNER JOIN'+char(13)+char(9)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>'person ON policy_person.person_id = person.person_id INNER JOIN'+char(13)+char(9)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>'policy_person_insured ON policy_person.policy_person_id = policy_person_insured.policy_person_id LEFT OUTER JOIN'+char(13)+char(9)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>'team ON policy.team_id = team.team_id LEFT OUTER JOIN'+char(13)+char(9)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>'tl_policy_status ON policy.policy_status_code = tl_policy_status.policy_status_code'+char(13)+
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>'WHERE '+char(13)+char(9)+ '	(policy_person_insured.underwriting_amount &gt; 0) AND (policy_person.role_id = ''insured'') '+char(13)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>If (@Status = 'All Active')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Begin
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Set @SQLText = @SQLText + char(9)+ 'And tl_policy_status.policy_status_code IN (''New Business'', ''Pending Mail'', ''Final Action'', ''Pending'') '+char(13)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>End
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Else If (@Status &lt;&gt; 'All')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Begin
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Set @SQLText = @SQLText + char(9)+ 'And tl_policy_status.policy_status_code = ''' + @Status + ''''+char(13)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>End
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>If (@CompanyID &lt;&gt; '')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Set @SQLText = @SQLText + char(9)+'And policy.company_code = ''' + @CompanyID + ''''+char(13)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>If (@PolicyNum &lt;&gt; '')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Set @SQLText = @SQLText + char(9)+'And policy.policy_number Like ''' + @PolicyNum + '%'''+char(13)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>If (@TaxID &lt;&gt; '')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Set @SQLText = @SQLText + char(9)+'And person.tax_id Like ''' + @TaxID + '%'''+char(13)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>If (@UnderwriterID &lt;&gt; 0)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Set @SQLText = @SQLText + char(9)+'And policy.underwriter_id = ' + Cast(@UnderwriterID as Varchar(12)) + char(13)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>If (@TeamID &lt;&gt; 0)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Set @SQLText = @SQLText + char(9)+'And policy.team_id = ' + Cast(@TeamID as Varchar(12)) + char(13)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>If (@ClientID &lt;&gt; '')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Set @SQLText = @SQLText + char(9)+'And person.client_id Like ''' + @ClientID + '%'''+char(13)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>If (@InsuredFirstName &lt;&gt; '')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Set @SQLText = @SQLText + char(9)+'And person.first_name Like ''' + @InsuredFirstName + '%'''+char(13)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>If (@InsuredLastName &lt;&gt; '')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Set @SQLText = @SQLText + char(9)+'And person.last_name Like ''' + @InsuredLastName + '%'''+char(13)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>If (@SortField = '')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Set @SQLText = @SQLText + 'ORDER BY '+char(13)+char(9)+'dbo.policy.company_code, policy.policy_number '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Else
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Set @SQLText = @SQLText + 'ORDER BY  ' +char(13)+char(9)+ '''' + @SortField + '''' + ' ' +  @SortDirection
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>Exec(@SQLText)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>--debug
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Search</SPROC_NAME><Text>--Print (@SQLText)
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_Search</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_SelectCoverage</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-952476657</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_SelectCoverage</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_SelectCoverage
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_SelectCoverage</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_SelectCoverage</SPROC_NAME><Text>SET NOCOUNT ON;
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_SelectCoverage</SPROC_NAME><Text>SELECT policy_coverage_id, policy_id, plan_code_id, death_benefit_option_code, purpose_of_coverage_id, coverage_type, indicator_code, amount, coverage_status, premium_mode, investment_objective, pref_date_of_withdrawl, planned_premium, initial_planned_pre</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_SelectCoverage</SPROC_NAME><Text>mium, equivalent_age, can_take_final_action_flag, temp_flat_extra_period, perm_flat_extra_amount, temp_flat_extra_amount, flat_extra_reason, temp_table_rating, temp_table_reason, perm_table_rating, perm_table_reason FROM policy_coverage
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_SelectCoverage</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_Set_PolicyInfo</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>737879660</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_Set_PolicyInfo</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_Set_PolicyInfo
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Set_PolicyInfo</SPROC_NAME><Text>/*
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Set_PolicyInfo</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Set_PolicyInfo</SPROC_NAME><Text>@parameter1 datatype = default value,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Set_PolicyInfo</SPROC_NAME><Text>@parameter2 datatype OUTPUT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Set_PolicyInfo</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Set_PolicyInfo</SPROC_NAME><Text>*/
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Set_PolicyInfo</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Set_PolicyInfo</SPROC_NAME><Text>/* SET NOCOUNT ON */
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_Set_PolicyInfo</SPROC_NAME><Text>RETURN
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_Set_PolicyInfo</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1626012115</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_UpdateCoverage
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@policy_coverage_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@policy_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@plan_code_id char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@death_benefit_option_code char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@purpose_of_coverage_id char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@coverage_type char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@indicator_code char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@amount numeric(12),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@coverage_status char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@premium_mode char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@investment_objective char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@pref_date_of_withdrawl datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@planned_premium numeric(12,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@initial_planned_premium numeric(12,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@equivalent_age int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@can_take_final_action_flag int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@temp_flat_extra_period int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@perm_flat_extra_amount numeric(5,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@temp_flat_extra_amount numeric(5,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@flat_extra_reason varchar(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@temp_table_rating char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@temp_table_reason varchar(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@perm_table_rating char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@perm_table_reason varchar(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_policy_coverage_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_amount numeric(12),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_amount1 numeric(12),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_can_take_final_action_flag int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_can_take_final_action_flag1 int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_coverage_status char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_coverage_status1 char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_coverage_type char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_coverage_type1 char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_death_benefit_option_code char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_death_benefit_option_code1 char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_equivalent_age int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_equivalent_age1 int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_perm_flat_extra_amount numeric(5,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_perm_flat_extra_amount1 numeric(5,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_temp_flat_extra_amount numeric(5,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_temp_flat_extra_amount1 numeric(5,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_temp_flat_extra_period int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_temp_flat_extra_period1 int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_flat_extra_reason varchar(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_flat_extra_reason1 varchar(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_indicator_code char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_indicator_code1 char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_initial_planned_premium numeric(12,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_initial_planned_premium1 numeric(12,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_investment_objective char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_investment_objective1 char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_perm_table_rating char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_perm_table_rating1 char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_perm_table_reason varchar(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_perm_table_reason1 varchar(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_plan_code_id char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_plan_code_id1 char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_planned_premium numeric(12,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_planned_premium1 numeric(12,2),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_policy_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_policy_id1 int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_pref_date_of_withdrawl datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_pref_date_of_withdrawl1 datetime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_premium_mode char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_premium_mode1 char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_purpose_of_coverage_id char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_purpose_of_coverage_id1 char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_temp_table_rating char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_temp_table_rating1 char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_temp_table_reason varchar(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Original_temp_table_reason1 varchar(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>@Select_policy_coverage_id int
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>SET NOCOUNT OFF;
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>UPDATE policy_coverage SET policy_coverage_id = @policy_coverage_id, policy_id = @policy_id, plan_code_id = @plan_code_id, death_benefit_option_code = @death_benefit_option_code, purpose_of_coverage_id = @purpose_of_coverage_id, coverage_type = @coverage_</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>type, indicator_code = @indicator_code, amount = @amount, coverage_status = @coverage_status, premium_mode = @premium_mode, investment_objective = @investment_objective, pref_date_of_withdrawl = @pref_date_of_withdrawl, planned_premium = @planned_premium,</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text> initial_planned_premium = @initial_planned_premium, equivalent_age = @equivalent_age, can_take_final_action_flag = @can_take_final_action_flag, temp_flat_extra_period = @temp_flat_extra_period, perm_flat_extra_amount = @perm_flat_extra_amount, temp_flat_</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>extra_amount = @temp_flat_extra_amount, flat_extra_reason = @flat_extra_reason, temp_table_rating = @temp_table_rating, temp_table_reason = @temp_table_reason, perm_table_rating = @perm_table_rating, perm_table_reason = @perm_table_reason WHERE (policy_co</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>verage_id = @Original_policy_coverage_id) AND (amount = @Original_amount OR @Original_amount1 IS NULL AND amount IS NULL) AND (can_take_final_action_flag = @Original_can_take_final_action_flag OR @Original_can_take_final_action_flag1 IS NULL AND can_take_</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>final_action_flag IS NULL) AND (coverage_status = @Original_coverage_status OR @Original_coverage_status1 IS NULL AND coverage_status IS NULL) AND (coverage_type = @Original_coverage_type OR @Original_coverage_type1 IS NULL AND coverage_type IS NULL) AND </Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>(death_benefit_option_code = @Original_death_benefit_option_code OR @Original_death_benefit_option_code1 IS NULL AND death_benefit_option_code IS NULL) AND (equivalent_age = @Original_equivalent_age OR @Original_equivalent_age1 IS NULL AND equivalent_age </Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>IS NULL) AND (perm_flat_extra_amount = @Original_perm_flat_extra_amount OR @Original_perm_flat_extra_amount1 IS NULL AND perm_flat_extra_amount IS NULL) AND (temp_flat_extra_amount = @Original_temp_flat_extra_amount OR @Original_temp_flat_extra_amount1 IS</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text> NULL AND temp_flat_extra_amount IS NULL) AND (temp_flat_extra_period = @Original_temp_flat_extra_period OR @Original_temp_flat_extra_period1 IS NULL AND temp_flat_extra_period IS NULL) AND (flat_extra_reason = @Original_flat_extra_reason OR @Original_fla</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>t_extra_reason1 IS NULL AND flat_extra_reason IS NULL) AND (indicator_code = @Original_indicator_code OR @Original_indicator_code1 IS NULL AND indicator_code IS NULL) AND (initial_planned_premium = @Original_initial_planned_premium OR @Original_initial_pl</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>anned_premium1 IS NULL AND initial_planned_premium IS NULL) AND (investment_objective = @Original_investment_objective OR @Original_investment_objective1 IS NULL AND investment_objective IS NULL) AND (perm_table_rating = @Original_perm_table_rating OR @Or</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>iginal_perm_table_rating1 IS NULL AND perm_table_rating IS NULL) AND (perm_table_reason = @Original_perm_table_reason OR @Original_perm_table_reason1 IS NULL AND perm_table_reason IS NULL) AND (plan_code_id = @Original_plan_code_id OR @Original_plan_code_</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>id1 IS NULL AND plan_code_id IS NULL) AND (planned_premium = @Original_planned_premium OR @Original_planned_premium1 IS NULL AND planned_premium IS NULL) AND (policy_id = @Original_policy_id OR @Original_policy_id1 IS NULL AND policy_id IS NULL) AND (pref</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>_date_of_withdrawl = @Original_pref_date_of_withdrawl OR @Original_pref_date_of_withdrawl1 IS NULL AND pref_date_of_withdrawl IS NULL) AND (premium_mode = @Original_premium_mode OR @Original_premium_mode1 IS NULL AND premium_mode IS NULL) AND (purpose_of_</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>coverage_id = @Original_purpose_of_coverage_id OR @Original_purpose_of_coverage_id1 IS NULL AND purpose_of_coverage_id IS NULL) AND (temp_table_rating = @Original_temp_table_rating OR @Original_temp_table_rating1 IS NULL AND temp_table_rating IS NULL) AND</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text> (temp_table_reason = @Original_temp_table_reason OR @Original_temp_table_reason1 IS NULL AND temp_table_reason IS NULL);
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>SELECT policy_coverage_id, policy_id, plan_code_id, death_benefit_option_code, purpose_of_coverage_id, coverage_type, indicator_code, amount, coverage_status, premium_mode, investment_objective, pref_date_of_withdrawl, planned_premium, initial_planned_pre</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>mium, equivalent_age, can_take_final_action_flag, temp_flat_extra_period, perm_flat_extra_amount, temp_flat_extra_amount, flat_extra_reason, temp_table_rating, temp_table_reason, perm_table_rating, perm_table_reason FROM policy_coverage WHERE (policy_cove</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME><Text>rage_id = @Select_policy_coverage_id)
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_UpdateCoverage</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-125037499</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_UpdateNoteByNoteID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>@noteID as Integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>@authorID as Integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>@diaryDate as DateTime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>@visibility as Char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>@noteUpdateText as Varchar(8000),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>@authorName as Varchar(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>@insuredName as Varchar(100)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>SET NOCOUNT ON
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Declare @workDate as DateTime
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Set @workDate = GETDATE()
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>-- if note text is blank don't do full update
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>If Len(RTrim(@noteUpdateText)) = 0
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Begin
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Update notes
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Set
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>diary_date = @diaryDate,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>visibility = @visibility,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>update_date = @workDate
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>note_id = @noteID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>End
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Else
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Begin
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Declare @noteText as Varchar(8000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Declare @topic as Varchar(200)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>-- get topic/subject
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Set @topic = (Select topic from notes where note_id = @noteID)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>-- check to see if this note already hasd an update. If it doesn't
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>-- add Suplemental title
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>If  (SELECT CHARINDEX('--- Supplemental note(s) ---', note)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>FROM notes WHERE note_id = @noteID) = 0
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Begin
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Set @noteText = char(9)+ char(9)+ '--- Supplemental note(s) ---' + char(13) +
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>char(9)+ char(9)+ 'Date: ' + Convert(VarChar(25), @workDate) + char(9)+ 'Author: ' + @authorName + char(9) + char(13) +
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>char(9)+ char(9)+ char(9)+ @noteUpdateText + char(13)  + char(13)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>End
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Else
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Begin
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Set @noteText = char(9)+ char(9)+ 'Date: ' + Convert(VarChar(25), @workDate) + char(9)+ 'Author: ' + @authorName + char(9) + char(13) +
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>char(9)+ char(9)+ char(9)+ @noteUpdateText + char(13)  + char(13)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>End
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>-- update easy stuff
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Update notes
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Set
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>author = @authorID,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>diary_date = @diaryDate,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>visibility = @visibility,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>update_date = @workDate
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>note_id = @noteID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>-- insert bulkcopy prcess needs to know the name of the parent database
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>-- this process gets that name.
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>-- create temp table
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Create Table #Twho
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>spid int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>ecid int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>status varchar(25),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>loginame varchar(25),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>hostname varchar(25),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>blk int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>dbname varchar(50),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>cmd varchar(254)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>-- get db information
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Insert Into #Twho
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>EXEC sp_who  @@SPID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Declare @CurrDB varchar(25)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>select @CurrDB = dbname from #Twho
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>-- enable bulk insert into database
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>EXEC sp_dboption @CurrDB, 'select into/bulkcopy', 'true'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>-- append new note text to existing note text
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Declare @ptrval binary(16)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Select @ptrval = TEXTPTR(note)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>From notes
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>Where note_id = @noteID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>-- commit update
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>UPDATETEXT notes.note @ptrval null null @noteText
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>-- disable bulk insert into database
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>select @CurrDB = dbname from #Twho
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>EXEC sp_dboption @CurrDB, 'select into/bulkcopy', 'true'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>-- delete temp table
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>drop table #Twho
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME><Text>End
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_UpdateNoteByNoteID</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-2033606253</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_UpdatePersonAddress
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>@person_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>@address_type char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>@address_line1 char(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>@address_line2 char(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>@address_line3 char(100),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>@city char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>@country_id char(8),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>@postal_code char(50),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>@country_state_id char(10)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>UPDATE    person_address
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>SET
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>address_line1 = @address_line1,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>address_line2 = @address_line2,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>address_line3 = @address_line3,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>city = @city,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>country_id = @country_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>postal_code = @postal_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>country_state_id = @country_state_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME><Text>where person_id = @person_id and address_type_code = @address_type
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_UpdatePersonAddress</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_UpdatePlanCodeRulebook</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-626792885</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePlanCodeRulebook</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_UpdatePlanCodeRulebook
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePlanCodeRulebook</SPROC_NAME><Text>@rulebook_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePlanCodeRulebook</SPROC_NAME><Text>@effective_date datetime
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePlanCodeRulebook</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePlanCodeRulebook</SPROC_NAME><Text>update tr_plan_code_rulebook
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePlanCodeRulebook</SPROC_NAME><Text>set effective_date = @effective_date
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePlanCodeRulebook</SPROC_NAME><Text>where rulebook_id = @rulebook_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdatePlanCodeRulebook</SPROC_NAME><Text>return 0
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_UpdatePlanCodeRulebook</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1639649003</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>
CREATE PROCEDURE usp_AUS_UpdateRequirement
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@requirement_code char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@requirement_name char (50),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@requirement_category smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@notify_when_satisfied smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@can_auto_approve smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@expiration_days integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@followup_days integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@external_followup_days integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@requirement_type_id char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@default_ordered_by char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@notify_when_received smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@is_active smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@updated_by integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@external_requirement_code varchar(50),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@provider char(20),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@evidence_type char(50),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@authorization_required smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@hippa_auth_required smallint,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@hierarchy integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	@new_business_until_closed smallint
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>declare @updDate as datetime
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>set @updDate = getDate()
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>UPDATE tl_requirement
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>SET
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	requirement_code = @requirement_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	requirement_name =@requirement_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	requirement_category = @requirement_category,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	notify_when_satisfied =@notify_when_satisfied,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	can_auto_approve = @can_auto_approve,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	expiration_days = @expiration_days,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	followup_days = @followup_days,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	external_followup_days = @external_followup_days,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	requirement_type_id = @requirement_type_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	default_ordered_by = @default_ordered_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	notify_when_received = @notify_when_received,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	is_active = @is_active,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	updated_by = @updated_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	update_date = @updDate,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	external_requirement_code = @external_requirement_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	provider = @provider,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	evidence_type = @evidence_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	authorization_required = @authorization_required,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	hippa_auth_required  = @hippa_auth_required,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	hierarchy = @hierarchy,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	new_business_until_closed = @new_business_until_closed
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME><Text>	requirement_code = @requirement_code
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_UpdateRequirement</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_UpdateReviewMessageNote</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1713275549</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateReviewMessageNote</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_UpdateReviewMessageNote
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateReviewMessageNote</SPROC_NAME><Text>@noteID as Integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateReviewMessageNote</SPROC_NAME><Text>@rmID as Integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateReviewMessageNote</SPROC_NAME><Text>@messageType as Integer
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateReviewMessageNote</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateReviewMessageNote</SPROC_NAME><Text>Update review_message
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateReviewMessageNote</SPROC_NAME><Text>Set  review_message.note_id = @noteID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateReviewMessageNote</SPROC_NAME><Text>Where review_message.review_message_id = @rmID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateReviewMessageNote</SPROC_NAME><Text>if @messageType = 0
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateReviewMessageNote</SPROC_NAME><Text>Begin
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateReviewMessageNote</SPROC_NAME><Text>Update review_message
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateReviewMessageNote</SPROC_NAME><Text>Set review_message.checkoff_flag = -1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateReviewMessageNote</SPROC_NAME><Text>Where  review_message.review_message_id = @rmID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateReviewMessageNote</SPROC_NAME><Text>End
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateReviewMessageNote</SPROC_NAME><Text>Return @@Error
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_UpdateReviewMessageNote</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-154206708</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_UpdateRule
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>@update_date datetime =null output,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>@rule_id int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>@rule_name char(50),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>@description varchar(1000),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>@is_active int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>@updated_by int,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>@rule_text varchar(2000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>declare @updDate as datetime
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>set @updDate = GetDate()
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>set @update_date = @updDate
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>UPDATE    te_rule
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>SET
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>rule_name = @rule_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>description = @description,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>is_active = @is_active,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>update_date = @updDate,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>updated_by = @updated_by,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>rule_text = @rule_text
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME><Text>where rule_id = @rule_id
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_UpdateRule</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_person</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>173794287</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_person</SPROC_NAME><Text>CREATE PROCEDURE usp_person
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_person</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_person</SPROC_NAME><Text>select * from person,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_person</SPROC_NAME><Text>person_address,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_person</SPROC_NAME><Text>person_address_line,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_person</SPROC_NAME><Text>person_phone,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_person</SPROC_NAME><Text>requirement_information,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_person</SPROC_NAME><Text>part2
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_person</SPROC_NAME><Text>where  person_address.person_id = person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_person</SPROC_NAME><Text>and person_address_line.person_id = person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_person</SPROC_NAME><Text>and person_phone.person_id = person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_person</SPROC_NAME><Text>and requirement_information.person_id = person.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_person</SPROC_NAME><Text>and requirement_type_id = "part2"
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_person</SPROC_NAME><Text>and requirement_information.requirement_information_id = part2.requirement_information_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_person</SPROC_NAME><Text>and address_type = "home"
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_person</SPROC_NAME><Text>and phone_type_id = "home"
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_person</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-1658610858</Check_Sum><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>
			CREATE PROCEDURE uspGetAdminAllApplicants 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>    @password nvarchar(255),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>    @where_clause nvarchar(500)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>DECLARE @sql1 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>DECLARE @sql2 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>DECLARE @sql3 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>DECLARE @sql4 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>SET @sql1= N'SELECT wrap.* FROM (SELECT     p.company_code, p.policy_number AS case_number, p.alternate_case_id AS alternate_case_number, p.receive_date, p.service_associate_id, 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                      dbo.clrLSDecrypt(i.last_name, ''' + @password + ''') AS applicant_last_name, dbo.clrLSDecrypt(i.first_name, ''' + @password + ''') AS applicant_first_name, i.sex AS gender, ppi.applicant_status AS applicant_status_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     code_value
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          tl_code
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (language_code = ''en-us'') AND (code_type = ''applicant_status'') AND (code_id = ppi.applicant_status)) AS applicant_status, 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                      ppi.applicant_status_date, pc.amount AS amount_applied_for, dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as birth_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     address_line1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          person_address AS pa
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (address_type_code = ''RESIDENCE'') AND (person_id = i.person_id)) AS residence_address_line1,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     address_line2
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          person_address AS pa
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (address_type_code = ''RESIDENCE'') AND (person_id = i.person_id)) AS residence_address_line2,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     address_line3
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          person_address AS pa
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (address_type_code = ''RESIDENCE'') AND (person_id = i.person_id)) AS residence_address_line3,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     city
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          person_address AS pa
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (address_type_code = ''RESIDENCE'') AND (person_id = i.person_id)) AS residence_city,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     LTRIM(RTRIM(cs.state_name)) + '' ('' + LTRIM(RTRIM(cs.state_code)) + '')'' AS Expr1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          person_address AS pa INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                   tl_country_state AS cs ON pa.country_state_id = cs.country_state_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (pa.address_type_code = ''RESIDENCE'') AND (pa.person_id = i.person_id)) AS residence_state,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     postal_code
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          person_address AS pa
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (address_type_code = ''RESIDENCE'') AND (person_id = i.person_id)) AS residence_postal_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     area_code
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          person_phone AS ph
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (phone_type_code = ''HOME'') AND (person_id = i.person_id)) AS home_phone_area_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     prefix
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          person_phone AS ph
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (phone_type_code = ''HOME'') AND (person_id = i.person_id)) AS home_phone_prefix,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     suffix
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          person_phone AS ph
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (phone_type_code = ''HOME'') AND (person_id = i.person_id)) AS home_phone_suffix,'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>SET @sql2= N'(SELECT     area_code
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          person_phone AS ph
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (phone_type_code = ''WORK'') AND (person_id = i.person_id)) AS work_phone_area_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     prefix
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          person_phone AS ph
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (phone_type_code = ''WORK'') AND (person_id = i.person_id)) AS work_phone_prefix,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     suffix
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM         person_phone AS ph
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (phone_type_code = ''WORK'') AND (person_id = i.person_id)) AS work_phone_suffix,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     area_code
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          person_phone AS ph
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (phone_type_code = ''CELL'') AND (person_id = i.person_id)) AS cell_phone_area_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     prefix
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          person_phone AS ph
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (phone_type_code = ''CELL'') AND (person_id = i.person_id)) AS cell_phone_prefix,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     suffix
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          person_phone AS ph
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (phone_type_code = ''CELL'') AND (person_id = i.person_id)) AS cell_phone_suffix, i.email_address, cpi.final_action_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     RTRIM(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + RTRIM(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')) AS Expr1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          person AS ps INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                   aus_user AS u ON ps.person_id = u.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (u.user_id = cpi.final_action_by_id)) AS final_action_by, cpi.reason_text AS final_action_reason,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     reason_code
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          tl_final_action_reason
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (reason_status =
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                       (SELECT     code_value
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                         FROM          tl_code AS tl_code_1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                         WHERE      (language_code = ''en-us'') AND (code_type = ''applicant_status'') AND (code_id = cpi.coverage_status))) AND 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                   (reason_text = cpi.reason_text)) AS reason_code, assoc.association_name, pc.plan_code_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     description
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          tl_plan_code
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (plan_code_id = pc.plan_code_id)) AS plan_code_description, cpi.g_number, pc.planned_premium,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     code_value
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          tl_acord_codes
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (code_type = ''Payment Mode'') AND (code_id = p.payment_mode_code)) AS premium_mode, cpi.web_quoted_class,'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>SET @sql3= N'(SELECT     description
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          ta_rate_table_class
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (rulebook_id =
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                       (SELECT     TOP (1) rulebook_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                         FROM          rulebook_view
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                         WHERE      (plan_code_id = pc.plan_code_id) AND (association_code = p.association_code) AND (type = 0 OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                                                type IS NULL) OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                                                (plan_code_id = pc.plan_code_id) AND (type = 0 OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                                                type IS NULL) AND (p.association_code IS NULL))) AND (sequence_no = cpi.rate_class_quoted)) AS applied_for_rate_class,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     description
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          ta_rate_table_class AS ta_rate_table_class_2
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (rulebook_id =
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                       (SELECT     TOP (1) rulebook_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                         FROM          rulebook_view AS rulebook_view_2
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                         WHERE      (plan_code_id = pc.plan_code_id) AND (association_code = p.association_code) AND (type = 0 OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                                                type IS NULL) OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                                                (plan_code_id = pc.plan_code_id) AND (type = 0 OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                                                type IS NULL) AND (p.association_code IS NULL))) AND (sequence_no = cpi.rate_class_approved)) 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                      AS system_recommended_rate_class,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     description
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          ta_rate_table_class AS ta_rate_table_class_1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (rulebook_id =
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                       (SELECT     TOP (1) rulebook_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                         FROM          rulebook_view AS rulebook_view_1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                         WHERE      (plan_code_id = pc.plan_code_id) AND (association_code = p.association_code) AND (type = 0 OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                                                type IS NULL) OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                                                (plan_code_id = pc.plan_code_id) AND (type = 0 OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                                                type IS NULL) AND (p.association_code IS NULL))) AND (sequence_no = cpi.rate_class_issued)) AS rate_class_approved, 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                      pc.approved_amount AS issued_amount, pc.perm_table_rating AS table_rating, pc.perm_flat_extra_amount AS flat_extra_amount, p.cwa_amount, 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                      ap.income,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     tobacco_use_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          tobacco
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (requirement_information_id = ap.requirement_information_id)) AS smoker_status, ap.occupation, '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>SET @sql4= N'p.lead_number_id AS aggregator_lead_number, p.source_info,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     partner_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          tl_source_info
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (source_info = p.source_info)) AS partner_id, p.distributor_code, p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     RTRIM(dbo.clrLSDecrypt(last_name, ''' + @password + ''')) + '', '' + RTRIM(dbo.clrLSDecrypt(first_name, ''' + @password + ''')) AS Expr1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          aus_user_view AS uw
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (user_id = p.underwriter_id)) AS underwriter_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     RTRIM(dbo.clrLSDecrypt(last_name, ''' + @password + ''')) + '', '' + RTRIM(dbo.clrLSDecrypt(first_name, ''' + @password + ''')) AS Expr1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          aus_user_view AS sa
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (user_id = p.service_associate_id)) AS service_associate_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     team_name
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          team AS tm
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (team_id = p.team_id)) AS team_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     TOP (1) agent_number
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          agent_view
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (policy_id = p.policy_id)) AS agent_1_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     TOP (1) agent_number
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          agent_view AS agent_view_2
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (policy_id = p.policy_id) AND (agent_number NOT IN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                       (SELECT     agent_number
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                         FROM          agent_view AS agent_view_1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                         WHERE      (policy_id = p.policy_id)))) AS agent_2_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     TOP (1) agency_number
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          agency_view
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE      (policy_id = p.policy_id)) AS bga_agency_number, p.team_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>FROM         policy_person_insured AS ppi INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                      coverage_person AS cp INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                      coverage_person_insured AS cpi ON cp.coverage_person_id = cpi.coverage_person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                      policy_coverage AS pc ON cp.policy_coverage_id = pc.policy_coverage_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                      person AS i ON cp.person_id = i.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                      policy AS p LEFT OUTER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                          (SELECT     association_code, name AS association_name
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM          association
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            UNION
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            SELECT     c.company_code AS association_code, dbo.clrLSDecrypt(per.last_name, ''' + @password + ''') AS association_name
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            FROM         company AS c INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                  person AS per ON c.person_id = per.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                            WHERE     (per.class_type = ''ASSN'') OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                                                  (per.class_type = ''GRP'')) AS assoc ON assoc.association_code = p.association_code ON pc.policy_id = p.policy_id ON 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                      ppi.policy_person_id = cpi.policy_person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>                      insured_application_info AS ap ON ppi.policy_person_id = ap.policy_person_id) AS wrap '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>EXEC(@sql1 + @sql2 + @sql3 + @sql4 + @where_clause)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME><Text /></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>uspGetAdminAllApplicants</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1556016594</Check_Sum><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>
			CREATE PROCEDURE uspGetAgeAmountMatrix 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>    @password nvarchar(255),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>    @where_clause nvarchar(500)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>DECLARE @sql1 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>DECLARE @sql2 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>DECLARE @sql3 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>DECLARE @sql4 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>DECLARE @sql5 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>DECLARE @sql6 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>DECLARE @sql7 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>DECLARE @sql8 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>SET @sql1= N'SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	p.company_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	p.service_associate_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	p.receive_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	p.distributor_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	p.source_info,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 18 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 41 and i.underwriting_amount &gt;= 100000 and i.underwriting_amount &lt; 151000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_a_amount_a,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 41 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 51 and i.underwriting_amount &gt;= 100000 and i.underwriting_amount &lt; 151000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_b_amount_a,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 51 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 56 and i.underwriting_amount &gt;= 100000 and i.underwriting_amount &lt; 151000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_c_amount_a,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 56 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 61 and i.underwriting_amount &gt;= 100000 and i.underwriting_amount &lt; 151000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_d_amount_a,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 61 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 66 and i.underwriting_amount &gt;= 100000 and i.underwriting_amount &lt; 151000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_e_amount_a,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 66 and i.underwriting_amount &gt;= 100000 and i.underwri</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>ting_amount &lt; 151000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_f_amount_a,'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>SET @sql2= N'(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 18 and (cast(CURRENT_TIMESTAMP - dbo.clrL</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>SDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &lt; 41 and i.underwriting_amount &gt;= 151000 and i.underwriting_amount &lt; 251000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_a_amount_b,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 41 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 51 and i.underwriting_amount &gt;= 151000 and i.underwriting_amount &lt; 251000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_b_amount_b,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 51 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 56 and i.underwriting_amount &gt;= 151000 and i.underwriting_amount &lt; 251000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_c_amount_b,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 56 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 61 and i.underwriting_amount &gt;= 151000 and i.underwriting_amount &lt; 251000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_d_amount_b,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 61 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 66 and i.underwriting_amount &gt;= 151000 and i.underwriting_amount &lt; 251000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_e_amount_b,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 66 and i.underwriting_amount &gt;= 151000 and i.underwri</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>ting_amount &lt; 251000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_f_amount_b,'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>SET @sql3= N'(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 18 and (cast(CURRENT_TIMESTAMP - dbo.clrL</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>SDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &lt; 41 and i.underwriting_amount &gt;= 251000 and i.underwriting_amount &lt; 501000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_a_amount_c,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 41 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 51 and i.underwriting_amount &gt;= 251000 and i.underwriting_amount &lt; 501000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_b_amount_c,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 51 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 56 and i.underwriting_amount &gt;= 251000 and i.underwriting_amount &lt; 501000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_c_amount_c,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 56 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 61 and i.underwriting_amount &gt;= 251000 and i.underwriting_amount &lt; 501000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_d_amount_c,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 61 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 66 and i.underwriting_amount &gt;= 251000 and i.underwriting_amount &lt; 501000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_e_amount_c,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 66 and i.underwriting_amount &gt;= 251000 and i.underwri</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>ting_amount &lt; 501000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_f_amount_c,'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>SET @sql4= N'(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 18 and (cast(CURRENT_TIMESTAMP - dbo.clrL</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>SDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &lt; 41 and i.underwriting_amount &gt;= 501000 and i.underwriting_amount &lt; 1001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_a_amount_d,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 41 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 51 and i.underwriting_amount &gt;= 501000 and i.underwriting_amount &lt; 1001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_b_amount_d,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 51 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 56 and i.underwriting_amount &gt;= 501000 and i.underwriting_amount &lt; 1001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_c_amount_d,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 56 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 61 and i.underwriting_amount &gt;= 501000 and i.underwriting_amount &lt; 1001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_d_amount_d,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 61 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 66 and i.underwriting_amount &gt;= 501000 and i.underwriting_amount &lt; 1001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_e_amount_d,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 66 and i.underwriting_amount &gt;= 501000 and i.underwri</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>ting_amount &lt; 1001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_f_amount_d,'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>SET @sql5= N'(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 18 and (cast(CURRENT_TIMESTAMP - dbo.clrL</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>SDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &lt; 41 and i.underwriting_amount &gt;= 1001000 and i.underwriting_amount &lt; 2001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_a_amount_e,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 41 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 51 and i.underwriting_amount &gt;= 1001000 and i.underwriting_amount &lt; 2001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_b_amount_e,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 51 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 56 and i.underwriting_amount &gt;= 1001000 and i.underwriting_amount &lt; 2001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_c_amount_e,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 56 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 61 and i.underwriting_amount &gt;= 1001000 and i.underwriting_amount &lt; 2001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_d_amount_e,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 61 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 66 and i.underwriting_amount &gt;= 1001000 and i.underwriting_amount &lt; 2001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_e_amount_e,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 66 and i.underwriting_amount &gt;= 1001000 and i.underwr</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>iting_amount &lt; 2001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_f_amount_e,'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>SET @sql6= N'(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 18 and (cast(CURRENT_TIMESTAMP - dbo.clrL</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>SDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &lt; 41 and i.underwriting_amount &gt;= 2001000 and i.underwriting_amount &lt; 3001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_a_amount_f,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 41 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 51 and i.underwriting_amount &gt;= 2001000 and i.underwriting_amount &lt; 3001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_b_amount_f,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 51 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 56 and i.underwriting_amount &gt;= 2001000 and i.underwriting_amount &lt; 3001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_c_amount_f,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 56 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 61 and i.underwriting_amount &gt;= 2001000 and i.underwriting_amount &lt; 3001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_d_amount_f,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 61 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 66 and i.underwriting_amount &gt;= 2001000 and i.underwriting_amount &lt; 3001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_e_amount_f,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 66 and i.underwriting_amount &gt;= 2001000 and i.underwr</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>iting_amount &lt; 3001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_f_amount_f,'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>SET @sql7= N'(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 18 and (cast(CURRENT_TIMESTAMP - dbo.clrL</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>SDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &lt; 41 and i.underwriting_amount &gt;= 3001000 and i.underwriting_amount &lt; 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_a_amount_g,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 41 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 51 and i.underwriting_amount &gt;= 3001000 and i.underwriting_amount &lt; 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_b_amount_g,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 51 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 56 and i.underwriting_amount &gt;= 3001000 and i.underwriting_amount &lt; 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_c_amount_g,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 56 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 61 and i.underwriting_amount &gt;= 3001000 and i.underwriting_amount &lt; 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_d_amount_g,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 61 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 66 and i.underwriting_amount &gt;= 3001000 and i.underwriting_amount &lt; 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_e_amount_g,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 66 and i.underwriting_amount &gt;= 3001000 and i.underwr</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>iting_amount &lt; 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_f_amount_g,'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>SET @sql8= N'(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 18 and (cast(CURRENT_TIMESTAMP - dbo.clrL</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>SDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &lt; 41 and i.underwriting_amount &gt;= 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_a_amount_h,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 41 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 51 and i.underwriting_amount &gt;= 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_b_amount_h,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 51 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 56 and i.underwriting_amount &gt;= 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_c_amount_h,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 56 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 61 and i.underwriting_amount &gt;= 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_d_amount_h,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 61 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.b</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>irth_date, ''' + @password + ''') as int)/365) &lt; 66 and i.underwriting_amount &gt;= 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_e_amount_h,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) &gt;= 66 and i.underwriting_amount &gt;= 5001000 and i.policy_</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>id = p.policy_id and i.applicant_status = st.code_id and st.external_code &lt;&gt; ''CN'') as age_f_amount_h,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	p.team_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>	policy p '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>EXEC(@sql1 + @sql2 + @sql3 + @sql4 + @sql5 + @sql6 + @sql7 + @sql8 + @where_clause)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME><Text /></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>uspGetAgeAmountMatrix</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-23578509</Check_Sum><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>CREATE PROCEDURE uspGetAllApplicants 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>    @password nvarchar(255),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>    @where_clause nvarchar(500)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>DECLARE @sql1 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>DECLARE @sql2 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>DECLARE @sql3 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>SET @sql1= N'SELECT wrap.* FROM (SELECT     p.company_code, p.policy_number AS case_number, p.alternate_case_id AS alternate_case_number, p.receive_date, p.service_associate_id, 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>      i.sex AS gender, ppi.applicant_status AS applicant_status_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>          (SELECT     code_value
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            FROM          tl_code
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            WHERE      (language_code = ''en-us'') AND (code_type = ''applicant_status'') AND (code_id = ppi.applicant_status)) AS applicant_status, 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>      ppi.applicant_status_date, pc.amount AS amount_applied_for, dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as birth_date, pa.country_state_id AS residence_state_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>          (SELECT     RTRIM(state_name) + '' ('' + RTRIM(state_code) + '')'' AS Expr1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            FROM          tl_country_state AS cs
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            WHERE      (country_state_id = pa.country_state_id)) AS residence_state, cpi.final_action_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>          (SELECT     RTRIM(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + RTRIM(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')) AS Expr1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            FROM          person AS ps INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                   aus_user AS u ON ps.person_id = u.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            WHERE      (u.user_id = cpi.final_action_by_id)) AS final_action_by, cpi.reason_text AS final_action_reason,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>          (SELECT     reason_code
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            FROM          tl_final_action_reason
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            WHERE      (reason_status =
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                       (SELECT     code_value
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                         FROM          tl_code AS tl_code_1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                         WHERE      (language_code = ''en-us'') AND (code_type = ''applicant_status'') AND (code_id = cpi.coverage_status))) AND 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                   (reason_text = cpi.reason_text)) AS reason_code, assoc.association_name, pc.plan_code_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>          (SELECT     description
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            FROM          tl_plan_code
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            WHERE      (plan_code_id = pc.plan_code_id)) AS plan_code_description, cpi.g_number, pc.planned_premium,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>          (SELECT     code_value
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            FROM          tl_acord_codes
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            WHERE      (code_type = ''Payment Mode'') AND (code_id = p.payment_mode_code)) AS premium_mode, cpi.web_quoted_class,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>          (SELECT     description
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            FROM          ta_rate_table_class
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            WHERE      (rulebook_id =
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                       (SELECT     TOP (1) rulebook_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                         FROM          rulebook_view
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                         WHERE      (plan_code_id = pc.plan_code_id) AND (association_code = p.association_code) AND (type = 0 OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                                                type IS NULL) OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                                                (plan_code_id = pc.plan_code_id) AND (type = 0 OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                                                type IS NULL) AND (p.association_code IS NULL))) AND (sequence_no = cpi.rate_class_quoted)) AS applied_for_rate_class,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>						(SELECT     description
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            FROM          ta_rate_table_class AS ta_rate_table_class_2
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            WHERE      (rulebook_id =
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                       (SELECT     TOP (1) rulebook_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                         FROM          rulebook_view AS rulebook_view_2
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                         WHERE      (plan_code_id = pc.plan_code_id) AND (association_code = p.association_code) AND (type = 0 OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                                                type IS NULL) OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                                                (plan_code_id = pc.plan_code_id) AND (type = 0 OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                                                type IS NULL) AND (p.association_code IS NULL))) AND (sequence_no = cpi.rate_class_approved)) 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>      				AS system_recommended_rate_class,'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>SET @sql2= N'(SELECT     description
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            FROM          ta_rate_table_class AS ta_rate_table_class_1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            WHERE      (rulebook_id =
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                       (SELECT     TOP (1) rulebook_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                         FROM          rulebook_view AS rulebook_view_1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                         WHERE      (plan_code_id = pc.plan_code_id) AND (association_code = p.association_code) AND (type = 0 OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                                                type IS NULL) OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                                                (plan_code_id = pc.plan_code_id) AND (type = 0 OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                                                type IS NULL) AND (p.association_code IS NULL))) AND (sequence_no = cpi.rate_class_issued)) AS rate_class_approved, 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>      pc.approved_amount AS issued_amount, pc.perm_table_rating AS table_rating, pc.perm_flat_extra_amount AS flat_extra_amount, p.cwa_amount, 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>      ap.income,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>          (SELECT     tobacco_use_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            FROM          tobacco
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            WHERE      (requirement_information_id = ap.requirement_information_id)) AS smoker_status, ap.occupation, 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>      p.lead_number_id AS aggregator_lead_number, p.source_info,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>          (SELECT     partner_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            FROM          tl_source_info
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            WHERE      (source_info = p.source_info)) AS partner_id, p.distributor_code, p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>          (SELECT     RTRIM(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + RTRIM(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')) AS Expr1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            FROM          person AS ps INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                   aus_user AS u ON ps.person_id = u.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            WHERE      (u.user_id = p.underwriter_id)) AS underwriter_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>          (SELECT     RTRIM(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + RTRIM(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')) AS Expr1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            FROM          person AS ps INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                   aus_user AS u ON ps.person_id = u.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            WHERE      (u.user_id = p.service_associate_id)) AS service_associate_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>          (SELECT     team_name
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            FROM          team AS tm
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            WHERE      (team_id = p.team_id)) AS team_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>          (SELECT     TOP (1) agent_number
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            FROM          agent_view
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            WHERE      (policy_id = p.policy_id)) AS agent_1_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>          (SELECT     TOP (1) agent_number
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            FROM          agent_view AS agent_view_2
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            WHERE      (policy_id = p.policy_id) AND (agent_number NOT IN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                       (SELECT     agent_number
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                         FROM          agent_view AS agent_view_1
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                         WHERE      (policy_id = p.policy_id)))) AS agent_2_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>          (SELECT     TOP (1) agency_number
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            FROM          agency_view
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>            WHERE      (policy_id = p.policy_id)) AS bga_agency_number, p.team_id'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>SET @sql3= N' FROM         insured_application_info AS ap INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>              policy_person_insured AS ppi INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>              coverage_person AS cp INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>              coverage_person_insured AS cpi ON cp.coverage_person_id = cpi.coverage_person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>              policy_coverage AS pc ON cp.policy_coverage_id = pc.policy_coverage_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>              person_address AS pa RIGHT OUTER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>              person AS i ON pa.person_id = i.person_id ON cp.person_id = i.person_id INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>              team AS t RIGHT OUTER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>              policy AS p ON t.team_id = p.team_id ON pc.policy_id = p.policy_id ON ppi.policy_person_id = cpi.policy_person_id ON 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>              ap.policy_person_id = ppi.policy_person_id LEFT OUTER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                  (SELECT association_code, name AS association_name
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                    FROM          association
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                    UNION
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                    SELECT     c.company_code AS association_code, per.last_name AS association_name
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                    FROM         company AS c INNER JOIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                          person AS per ON c.person_id = per.person_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                    WHERE     (per.class_type = ''ASSN'') OR
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>                                          (per.class_type = ''GRP'')) AS assoc ON assoc.association_code = p.association_code
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>WHERE     (pa.address_type_code = ''RESIDENCE'')) AS wrap '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>EXEC(@sql1 + @sql2 + @sql3 + @where_clause)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetAllApplicants</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>uspGetAllApplicants</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1359634615</Check_Sum><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>
			CREATE PROCEDURE uspGetApplicantsByUnderwriter
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>    @password nvarchar(255),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>    @where_clause nvarchar(500)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>DECLARE @sql1 nvarchar(4000) 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>SET @sql1= N'SELECT wrap.* FROM (SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>	p.company_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>	p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>	p.service_associate_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>	i.applicant_status_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>	(select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>	from
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>	person ps, aus_user u
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>	where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>	u.person_id = ps.person_id and u.user_id = p.underwriter_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>	) as underwriter_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>	i.applicant_status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>	p.team_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>	policy p,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>	insured i
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>	i.policy_id = p.policy_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>	p.underwriter_id is not null and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>	i.applicant_status not in (select code_id from tl_code where code_type = ''applicant_status'' and external_code = ''CN'')) AS wrap '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>EXEC(@sql1 + @where_clause)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME><Text /></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>uspGetApplicantsByUnderwriter</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1050085666</Check_Sum><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>
			CREATE PROCEDURE uspGetFinalActionStatus 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>    @password nvarchar(255),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>    @where_clause nvarchar(500)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>DECLARE @sql1 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>SET @sql1= N'SELECT wrap.* FROM (SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>	p.company_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>	p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>	p.service_associate_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>	p.distributor_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>	p.source_info,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>	p.policy_number as case_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>	p.alternate_case_id as alternate_case_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>	(select code_value from tl_code where language_code = ''en-us'' and code_type = ''applicant_status'' and code_id = i.applicant_status) as applicant_status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>	(select top 1 final_action_date from insured_coverages_view where policy_person_id = i.policy_person_id) as final_action_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>	p.team_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>	policy p,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>	insured i
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>	i.policy_id = p.policy_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>	i.applicant_status in (select code_id from tl_code where code_type = ''applicant_status'' and external_code in (''AP'', ''DE'', ''RC'', ''WI''))) AS wrap '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>EXEC(@sql1 + @where_clause)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME><Text /></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>uspGetFinalActionStatus</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-351117731</Check_Sum><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>
			CREATE PROCEDURE uspGetFinalDisposition  
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>    @password nvarchar(255),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>    @where_clause nvarchar(500)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>DECLARE @sql1 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>SET @sql1= N'SELECT wrap.* FROM (SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>	p.company_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>	p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>	p.service_associate_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>	i.applicant_status_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>	p.distributor_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>	p.source_info,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>	(select external_code from tl_code where code_type = ''applicant_status'' and code_id = i.applicant_status) as applicant_status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>	i.underwriting_amount,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>	cast(i.applicant_status_date - p.receive_date as int) as days_open,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>	p.team_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>	policy p,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>	insured i
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>	i.policy_id = p.policy_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>	i.applicant_status in (select code_id from tl_code where code_type = ''applicant_status'' and external_code in (''AP'', ''DE'', ''RC'', ''WI''))) AS wrap '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>EXEC(@sql1 + @where_clause)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME><Text /></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>uspGetFinalDisposition</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>997071660</Check_Sum><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>
			CREATE PROCEDURE uspGetNbRequirementProductivity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>    @password nvarchar(255),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>    @where_clause nvarchar(500)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>DECLARE @sql1 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>SET @sql1= N'SELECT wrap.* FROM (SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	es.added_by as user_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	p.team_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	p.service_associate_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	(select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	from
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	person ps, aus_user u
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	u.person_id = ps.person_id and u.user_id = es.added_by
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	) as user_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	p.policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	ir.requirement_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	(select tlr.requirement_name from tl_requirement tlr where tlr.requirement_code = ir.requirement_code) as requirement_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	es.code as status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	es.status_date
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	policy p,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	policy_person pp,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	insured_requirement ir,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	evidence_status_view es
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	pp.policy_id = p.policy_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	pp.policy_person_id = ir.policy_person_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>	ir.insured_requirement_id = es.insured_requirement_id) AS wrap '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>EXEC(@sql1 + @where_clause)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME><Text /></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>uspGetNbRequirementProductivity</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-651367161</Check_Sum><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>
			CREATE PROCEDURE uspGetNbWorkTypeProductivity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>    @password nvarchar(255),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>    @where_clause nvarchar(500)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>DECLARE @sql1 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>SET @sql1= N'SELECT wrap.* FROM (SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	es.added_by as user_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.team_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.service_associate_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	(select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	from
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	person ps, aus_user u
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	u.person_id = ps.person_id and u.user_id = es.added_by
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	) as user_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	''Requirement'' as work_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	tlr.requirement_name as work_type_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	''Satisfied'' as status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	es.status_date
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	policy p,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	insured i,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	insured_requirement ir,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	tl_requirement tlr,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	evidence_status_view es
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	i.policy_id = p.policy_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	i.policy_person_id = ir.policy_person_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	ir.insured_requirement_id = es.insured_requirement_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	ir.requirement_code = tlr.requirement_code and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	es.code = ''Satisfied''
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>UNION
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	es.added_by as user_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.team_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.service_associate_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	(select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	from
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	person ps, aus_user u
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	u.person_id = ps.person_id and u.user_id = es.added_by
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	) as user_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	''Requirement'' as work_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	tlr.requirement_name as work_type_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	''Added'' as status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	es.status_date
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	policy p,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	insured i,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	insured_requirement ir,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	tl_requirement tlr,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	evidence_status_view es
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	i.policy_id = p.policy_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	i.policy_person_id = ir.policy_person_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	ir.insured_requirement_id = es.insured_requirement_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	ir.requirement_code = tlr.requirement_code and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	es.code = ''Open''
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>UNION
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	n.author as user_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.team_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.service_associate_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	(select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	from
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	person ps, aus_user u
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	u.person_id = ps.person_id and u.user_id = n.author
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	) as user_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	''Referral'' as work_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	''Referral'' as work_type_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	''Added'' as status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	n.added_date as status_date
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	policy p,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	insured i,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	notes n
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	i.policy_id = p.policy_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	i.policy_person_id = n.policy_person_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	n.note_type = ''Refer'' and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	n.reviewed_by is null
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>UNION
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	n.reviewed_by as user_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.team_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.service_associate_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	(select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	from
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	person ps, aus_user u
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	u.person_id = ps.person_id and u.user_id = n.reviewed_by
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	) as user_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	''Referral'' as work_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	''Referral'' as work_type_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	''Closed'' as status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	n.reviewed_date as status_date
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	policy p,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	insured i,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	notes n
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	i.policy_id = p.policy_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	i.policy_person_id = n.policy_person_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	n.note_type = ''Refer'' and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	n.reviewed_by is not null
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>UNION
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	rm.checked_off_by as user_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.team_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.service_associate_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	(select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	from
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	person ps, aus_user u
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	u.person_id = ps.person_id and u.user_id = rm.checked_off_by
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	) as user_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	p.policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	''Review Message'' as work_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	''Review Message'' as work_type_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	''Satisfied'' as status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	rm.check_off_date as status_date
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	policy p,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	review_message rm
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	rm.policy_id = p.policy_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	rm.checkoff_flag is not null and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	rm.checkoff_flag &lt;&gt; 0 and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>	rm.checked_off_by is not null) AS wrap '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>EXEC(@sql1 + @where_clause)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME><Text /></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>uspGetNbWorkTypeProductivity</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>1614970481</Check_Sum><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>
			CREATE PROCEDURE uspGetPolicyRequirements
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>    @password nvarchar(255),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>    @where_clause nvarchar(500)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>DECLARE @sql1 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>SET @sql1= N'SELECT wrap.* FROM (SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	p.company_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	p.service_associate_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	p.distributor_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	p.source_info,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	p.policy_number as case_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	tlr.requirement_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	tc.code_value as requirement_status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	rv.ordered_date as ordered_open_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	rv.schedule_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	rv.complete_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	rv.closed_date as final_status_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	p.team_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	policy p,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	policy_person pp,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	requirement_view rv,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	tl_requirement tlr,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	tl_code tc
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	pp.policy_id = p.policy_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	rv.policy_person_id = pp.policy_person_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	tlr.requirement_code = rv.requirement_code and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	(rv.closed_disposition is null or
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	rv.closed_disposition&lt;&gt; ''D'') and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	rv.ordered_date is not null and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	tc.language_code = ''en-us'' and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	tc.code_type = ''RequirementStatus'' and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	((rv.closed_disposition is null and tc.code_id = ''O'') or
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	tc.code_id = rv.closed_disposition)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>UNION
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	p.company_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	p.service_associate_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	p.distributor_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	p.source_info,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	p.policy_number as case_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	tlr.requirement_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	tc.code_value as requirement_status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	rv.added_date as ordered_open_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	rv.schedule_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	rv.complete_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	rv.closed_date as final_status_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	p.team_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	policy p,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	policy_person pp,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	requirement_view rv,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	tl_requirement tlr,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	tl_code tc
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	pp.policy_id = p.policy_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	rv.policy_person_id = pp.policy_person_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	tlr.requirement_code = rv.requirement_code and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	(rv.closed_disposition is null or
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	rv.closed_disposition&lt;&gt; ''D'') and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	rv.ordered_date is null and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	tc.language_code = ''en-us'' and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	tc.code_type = ''RequirementStatus'' and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	((rv.closed_disposition is null and tc.code_id = ''O'') or
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>	tc.code_id = rv.closed_disposition)) AS wrap '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>EXEC(@sql1 + @where_clause)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME><Text /></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>uspGetPolicyRequirements</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-221940853</Check_Sum><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>
			CREATE PROCEDURE uspGetRequirementAging
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>    @password nvarchar(255),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>    @where_clause nvarchar(500)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>DECLARE @sql1 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>SET @sql1= N'SELECT wrap.* FROM (SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	p.service_associate_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	p.team_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	(select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	from
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	person ps, aus_user u
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	u.person_id = ps.person_id and u.user_id = p.underwriter_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	) as underwriter_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	(select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	from
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	person ps, aus_user u
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	u.person_id = ps.person_id and u.user_id = p.service_associate_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	) as case_manager_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	(select team_name from team where team_id = p.team_id) as team_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	p.policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	ir.requirement_code,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	(select requirement_name from tl_requirement where requirement_code = ir.requirement_code) as requirement_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	ir.added_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	(select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	tc.code_value
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	from
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	tl_code tc
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	tc.code_type = ''RequirementStatus'' and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	tc.code_id = ir.closed_disposition or
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	(ir.closed_disposition is null and tc.code_id = ''O'')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	) as requirement_status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	(cast(CURRENT_TIMESTAMP - ir.added_date as int)) as days_aging
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	policy p,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	insured i,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	insured_requirement ir
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	i.policy_id = p.policy_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	i.policy_person_id = ir.policy_person_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>	(ir.closed_disposition is null or ir.closed_disposition not in (''S'', ''C'', ''W''))) AS wrap '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>EXEC(@sql1 + @where_clause)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetRequirementAging</SPROC_NAME><Text /></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>uspGetRequirementAging</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-269579679</Check_Sum><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>
			CREATE PROCEDURE uspGetUnmatchedLabs
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>    @password nvarchar(255),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>    @where_clause nvarchar(500)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>DECLARE @sql1 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>SET @sql1= N'SELECT wrap.* FROM (SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>	dbo.clrLSDecrypt(first_name, ''' + @password + ''') as first_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>	dbo.clrLSDecrypt(last_name, ''' + @password + ''') as last_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>	dbo.clrLSDecrypt(birth_date, ''' + @password + ''') as birth_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>	referrence_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>	ticket_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>	drawn_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>	lab_receive_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>	-1 as team_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>	-1 as underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>	-1 as service_associate_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>	lab_header
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>	requirement_information_id not in (
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>	select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>	requirement_information_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>	from
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>	insured_requirement
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>	where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>	requirement_information_id is not null)) AS wrap '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>EXEC(@sql1 + @where_clause)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME><Text /></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>uspGetUnmatchedLabs</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-549992389</Check_Sum><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>
			CREATE PROCEDURE uspGetUwCaseProductivity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>    @password nvarchar(255),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>    @where_clause nvarchar(500)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>DECLARE @sql1 nvarchar(4000) 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>SET @sql1= N'SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>	p.underwriter_id as user_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>	p.team_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>	p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>	p.service_associate_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>	p.receive_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>	(select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>	from
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>	person ps, aus_user u
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>	where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>	u.person_id = ps.person_id and u.user_id = underwriter_id
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>	) as user_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>	p.policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>	(select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = ''NB'') as new_business_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>	(select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = ''FA'') as final_action_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>	(select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = ''CLOSED'' and log_date &gt;= (select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code =</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text> ''FA'')) as closed_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>	cast((select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = ''FA'') - (select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = ''NB'') as </Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>int) as days_nb_to_fa,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>	cast((select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = ''CLOSED'' and log_date &gt;= (select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_c</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>ode = ''FA'')) - (select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = ''FA'') as int) as days_fa_to_closed
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>	policy p '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>EXEC(@sql1 + @where_clause)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME><Text /></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>uspGetUwCaseProductivity</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>572584702</Check_Sum><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>
			CREATE PROCEDURE uspGetUwReferalRvwProductivity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>    @password nvarchar(255),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>    @where_clause nvarchar(500)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>DECLARE @sql1 nvarchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>SET @sql1= N'SELECT wrap.* FROM (SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	ir.closed_by as user_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	p.team_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	p.service_associate_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	(select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	from
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	person ps, aus_user u
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	u.person_id = ps.person_id and u.user_id = ir.closed_by
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	) as user_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	p.policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	(select requirement_name from tl_requirement where requirement_code = ir.requirement_code) as work_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	(select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	tc.code_value
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	from
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	tl_code tc
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	tc.code_type = ''RequirementStatus'' and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	tc.code_id = ir.closed_disposition or
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	(ir.closed_disposition is null and tc.code_id = ''O'')
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	) as status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	ir.added_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	ir.closed_date
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	policy p,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	insured i,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	insured_requirement ir
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	i.policy_id = p.policy_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	i.policy_person_id = ir.policy_person_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	ir.requirement_code = ''UWINITRVW'' and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	ir.closed_disposition = ''S''
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>UNION
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	n.author as user_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	p.team_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	p.service_associate_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	(select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	from
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	person ps, aus_user u
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	u.person_id = ps.person_id and u.user_id = n.author
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	) as user_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	p.policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	''Referral'' as work_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	''Added'' as status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	n.added_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	n.reviewed_date as closed_date
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	policy p,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	insured i,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	notes n
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	i.policy_id = p.policy_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	i.policy_person_id = n.policy_person_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	n.note_type = ''Refer'' and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	n.reviewed_by is null
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>UNION
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	n.reviewed_by as user_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	p.team_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	p.service_associate_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	(select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	from
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	person ps, aus_user u
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	u.person_id = ps.person_id and u.user_id = n.reviewed_by
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	) as user_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	p.policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	''Referral'' as work_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	''Checked-off'' as status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	n.added_date,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	n.reviewed_date as closed_date
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	policy p,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	insured i,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	notes n
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	i.policy_id = p.policy_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	i.policy_person_id = n.policy_person_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	n.note_type = ''Refer'' and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>	n.reviewed_by is not null) AS wrap '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>EXEC(@sql1 + @where_clause)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME><Text /></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>uspGetUwReferalRvwProductivity</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>1</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>1</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>1</IsAnsiNullsOn><IsQuotedIdentOn>1</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-699045425</Check_Sum><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>
			CREATE PROCEDURE uspGetUwReviewMsgProductivity
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>    @password nvarchar(255),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>    @where_clause nvarchar(500)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>AS
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>DECLARE @sql1 nvarchar(4000) 
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>SET @sql1= N'SELECT wrap.* FROM (SELECT
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	rm.checked_off_by as user_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	p.team_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	p.underwriter_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	p.service_associate_id,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	(select
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	from
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	person ps, aus_user u
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	where
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	u.person_id = ps.person_id and u.user_id = rm.checked_off_by
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	) as user_name,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	p.policy_number,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	''Checkable Review Message'' as work_type,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	rm.message,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	''Closed'' as status,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	rm.check_off_date
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>FROM
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	policy p,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	review_message rm
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>WHERE
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	rm.policy_id = p.policy_id and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	rm.checkoff_flag is not null and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	rm.checkoff_flag &lt;&gt; 0 and
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>	rm.checked_off_by is not null) AS wrap '
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>BEGIN
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>EXEC(@sql1 + @where_clause)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text>END
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME><Text /></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>uspGetUwReviewMsgProductivity</SPROC_NAME></SPROC_DEPENDS></SPROC><SPROC Action="Alter"><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><USER_NAME>dbo</USER_NAME><category>0</category><ExecIsAnsiNullsOn>0</ExecIsAnsiNullsOn><ExecIsQuotedIdentOn>0</ExecIsQuotedIdentOn><ExecIsStartup>0</ExecIsStartup><IsAnsiNullsOn>0</IsAnsiNullsOn><IsQuotedIdentOn>0</IsQuotedIdentOn><IsExecuted>1</IsExecuted><IsExtendedProc>0</IsExtendedProc><IsReplProc>0</IsReplProc><IsSystemProc>0</IsSystemProc><Check_Sum>-656422230</Check_Sum><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>CREATE PROCEDURE usp_AUS_ProcessReviewMessageNote
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>(
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>@authorID as Integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>@insuredID as Integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>@noteType as Char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>@topic as Char(254),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>@visibility as Char(10),
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>@diaryDate as DateTime,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>@note as text,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>@messageID as Integer,
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>@messageType as Integer
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>As
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>/* Debug
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>-- Input parameters
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Declare	@authorID as Integer
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Declare	@policyID as Integer
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Declare	@noteType as Char(10)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Declare	@topic as Char(254)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Declare	@visibility as Char(10)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Declare	@addedDate as DateTime
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Declare	@updateDate as DateTime
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Declare	@diaryDate as DateTime
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Declare	@diaryStatus as char(10)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Declare	@note as varchar(4000)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Declare	@messageID as Integer
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>-- fill parameters
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Set @authorID = 1000
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Set @policyID = 380750
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Set @noteType = 'Review'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Set @topic = 'This is a sample topic entered on ' + Convert(varchar(25), GETDATE())
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Set @visibility = 'Internal'
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Set @addedDate = GETDATE()
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Set @updateDate = null
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Set @diaryDate = null
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Set @diaryStatus = null
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Set @note = ' This is the note text entered on ' + Convert(varchar(25), GETDATE())
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Set @rmID = 389068 */
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Set NOCOUNT ON
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Declare @newNoteID as Integer
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Declare @status as Integer
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Begin Tran
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>exec @newNoteID =  usp_AUS_InsertNote @authorID, @insuredID, @noteType, @topic, @visibility, @diaryDate, @note
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>If (@newNoteID &gt; 0)
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Begin
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>exec @status =  usp_AUS_UpdateReviewMessageNote @newNoteID, @messageID, @messageType
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>If @@Error = 0
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Begin
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Commit Tran
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Return @newNoteID
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>End
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Else
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Begin
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Rollback Tran
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Return 0
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>End
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>End
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Else
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Begin
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Rollback Tran
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>Return 0
</Text></SPROC_TEXT><SPROC_TEXT><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><Text>End
</Text></SPROC_TEXT><SPROC_DEPENDS><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><depname>usp_AUS_InsertNote</depname><owner>dbo</owner><type>stored procedure</type><updated>no</updated><selected>no</selected><column /></SPROC_DEPENDS><SPROC_DEPENDS><SPROC_NAME>usp_AUS_ProcessReviewMessageNote</SPROC_NAME><depname>usp_AUS_UpdateReviewMessageNote</depname><owner>dbo</owner><type>stored procedure</type><updated>no</updated><selected>no</selected><column /></SPROC_DEPENDS></SPROC></DataBase_Schema>