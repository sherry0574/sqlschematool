
-- DB Name: UHCTest
-- Output Date: 7/24/2007
-- Output Time: 11:37 AM
-- AutoGenerated SQL: using the SQL Schema Tool.

/*
When SET XACT_ABORT is ON, if a Transact-SQL statement raises a run-time 
error, the entire transaction is terminated and rolled back. When OFF, only the 
Transact-SQL statement that raised the error is rolled back and the transaction 
continues processing. Compile errors, such as syntax errors, are not affected by 
SET XACT_ABORT.
*/

SET QUOTED_IDENTIFIER ON
SET XACT_ABORT ON
BEGIN TRANSACTION T1 WITH MARK 'Apply Create SQL'
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[admin_system_message]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[admin_system_message]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[admin_system_message]
	( 	
		[admin_system_message_id] [int]  NOT NULL,
		[admin_system] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[create_date] [datetime]  NULL,
		[policy_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[policy_id] [int]  NULL,
		[severity] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[message_text] [varchar]  (1000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[admin_system_message]
	ALTER COLUMN [admin_system_message_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'admin_system_message'), N'admin_system_message_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[admin_system_message]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[admin_system_message] ADD 
	CONSTRAINT [PK_admin_system_message] PRIMARY KEY CLUSTERED 
	(
		[admin_system_message_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): admin_system_message_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_POLICY_P_REFERENCE_AGENCY]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_person_agent]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy_person_agent]  
	DROP CONSTRAINT FK_POLICY_P_REFERENCE_AGENCY
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TE_CASE__REFERENCE_AGENCY]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[te_case_assignment]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[te_case_assignment]  
	DROP CONSTRAINT FK_TE_CASE__REFERENCE_AGENCY
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[agency]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[agency]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[agency]
	( 	
		[person_id] [int]  NOT NULL,
		[agency_number] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[routing_number] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[update_date] [datetime]  NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[agency]
	ALTER COLUMN [person_id] [int] NOT NULL
	ALTER TABLE [dbo].[agency]
	ALTER COLUMN [update_date] [datetime] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'agency'), N'person_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[agency]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[agency] ADD 
	CONSTRAINT [PK_AGENCY] PRIMARY KEY CLUSTERED 
	(
		[person_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): person_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[agency]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_agency_num] ON [dbo].[agency]([agency_number]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[agent]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[agent]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[agent]
	( 	
		[person_id] [int]  NOT NULL,
		[agent_number] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[routing_number] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[company_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[descriptor] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[agent]
	ALTER COLUMN [person_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'agent'), N'person_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[agent]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[agent] ADD 
	CONSTRAINT [PK_AGENT] PRIMARY KEY CLUSTERED 
	(
		[person_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): person_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[agent]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_agent_number] ON [dbo].[agent]([agent_number]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[association]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[association]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[association]
	( 	
		[association_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[name] [char]  (120)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[expiration_date] [datetime]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[association]
	ALTER COLUMN [association_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'association'), N'association_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[association]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[association] ADD 
	CONSTRAINT [PK_association] PRIMARY KEY CLUSTERED 
	(
		[association_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): association_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[association_plan]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[association_plan]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[association_plan]
	( 	
		[association_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[plan_code_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[tpa_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[g_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[mortality_max] [int]  NULL,
		[auto_approve_requires_member] [int]  NULL,
		[underwrite_child] [int]  NULL,
		[spouse_can_exceed_member] [int]  NULL,
		[allow_jet_issue] [int]  NULL,
		[billing_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[expiration_date] [datetime]  NULL,
		[spouse_coverage_available] [int]  NULL,
		[underwrite_spouse] [int]  NULL,
		[child_coverage_available] [int]  NULL,
		[enrollment_effective_date] [datetime]  NULL,
		[enrollment_num_days] [int]  NULL,
		[employee_eligibility] [int]  NULL,
		[employee_percent_contributory] [numeric]  NULL,
		[add_exclusions] [int]  NULL,
		[replacement_ratio] [numeric]  NULL,
		[plan_max_multiplier] [numeric]  NULL,
		[plan_max_issue] [int]  NULL,
		[plan_min_issue] [int]  NULL,
		[plan_max_participation_amount] [int]  NULL,
		[max_issue_age] [int]  NULL,
		[rounding_flag] [int]  NULL,
		[rounding_amount] [int]  NULL,
		[gsi_plan_max] [int]  NULL,
		[gsi_multiplier] [numeric]  NULL,
		[min_num_hours] [int]  NULL,
		[note_collection_id] [int]  NULL,
		[company_group_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[sub_group_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[class_group_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[association_plan]
	ALTER COLUMN [association_code] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[association_plan]
	ALTER COLUMN [plan_code_id] [char]  (10) NOT NULL
GO


IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[association_plan]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [IX_association_plan] ON [dbo].[association_plan]([association_code], [plan_code_id], [g_number]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[aus_event]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[aus_event]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[aus_event]
	( 	
		[aus_event_id] [int]  NOT NULL,
		[entry_datetime] [datetime]  NULL,
		[aus_cmd] [int]  NULL,
		[priority] [int]  NULL,
		[added_by] [int]  NULL,
		[schedule_datetime] [datetime]  NULL,
		[param_data] [varchar]  (1000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[status] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[aus_event]
	ALTER COLUMN [aus_event_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'aus_event'), N'aus_event_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_event]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[aus_event] ADD 
	CONSTRAINT [PK_aus_event] PRIMARY KEY CLUSTERED 
	(
		[aus_event_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): aus_event_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_event]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_aus_event_cmd] ON [dbo].[aus_event]([aus_cmd]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[aus_identity]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[aus_identity]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[aus_identity]
	( 	
		[next_id] [int]  NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[aus_identity]
	ALTER COLUMN [next_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'aus_identity'), N'next_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_identity]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[aus_identity] ADD 
	CONSTRAINT [PK_AUS_IDENTITY] PRIMARY KEY CLUSTERED 
	(
		[next_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): next_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[aus_role_privilege]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[aus_role_privilege]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[aus_role_privilege]
	( 	
		[role_id] [int]  NOT NULL,
		[privilege_id] [int]  NOT NULL,
		[restriction_level] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[aus_role_privilege]
	ALTER COLUMN [role_id] [int] NOT NULL
	ALTER TABLE [dbo].[aus_role_privilege]
	ALTER COLUMN [privilege_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'aus_role_privilege'), N'role_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'aus_role_privilege'), N'privilege_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_role_privilege]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[aus_role_privilege] ADD 
	CONSTRAINT [PK_AUS_ROLE_PRIVILEGE] PRIMARY KEY CLUSTERED 
	(
		[role_id], [privilege_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): role_id, privilege_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_AUS_ROLE_REF_8704_AUS_SECU]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_role_privilege]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[aus_role_privilege]  
	DROP CONSTRAINT FK_AUS_ROLE_REF_8704_AUS_SECU
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[aus_security_privilege]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[aus_security_privilege]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[aus_security_privilege]
	( 	
		[privilege_id] [int]  NOT NULL,
		[name] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[is_active] [int]  NULL,
		[subsystem_name] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[aus_security_privilege]
	ALTER COLUMN [privilege_id] [int] NOT NULL
	ALTER TABLE [dbo].[aus_security_privilege]
	ALTER COLUMN [name] [char]  (20) NOT NULL
	ALTER TABLE [dbo].[aus_security_privilege]
	ALTER COLUMN [subsystem_name] [char]  (30) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'aus_security_privilege'), N'subsystem_name', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'aus_security_privilege'), N'name', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_security_privilege]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[aus_security_privilege] ADD 
	CONSTRAINT [IX_aus_security_privilege] UNIQUE NONCLUSTERED 
	(
		[subsystem_name], [name]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): subsystem_name, name do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'aus_security_privilege'), N'privilege_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_security_privilege]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[aus_security_privilege] ADD 
	CONSTRAINT [PK_AUS_SECURITY_PRIVILEGE] PRIMARY KEY CLUSTERED 
	(
		[privilege_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): privilege_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_AUS_ROLE_REF_8700_AUS_SECU]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_role_privilege]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[aus_role_privilege]  
	DROP CONSTRAINT FK_AUS_ROLE_REF_8700_AUS_SECU
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_aus_user_ref_role]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_user]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[aus_user]  
	DROP CONSTRAINT fk_aus_user_ref_role
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[aus_security_roles]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[aus_security_roles]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[aus_security_roles]
	( 	
		[role_id] [int]  NOT NULL,
		[name] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[description] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[is_active] [int]  NULL,
		[deleted] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[aus_security_roles]
	ALTER COLUMN [role_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'aus_security_roles'), N'role_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_security_roles]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[aus_security_roles] ADD 
	CONSTRAINT [PK_AUS_SECURITY_ROLES] PRIMARY KEY CLUSTERED 
	(
		[role_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): role_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_sec_priv_sec_subsys]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_security_privilege]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[aus_security_privilege]  
	DROP CONSTRAINT FK_sec_priv_sec_subsys
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[aus_security_subsystem]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[aus_security_subsystem]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[aus_security_subsystem]
	( 	
		[subsystem_name] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[subsystem_description] [char]  (80)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[aus_security_subsystem]
	ALTER COLUMN [subsystem_name] [char]  (30) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'aus_security_subsystem'), N'subsystem_name', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_security_subsystem]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[aus_security_subsystem] ADD 
	CONSTRAINT [PK_aus_security_subsystem] PRIMARY KEY CLUSTERED 
	(
		[subsystem_name]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): subsystem_name do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_form_ref_491_aus_user]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_application_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[insured_application_info]  
	DROP CONSTRAINT fk_form_ref_491_aus_user
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_form_ref_503_aus_user]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_application_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[insured_application_info]  
	DROP CONSTRAINT fk_form_ref_503_aus_user
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_insured_req_aus_user]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[insured_requirement]  
	DROP CONSTRAINT FK_insured_req_aus_user
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_insured_req_aus_user1]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[insured_requirement]  
	DROP CONSTRAINT FK_insured_req_aus_user1
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_insured_req_aus_user2]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[insured_requirement]  
	DROP CONSTRAINT FK_insured_req_aus_user2
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_notes_ref_39_aus_user]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[notes]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[notes]  
	DROP CONSTRAINT fk_notes_ref_39_aus_user
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_paramed_ref_12407_aus_user]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[paramed]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[paramed]  
	DROP CONSTRAINT fk_paramed_ref_12407_aus_user
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_paramed_ref_12411_aus_user]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[paramed]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[paramed]  
	DROP CONSTRAINT fk_paramed_ref_12411_aus_user
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_policy_ref_1006_aus_user]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy]  
	DROP CONSTRAINT fk_policy_ref_1006_aus_user
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_policy_ref_1010_aus_user]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy]  
	DROP CONSTRAINT fk_policy_ref_1010_aus_user
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_policy_ref_13937_aus_user]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy]  
	DROP CONSTRAINT fk_policy_ref_13937_aus_user
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_policy_ref_992_aus_user]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy]  
	DROP CONSTRAINT fk_policy_ref_992_aus_user
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_POLICY_REFERENCE_AUS_USER]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy]  
	DROP CONSTRAINT FK_POLICY_REFERENCE_AUS_USER
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_policy_service_associate]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy]  
	DROP CONSTRAINT FK_policy_service_associate
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_POLICY_A_REFERENCE_AUS_USER]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_assignment]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy_assignment]  
	DROP CONSTRAINT FK_POLICY_A_REFERENCE_AUS_USER
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_POLICY_L_REF_8715_AUS_USER]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_log]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy_log]  
	DROP CONSTRAINT FK_POLICY_L_REF_8715_AUS_USER
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_policy_s_ref_5408_aus_user]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_status_history]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy_status_history]  
	DROP CONSTRAINT fk_policy_s_ref_5408_aus_user
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_review_m_ref_507_aus_user]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[review_message]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[review_message]  
	DROP CONSTRAINT fk_review_m_ref_507_aus_user
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_requirem_ref_13269_aus_user]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[requirement_info_request]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[requirement_info_request]  
	DROP CONSTRAINT fk_requirem_ref_13269_aus_user
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TE_CASE__REFERENCE_AUS_USER]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[te_case_assignment]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[te_case_assignment]  
	DROP CONSTRAINT FK_TE_CASE__REFERENCE_AUS_USER
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_REQUIREMENT_ADDED_BY]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_requirement]  
	DROP CONSTRAINT FK_TL_REQUIREMENT_ADDED_BY
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_REQUIREMENT_UPDATED_BY]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_requirement]  
	DROP CONSTRAINT FK_TL_REQUIREMENT_UPDATED_BY
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_tr_user_team_aus_user]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tr_user_team]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tr_user_team]  
	DROP CONSTRAINT FK_tr_user_team_aus_user
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_aus_user_limits_user]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_user_limits]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[aus_user_limits]  
	DROP CONSTRAINT FK_aus_user_limits_user
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_requirem_ref_1955_aus_user]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[requirement_information]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[requirement_information]  
	DROP CONSTRAINT fk_requirem_ref_1955_aus_user
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_AUS_USER_REFERENCE_AUS_USER]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_user_recent_files]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[aus_user_recent_files]  
	DROP CONSTRAINT FK_AUS_USER_REFERENCE_AUS_USER
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[aus_user]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[aus_user]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[aus_user]
	( 	
		[user_id] [int]  NOT NULL,
		[person_id] [int]  NULL,
		[login_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[password] [char]  (16)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[is_active] [int]  NULL,
		[level_of_authority] [numeric]  NULL,
		[email_address] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[is_underwriter] [int]  NULL,
		[restrict_to_teams] [int]  NULL,
		[role_id] [int]  NULL,
		[is_service_associate] [int]  NULL,
		[job_title] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[account_locked] [int]  NULL,
		[account_locked_date] [datetime]  NULL,
		[bad_login_attempt_count] [int]  NULL,
		[last_bad_login_attempt_date] [datetime]  NULL,
		[must_change_password] [int]  NULL,
		[last_password_change_date] [datetime]  NULL,
		[is_agent] [int]  NULL,
		[agent_number] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[is_agency] [int]  NULL,
		[agency_number] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[deleted] [int]  NULL,
		[use_single_sign_on] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[aus_user]
	ALTER COLUMN [user_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'aus_user'), N'user_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_user]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[aus_user] ADD 
	CONSTRAINT [PK_AUS_USER] PRIMARY KEY CLUSTERED 
	(
		[user_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): user_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_user]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE UNIQUE INDEX [ix_user_login] ON [dbo].[aus_user]([login_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_user]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_user_person] ON [dbo].[aus_user]([person_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[aus_user_limits]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[aus_user_limits]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[aus_user_limits]
	( 	
		[user_id] [int]  NOT NULL,
		[line_of_business_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[authorization_limit] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[aus_user_limits]
	ALTER COLUMN [user_id] [int] NOT NULL
	ALTER TABLE [dbo].[aus_user_limits]
	ALTER COLUMN [line_of_business_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'aus_user_limits'), N'user_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'aus_user_limits'), N'line_of_business_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_user_limits]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[aus_user_limits] ADD 
	CONSTRAINT [PK_aus_user_limits] PRIMARY KEY CLUSTERED 
	(
		[user_id], [line_of_business_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): user_id, line_of_business_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[aus_user_recent_files]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[aus_user_recent_files]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[aus_user_recent_files]
	( 	
		[recent_file_id] [int]  NOT NULL,
		[user_id] [int]  NOT NULL,
		[policy_id] [int]  NULL,
		[last_name] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[date_time] [datetime]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[aus_user_recent_files]
	ALTER COLUMN [recent_file_id] [int] NOT NULL
	ALTER TABLE [dbo].[aus_user_recent_files]
	ALTER COLUMN [user_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'aus_user_recent_files'), N'recent_file_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_user_recent_files]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[aus_user_recent_files] ADD 
	CONSTRAINT [PK_AUS_USER_RECENT_FILES] PRIMARY KEY CLUSTERED 
	(
		[recent_file_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): recent_file_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_user_recent_files]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_recent_files_user_id] ON [dbo].[aus_user_recent_files]([user_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[benefit_period]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[benefit_period]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[benefit_period]
	( 	
		[language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[plan_code_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[period_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[g_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[period] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[benefit_period]
	ALTER COLUMN [language_code] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[benefit_period]
	ALTER COLUMN [plan_code_id] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[benefit_period]
	ALTER COLUMN [period_id] [char]  (10) NOT NULL
GO


IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[benefit_period]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE UNIQUE INDEX [IX_benefit_period] ON [dbo].[benefit_period]([language_code], [plan_code_id], [period_id], [g_number]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[billing_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[billing_code]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[billing_code]
	( 	
		[tpa_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[line_of_business_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[us_billing_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[non_us_billing_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[g_number] [char]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[policy_type] [char]  (2)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[billing_code]
	ALTER COLUMN [tpa_code] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[billing_code]
	ALTER COLUMN [line_of_business_code] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[billing_code]
	ALTER COLUMN [g_number] [char]  (15) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'billing_code'), N'tpa_code', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'billing_code'), N'line_of_business_code', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'billing_code'), N'g_number', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[billing_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[billing_code] ADD 
	CONSTRAINT [IX_billing_code] UNIQUE NONCLUSTERED 
	(
		[tpa_code], [line_of_business_code], [g_number]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): tpa_code, line_of_business_code, g_number do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[company]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[company]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[company]
	( 	
		[company_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[person_id] [int]  NOT NULL,
		[allow_aus_approval_flag] [int]  NULL,
		[correspondence_directory] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[full_time_employee_count] [int]  NULL,
		[percent_eligible_employees] [numeric]  NULL,
		[percent_eligible_dependants] [numeric]  NULL,
		[current_cobra_indicator] [int]  NULL,
		[expiration_date] [datetime]  NULL,
		[region_code] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[tpa_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[carrier_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[subgroup_id] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[company]
	ALTER COLUMN [company_code] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[company]
	ALTER COLUMN [person_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'company'), N'person_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[company]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[company] ADD 
	CONSTRAINT [PK_COMPANY] PRIMARY KEY CLUSTERED 
	(
		[person_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): person_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[company]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_company_code] ON [dbo].[company]([company_code]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_COMPANY__REF_17407_COMPANY_]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[company_mib_entry]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[company_mib_entry]  
	DROP CONSTRAINT FK_COMPANY__REF_17407_COMPANY_
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[company_mib]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[company_mib]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[company_mib]
	( 	
		[company_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[mib_company_code] [char]  (3)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[destination_code] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[company_mib]
	ALTER COLUMN [company_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'company_mib'), N'company_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[company_mib]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[company_mib] ADD 
	CONSTRAINT [PK_COMPANY_MIB] PRIMARY KEY CLUSTERED 
	(
		[company_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): company_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[company_mib_entry]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[company_mib_entry]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[company_mib_entry]
	( 	
		[company_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[entry_type] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[entry_field] [char]  (3)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[in_directory] [char]  (254)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[out_directory] [char]  (254)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[company_mib_entry]
	ALTER COLUMN [company_code] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[company_mib_entry]
	ALTER COLUMN [entry_type] [char]  (5) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'company_mib_entry'), N'company_code', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'company_mib_entry'), N'entry_type', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[company_mib_entry]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[company_mib_entry] ADD 
	CONSTRAINT [PK_COMPANY_MIB_ENTRY] PRIMARY KEY CLUSTERED 
	(
		[company_code], [entry_type]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): company_code, entry_type do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_coverage_benefits_party]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_benefits_party]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[coverage_benefits_party]  
	DROP CONSTRAINT FK_coverage_benefits_party
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[coverage_benefits]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[coverage_benefits]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[coverage_benefits]
	( 	
		[benefit_id] [int]  NOT NULL,
		[sequence_no] [int]  NULL,
		[description] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[amount] [numeric]  NULL,
		[coverage_status] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[reason_text] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[policy_coverage_id] [int]  NOT NULL,
		[approved_different_amount_flag] [int]  NULL,
		[approved_amount] [numeric]  NULL,
		[note] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[temp_table_rating] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[temp_table_reason] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[perm_table_rating] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[perm_table_reason] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[flat_extra_reason] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[perm_flat_extra_amount] [numeric]  NULL,
		[temp_flat_extra_amount] [numeric]  NULL,
		[temp_flat_extra_period] [int]  NULL,
		[issued_times_standard] [numeric]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[coverage_benefits]
	ALTER COLUMN [benefit_id] [int] NOT NULL
	ALTER TABLE [dbo].[coverage_benefits]
	ALTER COLUMN [coverage_status] [char]  (20) NOT NULL
	ALTER TABLE [dbo].[coverage_benefits]
	ALTER COLUMN [policy_coverage_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'coverage_benefits'), N'benefit_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'coverage_benefits'), N'policy_coverage_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_benefits]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_benefits] ADD 
	CONSTRAINT [PK_COVERAGE_BENEFITS] PRIMARY KEY CLUSTERED 
	(
		[benefit_id], [policy_coverage_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): benefit_id, policy_coverage_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_benefits]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_cov_benfit_pers] ON [dbo].[coverage_benefits]([policy_coverage_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[coverage_benefits_party]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[coverage_benefits_party]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[coverage_benefits_party]
	( 	
		[benefit_id] [int]  NOT NULL,
		[policy_coverage_id] [int]  NOT NULL,
		[person_id] [int]  NOT NULL,
		[height_inches] [int]  NULL,
		[weight_pounds] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[coverage_benefits_party]
	ALTER COLUMN [benefit_id] [int] NOT NULL
	ALTER TABLE [dbo].[coverage_benefits_party]
	ALTER COLUMN [policy_coverage_id] [int] NOT NULL
	ALTER TABLE [dbo].[coverage_benefits_party]
	ALTER COLUMN [person_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'coverage_benefits_party'), N'benefit_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'coverage_benefits_party'), N'policy_coverage_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'coverage_benefits_party'), N'person_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_benefits_party]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_benefits_party] ADD 
	CONSTRAINT [PK_coverage_benefits_party] PRIMARY KEY CLUSTERED 
	(
		[benefit_id], [policy_coverage_id], [person_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): benefit_id, policy_coverage_id, person_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_COVERAGE_REFERENCE_COVERAGE]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_beneficiary]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[coverage_person_beneficiary]  
	DROP CONSTRAINT FK_COVERAGE_REFERENCE_COVERAGE
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_cov_pers_fund]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_fund_alloc]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[coverage_person_fund_alloc]  
	DROP CONSTRAINT FK_cov_pers_fund
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_cov_pers_amendment_cov]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_amendment]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[coverage_person_amendment]  
	DROP CONSTRAINT FK_cov_pers_amendment_cov
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_cov_pers_reinsurer_cov]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_reinsurer]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[coverage_person_reinsurer]  
	DROP CONSTRAINT FK_cov_pers_reinsurer_cov
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_cov_pers_impairment_cov]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_impairment]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[coverage_person_impairment]  
	DROP CONSTRAINT FK_cov_pers_impairment_cov
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_COVERAGE_REF_COVERAGE2]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_insured]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[coverage_person_insured]  
	DROP CONSTRAINT FK_COVERAGE_REF_COVERAGE2
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_cov_person_extra_info_cp]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_extra_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[coverage_person_extra_info]  
	DROP CONSTRAINT FK_cov_person_extra_info_cp
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[coverage_person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[coverage_person]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[coverage_person]
	( 	
		[coverage_person_id] [int]  NOT NULL,
		[policy_coverage_id] [int]  NULL,
		[person_id] [int]  NULL,
		[role_id] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[relationship_to_insured_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[coverage_person]
	ALTER COLUMN [coverage_person_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'coverage_person'), N'coverage_person_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person] ADD 
	CONSTRAINT [PK_COVERAGE_PERSON] PRIMARY KEY CLUSTERED 
	(
		[coverage_person_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): coverage_person_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_cov_pers_pid] ON [dbo].[coverage_person]([person_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_cov_pers_pol_cov_id] ON [dbo].[coverage_person]([policy_coverage_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[coverage_person_amendment]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[coverage_person_amendment]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[coverage_person_amendment]
	( 	
		[coverage_person_amendment_id] [int]  NOT NULL,
		[coverage_person_id] [int]  NOT NULL,
		[amendment_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[amendment_text] [varchar]  (1000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[amendment_type] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[coverage_person_amendment]
	ALTER COLUMN [coverage_person_amendment_id] [int] NOT NULL
	ALTER TABLE [dbo].[coverage_person_amendment]
	ALTER COLUMN [coverage_person_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'coverage_person_amendment'), N'coverage_person_amendment_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_amendment]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person_amendment] ADD 
	CONSTRAINT [PK_coverage_person_amendment] PRIMARY KEY CLUSTERED 
	(
		[coverage_person_amendment_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): coverage_person_amendment_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_amendment]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_amendment_cov_pers_id] ON [dbo].[coverage_person_amendment]([coverage_person_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[coverage_person_beneficiary]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[coverage_person_beneficiary]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[coverage_person_beneficiary]
	( 	
		[coverage_person_id] [int]  NOT NULL,
		[beneficiary_type] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[percentage] [decimal]  NULL,
		[amount] [numeric]  NULL,
		[irrevokable_indicator] [int]  NULL,
		[age] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[coverage_person_beneficiary]
	ALTER COLUMN [coverage_person_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'coverage_person_beneficiary'), N'coverage_person_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_beneficiary]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person_beneficiary] ADD 
	CONSTRAINT [PK_COVERAGE_PERSON_BENEFICIARY] PRIMARY KEY CLUSTERED 
	(
		[coverage_person_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): coverage_person_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[coverage_person_extra_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[coverage_person_extra_info]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[coverage_person_extra_info]
	( 	
		[coverage_person_extra_info_id] [int]  NOT NULL,
		[coverage_person_id] [int]  NOT NULL,
		[coverage_extra_info_type] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[applied_ceding_company] [numeric]  NULL,
		[applied_other_company] [numeric]  NULL,
		[amounts_to_be_placed] [numeric]  NULL,
		[total_in_force_all] [numeric]  NULL,
		[total_in_force_tare] [numeric]  NULL,
		[replacement] [numeric]  NULL,
		[cedents_retention] [numeric]  NULL,
		[reinsurance_needed] [numeric]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[coverage_person_extra_info]
	ALTER COLUMN [coverage_person_extra_info_id] [int] NOT NULL
	ALTER TABLE [dbo].[coverage_person_extra_info]
	ALTER COLUMN [coverage_person_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'coverage_person_extra_info'), N'coverage_person_extra_info_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'coverage_person_extra_info'), N'coverage_person_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_extra_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person_extra_info] ADD 
	CONSTRAINT [PK_coverage_person_extra_info] PRIMARY KEY CLUSTERED 
	(
		[coverage_person_extra_info_id], [coverage_person_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): coverage_person_extra_info_id, coverage_person_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_extra_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_cov_xtra_person] ON [dbo].[coverage_person_extra_info]([coverage_person_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[coverage_person_fund_alloc]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[coverage_person_fund_alloc]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[coverage_person_fund_alloc]
	( 	
		[fund_allocation_id] [int]  NOT NULL,
		[coverage_person_id] [int]  NOT NULL,
		[fund_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[percent_allocation] [numeric]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[coverage_person_fund_alloc]
	ALTER COLUMN [fund_allocation_id] [int] NOT NULL
	ALTER TABLE [dbo].[coverage_person_fund_alloc]
	ALTER COLUMN [coverage_person_id] [int] NOT NULL
	ALTER TABLE [dbo].[coverage_person_fund_alloc]
	ALTER COLUMN [fund_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'coverage_person_fund_alloc'), N'fund_allocation_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_fund_alloc]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person_fund_alloc] ADD 
	CONSTRAINT [PK_cov_pers_fund] PRIMARY KEY CLUSTERED 
	(
		[fund_allocation_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): fund_allocation_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_fund_alloc]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_fund_cov_person] ON [dbo].[coverage_person_fund_alloc]([coverage_person_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[coverage_person_impairment]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[coverage_person_impairment]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[coverage_person_impairment]
	( 	
		[coverage_person_impairment_id] [int]  NOT NULL,
		[coverage_person_id] [int]  NOT NULL,
		[impairment_restriction_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[impairment_text] [varchar]  (500)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[coverage_person_impairment]
	ALTER COLUMN [coverage_person_impairment_id] [int] NOT NULL
	ALTER TABLE [dbo].[coverage_person_impairment]
	ALTER COLUMN [coverage_person_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'coverage_person_impairment'), N'coverage_person_impairment_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_impairment]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person_impairment] ADD 
	CONSTRAINT [PK_coverage_person_impairment] PRIMARY KEY CLUSTERED 
	(
		[coverage_person_impairment_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): coverage_person_impairment_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_impairment]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_impairment_cov_pers_id] ON [dbo].[coverage_person_impairment]([coverage_person_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[coverage_person_insured]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[coverage_person_insured]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[coverage_person_insured]
	( 	
		[policy_person_id] [int]  NOT NULL,
		[coverage_person_id] [int]  NOT NULL,
		[perm_flat_extra_amount] [numeric]  NULL,
		[temp_flat_extra_amount] [numeric]  NULL,
		[temp_flat_extra_period] [int]  NULL,
		[flat_extra_reason] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[temp_table_rating] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[temp_table_rating_reason] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[rate_class_quoted] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[rate_class_approved] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[rate_class_issued] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[aviation_exclusion] [int]  NULL,
		[perm_table_rating] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[perm_table_rating_reason] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[coverage_status] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[reason_text] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[is_smoker] [int]  NULL,
		[final_action_note] [varchar]  (2000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[business_ownership_percent] [numeric]  NULL,
		[final_action_by_id] [int]  NULL,
		[final_action_date] [datetime]  NULL,
		[elimination_days] [int]  NULL,
		[payout_frequency] [int]  NULL,
		[waiting_period] [int]  NULL,
		[g_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[cola] [int]  NULL,
		[own_occ] [int]  NULL,
		[spo_amount] [int]  NULL,
		[web_quoted_class] [char]  (70)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[issued_times_standard] [numeric]  NULL,
		[jls_flag] [int]  NULL,
		[split_flag] [int]  NULL,
		[split_detail] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[reinsurance_company_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[reinsurance_amount] [numeric]  NULL,
		[rated_up_age] [int]  NULL,
		[paid_amount] [numeric]  NULL,
		[effective_date] [datetime]  NULL,
		[benefit_period] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[elimination_period] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[approved_benefit_period] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[approved_elimination_period] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[rate_class_prior_to_rx] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[past_coverage_indicator] [int]  NULL,
		[reg60_indicator] [int]  NULL,
		[medical_load_percentage] [numeric]  NULL,
		[rx_load_percentage] [numeric]  NULL,
		[industry_load_percentage] [numeric]  NULL,
		[copay_amount] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[deductable_amount] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[coinsurance_limit] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[max_out_pocket_amount] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[hsa_indicator] [int]  NULL,
		[rx_drug_option] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[joint_age] [int]  NULL,
		[approved_plan_code_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[guarantee_period] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[ppo_id] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[coverage_person_insured]
	ALTER COLUMN [policy_person_id] [int] NOT NULL
	ALTER TABLE [dbo].[coverage_person_insured]
	ALTER COLUMN [coverage_person_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'coverage_person_insured'), N'coverage_person_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'coverage_person_insured'), N'policy_person_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_insured]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person_insured] ADD 
	CONSTRAINT [PK_COVERAGE_PERSON_INSURED] PRIMARY KEY CLUSTERED 
	(
		[coverage_person_id], [policy_person_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): coverage_person_id, policy_person_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_insured]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_cov_pol_pers_id] ON [dbo].[coverage_person_insured]([policy_person_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_insured]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_cov_ppo_id] ON [dbo].[coverage_person_insured]([ppo_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[coverage_person_reinsurer]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[coverage_person_reinsurer]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[coverage_person_reinsurer]
	( 	
		[coverage_person_reinsurer_id] [int]  NOT NULL,
		[coverage_person_id] [int]  NOT NULL,
		[company_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[treaty_type] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[cession_number] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[reinsurance_type] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[retention_amount] [numeric]  NULL,
		[reinsurance_amount] [numeric]  NULL,
		[adb_reinsured_amount] [numeric]  NULL,
		[placed] [int]  NULL,
		[origin_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[coverage_person_reinsurer]
	ALTER COLUMN [coverage_person_reinsurer_id] [int] NOT NULL
	ALTER TABLE [dbo].[coverage_person_reinsurer]
	ALTER COLUMN [coverage_person_id] [int] NOT NULL
	ALTER TABLE [dbo].[coverage_person_reinsurer]
	ALTER COLUMN [company_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'coverage_person_reinsurer'), N'coverage_person_reinsurer_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_reinsurer]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person_reinsurer] ADD 
	CONSTRAINT [PK_coverage_person_reinsurer] PRIMARY KEY CLUSTERED 
	(
		[coverage_person_reinsurer_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): coverage_person_reinsurer_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_reinsurer]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_reviewer_cov_pers_id] ON [dbo].[coverage_person_reinsurer]([coverage_person_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[coverage_person_worksheet]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[coverage_person_worksheet]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[coverage_person_worksheet]
	( 	
		[coverage_person_worksheet_id] [int]  NOT NULL,
		[coverage_person_id] [int]  NOT NULL,
		[priority] [int]  NULL,
		[risk_factor] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[result] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[rate_class] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[note] [varchar]  (200)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[debit] [numeric]  NULL,
		[perm_flat_extra_amount] [numeric]  NULL,
		[temp_flat_extra_amount] [numeric]  NULL,
		[temp_flat_extra_period] [int]  NULL,
		[table_rating] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[origin_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[added_date] [datetime]  NULL,
		[added_by] [int]  NULL,
		[alt_note] [varchar]  (200)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[coverage_person_worksheet]
	ALTER COLUMN [coverage_person_worksheet_id] [int] NOT NULL
	ALTER TABLE [dbo].[coverage_person_worksheet]
	ALTER COLUMN [coverage_person_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'coverage_person_worksheet'), N'coverage_person_worksheet_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_worksheet]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person_worksheet] ADD 
	CONSTRAINT [PK_coverage_person_worksheet] PRIMARY KEY CLUSTERED 
	(
		[coverage_person_worksheet_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): coverage_person_worksheet_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_worksheet]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_cov_wrksht_pid] ON [dbo].[coverage_person_worksheet]([coverage_person_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[coverage_subaccounts]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[coverage_subaccounts]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[coverage_subaccounts]
	( 	
		[policy_coverage_id] [int]  NOT NULL,
		[subaccount_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[percentage] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[coverage_subaccounts]
	ALTER COLUMN [policy_coverage_id] [int] NOT NULL
	ALTER TABLE [dbo].[coverage_subaccounts]
	ALTER COLUMN [subaccount_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'coverage_subaccounts'), N'policy_coverage_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'coverage_subaccounts'), N'subaccount_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_subaccounts]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_subaccounts] ADD 
	CONSTRAINT [PK_COVERAGE_SUBACCOUNTS] PRIMARY KEY CLUSTERED 
	(
		[policy_coverage_id], [subaccount_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): policy_coverage_id, subaccount_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[doc_mgmt_history]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[doc_mgmt_history]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[doc_mgmt_history]
	( 	
		[document_id] [int]  NOT NULL,
		[policy_person_id] [int]  NOT NULL,
		[document_type] [int]  NULL,
		[template_name] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[output_path] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[added_date] [datetime]  NULL,
		[created_date] [datetime]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[doc_mgmt_history]
	ALTER COLUMN [document_id] [int] NOT NULL
	ALTER TABLE [dbo].[doc_mgmt_history]
	ALTER COLUMN [policy_person_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'doc_mgmt_history'), N'document_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[doc_mgmt_history]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[doc_mgmt_history] ADD 
	CONSTRAINT [PK_document_id] PRIMARY KEY CLUSTERED 
	(
		[document_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): document_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[elimination_period]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[elimination_period]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[elimination_period]
	( 	
		[language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[plan_code_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[period_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[g_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[period] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[elimination_period]
	ALTER COLUMN [language_code] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[elimination_period]
	ALTER COLUMN [plan_code_id] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[elimination_period]
	ALTER COLUMN [period_id] [char]  (10) NOT NULL
GO


IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[elimination_period]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE UNIQUE INDEX [IX_elimination_period] ON [dbo].[elimination_period]([language_code], [plan_code_id], [period_id], [g_number]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[employer_plan]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[employer_plan]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[employer_plan]
	( 	
		[employer_plan_id] [int]  NOT NULL,
		[employer_id] [int]  NULL,
		[plan_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[plan_name] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[copay_amount] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[deductible_amount] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[coinsurance_amount] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[max_out_pocket_amount] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[hsa_indicator] [int]  NULL,
		[rx_drug_option] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[employer_plan]
	ALTER COLUMN [employer_plan_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'employer_plan'), N'employer_plan_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[employer_plan]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[employer_plan] ADD 
	CONSTRAINT [PK_employer_plan] PRIMARY KEY CLUSTERED 
	(
		[employer_plan_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): employer_plan_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[employer_plan]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE UNIQUE INDEX [IX_employer_plan] ON [dbo].[employer_plan]([employer_id], [plan_code]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[employer_plan]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_employer_plan_employer] ON [dbo].[employer_plan]([employer_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[evidence_status]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[evidence_status]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[evidence_status]
	( 	
		[evidence_status_id] [int]  NOT NULL,
		[requirement_information_id] [int]  NULL,
		[insured_requirement_id] [int]  NULL,
		[status_id] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[code_source] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[message_text] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[status_date] [datetime]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[evidence_status]
	ALTER COLUMN [evidence_status_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'evidence_status'), N'evidence_status_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[evidence_status]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[evidence_status] ADD 
	CONSTRAINT [PK_evidence_status] PRIMARY KEY CLUSTERED 
	(
		[evidence_status_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): evidence_status_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[evidence_status]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_ev_stat_insured] ON [dbo].[evidence_status]([insured_requirement_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[evidence_status]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_evidence_status] ON [dbo].[evidence_status]([requirement_information_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[extended_property]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[extended_property]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[extended_property]
	( 	
		[policy_id] [int]  NOT NULL,
		[property_name] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[property_value] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[added_date] [datetime]  NULL,
		[update_date] [datetime]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[extended_property]
	ALTER COLUMN [policy_id] [int] NOT NULL
	ALTER TABLE [dbo].[extended_property]
	ALTER COLUMN [property_name] [varchar]  (255) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'extended_property'), N'policy_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'extended_property'), N'property_name', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[extended_property]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[extended_property] ADD 
	CONSTRAINT [PK_EXTENDED_PROPERTY] PRIMARY KEY CLUSTERED 
	(
		[policy_id], [property_name]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): policy_id, property_name do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[extract_time]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[extract_time]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[extract_time]
	( 	
		[company_code] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[extract_type] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[extract_time] [datetime]  NULL,
		[output_path] [char]  (254)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[extract_time]
	ALTER COLUMN [company_code] [char]  (5) NOT NULL
	ALTER TABLE [dbo].[extract_time]
	ALTER COLUMN [extract_type] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'extract_time'), N'company_code', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'extract_time'), N'extract_type', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[extract_time]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[extract_time] ADD 
	CONSTRAINT [PK_EXTRACT_TIME] PRIMARY KEY CLUSTERED 
	(
		[company_code], [extract_type]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): company_code, extract_type do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[family_history]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[family_history]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[family_history]
	( 	
		[requirement_information_id] [int]  NOT NULL,
		[family_history_id] [int]  NOT NULL,
		[famhist_relationship_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[living_status] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[reason_for_death] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[age] [int]  NULL,
		[cancer_flag] [int]  NULL,
		[cancer_age] [int]  NULL,
		[heart_disease_flag] [int]  NULL,
		[heart_disease_age] [int]  NULL,
		[other_disease_flag] [int]  NULL,
		[other_disease_age] [int]  NULL,
		[other_disease_desc] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[family_history]
	ALTER COLUMN [requirement_information_id] [int] NOT NULL
	ALTER TABLE [dbo].[family_history]
	ALTER COLUMN [family_history_id] [int] NOT NULL
	ALTER TABLE [dbo].[family_history]
	ALTER COLUMN [famhist_relationship_code] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'family_history'), N'requirement_information_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'family_history'), N'family_history_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[family_history]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[family_history] ADD 
	CONSTRAINT [PK_family_history] PRIMARY KEY CLUSTERED 
	(
		[requirement_information_id], [family_history_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): requirement_information_id, family_history_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_form_section_form]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_section]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[form_section]  
	DROP CONSTRAINT FK_form_section_form
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_te_rulebook_form_form]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[te_rulebook_form]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[te_rulebook_form]  
	DROP CONSTRAINT FK_te_rulebook_form_form
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[form]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[form]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[form]
	( 	
		[form_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[form_name] [char]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[form_type] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[company_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[form]
	ALTER COLUMN [form_code] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'form'), N'form_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form] ADD 
	CONSTRAINT [PK_form] PRIMARY KEY CLUSTERED 
	(
		[form_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): form_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_form_inst_section_form_inst]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_instance_section]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[form_instance_section]  
	DROP CONSTRAINT FK_form_inst_section_form_inst
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[form_instance]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[form_instance]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[form_instance]
	( 	
		[requirement_information_id] [int]  NOT NULL,
		[form_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[case_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[last_name] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[first_name] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[middle_name] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[title] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[suffix] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[birthdate] [datetime]  NULL,
		[sex] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[tax_id_no] [char]  (11)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[added_date] [datetime]  NULL,
		[added_by] [int]  NULL,
		[update_date] [datetime]  NULL,
		[updated_by] [int]  NULL,
		[policy_person_id] [int]  NULL,
		[form_data] [text]  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY]  TEXTIMAGE_ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[form_instance]
	ALTER COLUMN [requirement_information_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'form_instance'), N'requirement_information_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_instance]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_instance] ADD 
	CONSTRAINT [PK_form_instance] PRIMARY KEY CLUSTERED 
	(
		[requirement_information_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): requirement_information_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_instance]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_form_inst_pol_pers] ON [dbo].[form_instance]([policy_person_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[form_instance_answer]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[form_instance_answer]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[form_instance_answer]
	( 	
		[form_instance_answer_id] [int]  NOT NULL,
		[form_instance_question_grp_id] [int]  NOT NULL,
		[question_id] [int]  NOT NULL,
		[answer_text] [varchar]  (4000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[answer_comment] [varchar]  (4000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[form_instance_answer]
	ALTER COLUMN [form_instance_answer_id] [int] NOT NULL
	ALTER TABLE [dbo].[form_instance_answer]
	ALTER COLUMN [form_instance_question_grp_id] [int] NOT NULL
	ALTER TABLE [dbo].[form_instance_answer]
	ALTER COLUMN [question_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'form_instance_answer'), N'form_instance_answer_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_instance_answer]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_instance_answer] ADD 
	CONSTRAINT [PK_form_instance_answer] PRIMARY KEY CLUSTERED 
	(
		[form_instance_answer_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): form_instance_answer_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_form_inst_ans_doc_info]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_instance_answer]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[form_instance_answer]  
	DROP CONSTRAINT FK_form_inst_ans_doc_info
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[form_instance_answers_doc_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[form_instance_answers_doc_info]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[form_instance_answers_doc_info]
	( 	
		[form_instance_answer_id] [int]  NOT NULL,
		[policy_person_id] [int]  NOT NULL,
		[par_policy_person_id] [int]  NULL,
		[onset_date] [datetime]  NULL,
		[last_treatment_date] [datetime]  NULL,
		[diagnosis] [varchar]  (1000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[treatment] [varchar]  (1000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[medication] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[dosage] [numeric]  NULL,
		[results] [varchar]  (1000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[duration] [int]  NULL,
		[physician_name] [char]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[physician_address] [char]  (254)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[physician_phone] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[hospital_name] [char]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[hospital_address] [char]  (254)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[hospital_phone] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[form_instance_answers_doc_info]
	ALTER COLUMN [form_instance_answer_id] [int] NOT NULL
	ALTER TABLE [dbo].[form_instance_answers_doc_info]
	ALTER COLUMN [policy_person_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'form_instance_answers_doc_info'), N'form_instance_answer_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_instance_answers_doc_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_instance_answers_doc_info] ADD 
	CONSTRAINT [PK_form_inst_answers_doc_info] PRIMARY KEY CLUSTERED 
	(
		[form_instance_answer_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): form_instance_answer_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_form_inst_ans_q_group]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_instance_answer]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[form_instance_answer]  
	DROP CONSTRAINT FK_form_inst_ans_q_group
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[form_instance_question_group]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[form_instance_question_group]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[form_instance_question_group]
	( 	
		[form_instance_section_id] [int]  NOT NULL,
		[form_instance_question_grp_id] [int]  NOT NULL,
		[form_question_group_id] [int]  NOT NULL,
		[form_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[form_section_id] [int]  NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[form_instance_question_group]
	ALTER COLUMN [form_instance_section_id] [int] NOT NULL
	ALTER TABLE [dbo].[form_instance_question_group]
	ALTER COLUMN [form_instance_question_grp_id] [int] NOT NULL
	ALTER TABLE [dbo].[form_instance_question_group]
	ALTER COLUMN [form_question_group_id] [int] NOT NULL
	ALTER TABLE [dbo].[form_instance_question_group]
	ALTER COLUMN [form_code] [char]  (20) NOT NULL
	ALTER TABLE [dbo].[form_instance_question_group]
	ALTER COLUMN [form_section_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'form_instance_question_group'), N'form_instance_question_grp_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_instance_question_group]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_instance_question_group] ADD 
	CONSTRAINT [PK_form_question_group_inst] PRIMARY KEY CLUSTERED 
	(
		[form_instance_question_grp_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): form_instance_question_grp_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_form_inst_q_group_sec]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_instance_question_group]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[form_instance_question_group]  
	DROP CONSTRAINT FK_form_inst_q_group_sec
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[form_instance_section]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[form_instance_section]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[form_instance_section]
	( 	
		[form_instance_section_id] [int]  NOT NULL,
		[form_section_id] [int]  NOT NULL,
		[form_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[requirement_information_id] [int]  NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[form_instance_section]
	ALTER COLUMN [form_instance_section_id] [int] NOT NULL
	ALTER TABLE [dbo].[form_instance_section]
	ALTER COLUMN [form_section_id] [int] NOT NULL
	ALTER TABLE [dbo].[form_instance_section]
	ALTER COLUMN [form_code] [char]  (20) NOT NULL
	ALTER TABLE [dbo].[form_instance_section]
	ALTER COLUMN [requirement_information_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'form_instance_section'), N'form_instance_section_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_instance_section]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_instance_section] ADD 
	CONSTRAINT [PK_form_instance_section] PRIMARY KEY CLUSTERED 
	(
		[form_instance_section_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): form_instance_section_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_form_inst_answers_form_ques]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_instance_answer]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[form_instance_answer]  
	DROP CONSTRAINT FK_form_inst_answers_form_ques
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[form_question]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[form_question]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[form_question]
	( 	
		[question_id] [int]  NOT NULL,
		[form_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[form_section_id] [int]  NOT NULL,
		[question_group_id] [int]  NOT NULL,
		[sequence_number] [int]  NULL,
		[external_question_number] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[question_label] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[question_text] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[question_type] [int]  NULL,
		[data_type] [int]  NULL,
		[answer_set_name] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[min_size] [int]  NULL,
		[max_size] [int]  NULL,
		[alt_question_text] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[form_question]
	ALTER COLUMN [question_id] [int] NOT NULL
	ALTER TABLE [dbo].[form_question]
	ALTER COLUMN [form_code] [char]  (20) NOT NULL
	ALTER TABLE [dbo].[form_question]
	ALTER COLUMN [form_section_id] [int] NOT NULL
	ALTER TABLE [dbo].[form_question]
	ALTER COLUMN [question_group_id] [int] NOT NULL
	ALTER TABLE [dbo].[form_question]
	ALTER COLUMN [question_label] [char]  (20) NOT NULL
	ALTER TABLE [dbo].[form_question]
	ALTER COLUMN [question_text] [varchar]  (255) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'form_question'), N'form_code', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'form_question'), N'question_label', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_question]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_question] ADD 
	CONSTRAINT [IX_form_question] UNIQUE NONCLUSTERED 
	(
		[form_code], [question_label]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): form_code, question_label do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'form_question'), N'question_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_question]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_question] ADD 
	CONSTRAINT [PK_form_question] PRIMARY KEY CLUSTERED 
	(
		[question_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): question_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_form_q_group_quest]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_instance_question_group]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[form_instance_question_group]  
	DROP CONSTRAINT FK_form_q_group_quest
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_form_quest_quest_group]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_question]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[form_question]  
	DROP CONSTRAINT FK_form_quest_quest_group
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[form_question_group]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[form_question_group]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[form_question_group]
	( 	
		[form_question_group_id] [int]  NOT NULL,
		[form_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[form_section_id] [int]  NOT NULL,
		[display_sequence] [int]  NULL,
		[is_repeatable] [int]  NULL,
		[external_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[group_name] [char]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[min_occur] [int]  NULL,
		[max_occur] [int]  NULL,
		[is_party] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[form_question_group]
	ALTER COLUMN [form_question_group_id] [int] NOT NULL
	ALTER TABLE [dbo].[form_question_group]
	ALTER COLUMN [form_code] [char]  (20) NOT NULL
	ALTER TABLE [dbo].[form_question_group]
	ALTER COLUMN [form_section_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'form_question_group'), N'form_question_group_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'form_question_group'), N'form_code', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'form_question_group'), N'form_section_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_question_group]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_question_group] ADD 
	CONSTRAINT [PK_question_group] PRIMARY KEY CLUSTERED 
	(
		[form_question_group_id], [form_code], [form_section_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): form_question_group_id, form_code, form_section_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_form_inst_section_form_sec]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_instance_section]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[form_instance_section]  
	DROP CONSTRAINT FK_form_inst_section_form_sec
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_question_group_form_section]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_question_group]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[form_question_group]  
	DROP CONSTRAINT FK_question_group_form_section
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[form_section]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[form_section]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[form_section]
	( 	
		[form_section_id] [int]  NOT NULL,
		[form_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[section_name] [char]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[display_sequence] [int]  NULL,
		[is_repeatable] [int]  NULL,
		[external_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[min_occur] [int]  NULL,
		[max_occur] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[form_section]
	ALTER COLUMN [form_section_id] [int] NOT NULL
	ALTER TABLE [dbo].[form_section]
	ALTER COLUMN [form_code] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'form_section'), N'form_section_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'form_section'), N'form_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_section]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_section] ADD 
	CONSTRAINT [PK_form_section] PRIMARY KEY CLUSTERED 
	(
		[form_section_id], [form_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): form_section_id, form_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[generic_note]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[generic_note]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[generic_note]
	( 	
		[note_id] [int]  NOT NULL,
		[note_collection_id] [int]  NOT NULL,
		[topic] [char]  (254)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[added_date] [datetime]  NOT NULL,
		[update_date] [datetime]  NULL,
		[review_date] [datetime]  NULL,
		[author] [int]  NOT NULL,
		[updated_by] [int]  NULL,
		[reviewed_by] [int]  NULL,
		[note_text] [varchar]  (4000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[generic_note]
	ALTER COLUMN [note_id] [int] NOT NULL
	ALTER TABLE [dbo].[generic_note]
	ALTER COLUMN [note_collection_id] [int] NOT NULL
	ALTER TABLE [dbo].[generic_note]
	ALTER COLUMN [added_date] [datetime] NOT NULL
	ALTER TABLE [dbo].[generic_note]
	ALTER COLUMN [author] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'generic_note'), N'note_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[generic_note]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[generic_note] ADD 
	CONSTRAINT [PK_group_notes] PRIMARY KEY CLUSTERED 
	(
		[note_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): note_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_cov_pers_impairment_code]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_impairment]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[coverage_person_impairment]  
	DROP CONSTRAINT FK_cov_pers_impairment_code
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[impairment_restriction]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[impairment_restriction]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[impairment_restriction]
	( 	
		[impairment_restriction_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[impairment_text] [varchar]  (500)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[alt_impairment_text] [varchar]  (500)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[impairment_restriction]
	ALTER COLUMN [impairment_restriction_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'impairment_restriction'), N'impairment_restriction_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[impairment_restriction]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[impairment_restriction] ADD 
	CONSTRAINT [PK_impairment_restriction] PRIMARY KEY CLUSTERED 
	(
		[impairment_restriction_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): impairment_restriction_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[insured_application_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[insured_application_info]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[insured_application_info]
	( 	
		[requirement_information_id] [int]  NOT NULL,
		[policy_person_id] [int]  NOT NULL,
		[manual_entry_flag] [int]  NULL,
		[income] [numeric]  NULL,
		[net_worth] [numeric]  NULL,
		[total_inforce] [numeric]  NULL,
		[replacement_amount] [numeric]  NULL,
		[replacement_date] [datetime]  NULL,
		[birth_country] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[residence_country] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[residence_state] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[drivers_license_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[drivers_license_country_id] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[drivers_license_state] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[bankruptcy_disposition] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[bankruptcy_discharge_date] [datetime]  NULL,
		[occupation] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[height_inches] [int]  NULL,
		[weight_pounds] [int]  NULL,
		[weght_previous_year] [int]  NULL,
		[reason_for_weight_change] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[waist_inches] [int]  NULL,
		[last_md_visit] [datetime]  NULL,
		[last_md_result] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[added_by] [int]  NULL,
		[added_date] [datetime]  NULL,
		[updated_by] [int]  NULL,
		[update_date] [datetime]  NULL,
		[beneficiary_type] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[medical_authorization_flag] [int]  NULL,
		[citizenship_country_id] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[doctor_name] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[doctor_addr] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[doctor_city] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[doctor_state] [char]  (2)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[doctor_zip] [char]  (9)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[last_visit_date] [datetime]  NULL,
		[visit_reason] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[findings] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[treatments] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[still_under_treatment_flag] [int]  NULL,
		[prior_consultations_flag] [int]  NULL,
		[prior_consultation_detail] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[unearned_income] [numeric]  NULL,
		[employer] [char]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[years_at_employer] [int]  NULL,
		[employer_address] [varchar]  (1000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[income_prev_year] [numeric]  NULL,
		[visa_type] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[job_duties] [varchar]  (150)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[birth_state] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[hippa_authorization_flag] [int]  NULL,
		[monthly_expense] [int]  NULL,
		[last_blood_profile_date] [datetime]  NULL,
		[best_day_to_call] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[best_time_to_call] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[systolic_bp_reading] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[diastolic_bp_reading] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[cholesterol_reading] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[issue_state] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[business_income] [int]  NULL,
		[business_net_worth] [int]  NULL,
		[book_value] [int]  NULL,
		[market_value] [int]  NULL,
		[inspection_income] [int]  NULL,
		[inspection_net_worth] [int]  NULL,
		[inspection_business_income] [int]  NULL,
		[inspection_business_net_worth] [int]  NULL,
		[inspection_book_value] [int]  NULL,
		[inspection_market_value] [int]  NULL,
		[statement_income] [int]  NULL,
		[statement_net_worth] [int]  NULL,
		[statement_business_income] [int]  NULL,
		[statement_business_net_worth] [int]  NULL,
		[statement_book_value] [int]  NULL,
		[statement_market_value] [int]  NULL,
		[other_income] [int]  NULL,
		[other_net_worth] [int]  NULL,
		[other_business_income] [int]  NULL,
		[other_business_net_worth] [int]  NULL,
		[other_book_value] [int]  NULL,
		[other_market_value] [int]  NULL,
		[employer_hire_date] [datetime]  NULL,
		[employer_hours_worked] [int]  NULL,
		[business_type] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[business_ownership_percent] [int]  NULL,
		[business_owned_years] [int]  NULL,
		[business_existence_years] [int]  NULL,
		[total_household_income] [numeric]  NULL,
		[occupation_code] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[doctor_phone_areacode] [char]  (3)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[doctor_phone_prefix] [char]  (3)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[doctor_phone_suffix] [char]  (4)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[doctor_phone_extension] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[insured_application_info]
	ALTER COLUMN [requirement_information_id] [int] NOT NULL
	ALTER TABLE [dbo].[insured_application_info]
	ALTER COLUMN [policy_person_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'insured_application_info'), N'requirement_information_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_application_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[insured_application_info] ADD 
	CONSTRAINT [PK_INSURED_APPLICATION_INFO] PRIMARY KEY CLUSTERED 
	(
		[requirement_information_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): requirement_information_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_application_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [IX_form_insured_birth_country] ON [dbo].[insured_application_info]([birth_country]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_application_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE UNIQUE INDEX [IX_insured] ON [dbo].[insured_application_info]([policy_person_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[insured_benefits_person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[insured_benefits_person]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[insured_benefits_person]
	( 	
		[benefit_id] [int]  NULL,
		[person_id] [int]  NULL,
		[role_id] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_evidence_status_ins_req]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[evidence_status]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[evidence_status]  
	DROP CONSTRAINT FK_evidence_status_ins_req
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[insured_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[insured_requirement]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[insured_requirement]
	( 	
		[insured_requirement_id] [int]  NOT NULL,
		[requirement_information_id] [int]  NULL,
		[requirement_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[added_by] [int]  NULL,
		[added_date] [datetime]  NULL,
		[closed_date] [datetime]  NULL,
		[closed_by] [int]  NULL,
		[closed_disposition] [char]  (2)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[needed_for_approval_flag] [int]  NULL,
		[notify_when_satisfied] [int]  NULL,
		[review_message_id] [int]  NULL,
		[policy_person_id] [int]  NULL,
		[followup_date] [datetime]  NULL,
		[ordered_by] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[can_auto_approve] [int]  NULL,
		[notify_when_received] [int]  NULL,
		[received_id] [int]  NULL,
		[note_id] [int]  NULL,
		[received_date] [datetime]  NULL,
		[received_by] [int]  NULL,
		[create_comment] [varchar]  (1000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[ordered_date] [datetime]  NULL,
		[provider] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[evidence_type] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[authorization_required] [int]  NULL,
		[external_requirement_code] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[last_followup_date] [datetime]  NULL,
		[manual_or_automatic_entry] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[new_business_until_closed] [int]  NULL,
		[provider_order_id] [int]  NULL,
		[schedule_date] [datetime]  NULL,
		[complete_date] [datetime]  NULL,
		[alt_create_comment] [varchar]  (1000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[insured_requirement]
	ALTER COLUMN [insured_requirement_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'insured_requirement'), N'insured_requirement_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[insured_requirement] ADD 
	CONSTRAINT [PK_INSURED_REQUIREMENT] PRIMARY KEY CLUSTERED 
	(
		[insured_requirement_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): insured_requirement_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_ins_req_followup_date] ON [dbo].[insured_requirement]([followup_date]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_ins_req_prov_id] ON [dbo].[insured_requirement]([provider_order_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [IX_insured_requirement_22] ON [dbo].[insured_requirement]([insured_requirement_id], [can_auto_approve]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [IX_insured_requirement_23] ON [dbo].[insured_requirement]([requirement_information_id], [requirement_code]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [IX_insured_requirement_24] ON [dbo].[insured_requirement]([requirement_code], [closed_disposition]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [IX_insured_requirement_rvw_msg] ON [dbo].[insured_requirement]([review_message_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_req_pol_pers_id] ON [dbo].[insured_requirement]([policy_person_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[lab_comment]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[lab_comment]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[lab_comment]
	( 	
		[lab_id_number] [char]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[requirement_information_id] [int]  NOT NULL,
		[remark_id] [char]  (4)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[sequence_no] [int]  NOT NULL,
		[comment_text] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[lab_comment]
	ALTER COLUMN [lab_id_number] [char]  (15) NOT NULL
	ALTER TABLE [dbo].[lab_comment]
	ALTER COLUMN [requirement_information_id] [int] NOT NULL
	ALTER TABLE [dbo].[lab_comment]
	ALTER COLUMN [remark_id] [char]  (4) NOT NULL
	ALTER TABLE [dbo].[lab_comment]
	ALTER COLUMN [sequence_no] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'lab_comment'), N'requirement_information_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'lab_comment'), N'remark_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'lab_comment'), N'sequence_no', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[lab_comment]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[lab_comment] ADD 
	CONSTRAINT [PK_LAB_COMMENT] PRIMARY KEY CLUSTERED 
	(
		[requirement_information_id], [remark_id], [sequence_no]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): requirement_information_id, remark_id, sequence_no do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[lab_configuration]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[lab_configuration]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[lab_configuration]
	( 	
		[company_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[request_directory] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[lab_company_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[lab_configuration]
	ALTER COLUMN [company_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'lab_configuration'), N'company_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[lab_configuration]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[lab_configuration] ADD 
	CONSTRAINT [PK_LAB_CONFIGURATION] PRIMARY KEY CLUSTERED 
	(
		[company_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): company_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_LAB_COMM_REF_14387_LAB_HEAD]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[lab_comment]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[lab_comment]  
	DROP CONSTRAINT FK_LAB_COMM_REF_14387_LAB_HEAD
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_lab_resu_ref_10823_lab_head]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[lab_result]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[lab_result]  
	DROP CONSTRAINT fk_lab_resu_ref_10823_lab_head
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[lab_header]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[lab_header]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[lab_header]
	( 	
		[lab_id_number] [char]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[requirement_information_id] [int]  NOT NULL,
		[lab_type_id] [char]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[drawn_date] [datetime]  NULL,
		[last_food] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[last_food_time] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[last_food_num] [numeric]  NULL,
		[agency_id] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[special_conditions] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[examiner] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[city] [char]  (12)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[state] [char]  (2)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[process_type] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[underwriter_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[test_date] [datetime]  NULL,
		[barcode_number] [char]  (12)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[last_name] [char]  (25)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[first_name] [char]  (25)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[middle_name] [char]  (25)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[ssn] [char]  (11)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[birth_date] [datetime]  NULL,
		[sex] [char]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[lab_transmit_date] [datetime]  NULL,
		[lab_receive_date] [datetime]  NULL,
		[ticket_number] [char]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[company_code] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[ins_type_life] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[ins_type_health] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[ins_type_disability] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[ins_type_group] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[ins_type_individual] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[insurance_amount] [numeric]  NULL,
		[drawn_date_serum] [datetime]  NULL,
		[signature_present] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[policy_number] [char]  (25)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[completed_date] [datetime]  NULL,
		[agent_name] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[agent_city] [char]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[agent_state] [char]  (2)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[agent_zip] [char]  (9)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[examiner_company_code] [char]  (4)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[examiner_state] [char]  (2)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[special_status_indicator] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[applicant_address] [char]  (35)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[applicant_zip] [char]  (9)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[state_agent] [char]  (14)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[time_collected] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[referrence_number] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[lab_header]
	ALTER COLUMN [lab_id_number] [char]  (15) NOT NULL
	ALTER TABLE [dbo].[lab_header]
	ALTER COLUMN [requirement_information_id] [int] NOT NULL
	ALTER TABLE [dbo].[lab_header]
	ALTER COLUMN [lab_type_id] [char]  (15) NOT NULL
	ALTER TABLE [dbo].[lab_header]
	ALTER COLUMN [last_name] [char]  (25) NOT NULL
	ALTER TABLE [dbo].[lab_header]
	ALTER COLUMN [first_name] [char]  (25) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'lab_header'), N'requirement_information_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[lab_header]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[lab_header] ADD 
	CONSTRAINT [PK_LAB_HEADER] PRIMARY KEY CLUSTERED 
	(
		[requirement_information_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): requirement_information_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[lab_result]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[lab_result]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[lab_result]
	( 	
		[lab_id_number] [char]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[requirement_information_id] [int]  NOT NULL,
		[horl_code] [char]  (8)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[indicator] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[result_value] [char]  (25)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[high_low] [char]  (4)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[sequence_number] [int]  NULL,
		[range_text] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[lab_result]
	ALTER COLUMN [lab_id_number] [char]  (15) NOT NULL
	ALTER TABLE [dbo].[lab_result]
	ALTER COLUMN [requirement_information_id] [int] NOT NULL
	ALTER TABLE [dbo].[lab_result]
	ALTER COLUMN [horl_code] [char]  (8) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'lab_result'), N'requirement_information_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'lab_result'), N'horl_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[lab_result]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[lab_result] ADD 
	CONSTRAINT [PK_LAB_RESULT] PRIMARY KEY CLUSTERED 
	(
		[requirement_information_id], [horl_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): requirement_information_id, horl_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[lifesuite_version]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[lifesuite_version]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[lifesuite_version]
	( 	
		[lifesuite_version] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[lifesuite_version]
	ALTER COLUMN [lifesuite_version] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'lifesuite_version'), N'lifesuite_version', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[lifesuite_version]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[lifesuite_version] ADD 
	CONSTRAINT [PK_lifesuite_version] PRIMARY KEY CLUSTERED 
	(
		[lifesuite_version]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): lifesuite_version do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_billing_code_line_of_bus]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[billing_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[billing_code]  
	DROP CONSTRAINT FK_billing_code_line_of_bus
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_aus_user_limits_lob]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_user_limits]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[aus_user_limits]  
	DROP CONSTRAINT FK_aus_user_limits_lob
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_plan_code_lob]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_plan_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_plan_code]  
	DROP CONSTRAINT fk_plan_code_lob
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[line_of_business]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[line_of_business]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[line_of_business]
	( 	
		[line_of_business_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[name] [char]  (120)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[line_of_business]
	ALTER COLUMN [line_of_business_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'line_of_business'), N'line_of_business_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[line_of_business]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[line_of_business] ADD 
	CONSTRAINT [PK_line_of_business] PRIMARY KEY CLUSTERED 
	(
		[line_of_business_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): line_of_business_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ls_file]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[ls_file]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[ls_file]
	( 	
		[file_name] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[file_type] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[create_date] [datetime]  NULL,
		[last_modified_date] [datetime]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[ls_file]
	ALTER COLUMN [file_name] [varchar]  (255) NOT NULL
	ALTER TABLE [dbo].[ls_file]
	ALTER COLUMN [file_type] [char]  (30) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'ls_file'), N'file_name', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'ls_file'), N'file_type', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[ls_file]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[ls_file] ADD 
	CONSTRAINT [PK_LSFILE_NAME] PRIMARY KEY CLUSTERED 
	(
		[file_name], [file_type]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): file_name, file_type do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[mib_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[mib_code]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[mib_code]
	( 	
		[mib_header_id] [int]  NOT NULL,
		[seq_number] [int]  NOT NULL,
		[field_id] [varchar]  (4)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[data_item] [varchar]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[date_reported] [datetime]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[mib_code]
	ALTER COLUMN [mib_header_id] [int] NOT NULL
	ALTER TABLE [dbo].[mib_code]
	ALTER COLUMN [seq_number] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'mib_code'), N'mib_header_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'mib_code'), N'seq_number', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[mib_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[mib_code] ADD 
	CONSTRAINT [PK_MIB_CODE] PRIMARY KEY CLUSTERED 
	(
		[mib_header_id], [seq_number]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): mib_header_id, seq_number do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[mib_coding]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[mib_coding]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[mib_coding]
	( 	
		[policy_person_id] [int]  NOT NULL,
		[sequence_number] [int]  NOT NULL,
		[mib_codes] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[date_added] [datetime]  NULL,
		[date_sent] [datetime]  NULL,
		[added_by] [int]  NULL,
		[effective_date] [datetime]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[mib_coding]
	ALTER COLUMN [policy_person_id] [int] NOT NULL
	ALTER TABLE [dbo].[mib_coding]
	ALTER COLUMN [sequence_number] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'mib_coding'), N'sequence_number', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'mib_coding'), N'policy_person_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[mib_coding]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[mib_coding] ADD 
	CONSTRAINT [PK_MIB_CODING] PRIMARY KEY CLUSTERED 
	(
		[sequence_number], [policy_person_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): sequence_number, policy_person_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_mib_code_ref_598_mib_head]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[mib_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[mib_code]  
	DROP CONSTRAINT fk_mib_code_ref_598_mib_head
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[mib_header]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[mib_header]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[mib_header]
	( 	
		[mib_header_id] [int]  NOT NULL,
		[requirement_information_id] [int]  NOT NULL,
		[policy_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[birth_date] [datetime]  NULL,
		[place_of_birth] [varchar]  (6)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[application_prefix] [varchar]  (3)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[error_msg_text] [varchar]  (60)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[rec_type] [varchar]  (8)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[csy] [varchar]  (3)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[dcode] [varchar]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[batch_number] [varchar]  (3)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[inq_number] [varchar]  (3)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[inq_type] [varchar]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[reply_type] [varchar]  (3)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[last_name] [varchar]  (25)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[first_name] [varchar]  (25)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[middle_name] [varchar]  (25)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[inquiry_date] [datetime]  NULL,
		[modify_datetime] [datetime]  NULL,
		[occupation] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[mib_header]
	ALTER COLUMN [mib_header_id] [int] NOT NULL
	ALTER TABLE [dbo].[mib_header]
	ALTER COLUMN [requirement_information_id] [int] NOT NULL
	ALTER TABLE [dbo].[mib_header]
	ALTER COLUMN [policy_number] [char]  (20) NOT NULL
	ALTER TABLE [dbo].[mib_header]
	ALTER COLUMN [csy] [varchar]  (3) NOT NULL
	ALTER TABLE [dbo].[mib_header]
	ALTER COLUMN [last_name] [varchar]  (25) NOT NULL
	ALTER TABLE [dbo].[mib_header]
	ALTER COLUMN [first_name] [varchar]  (25) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'mib_header'), N'mib_header_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[mib_header]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[mib_header] ADD 
	CONSTRAINT [PK_MIB_HEADER] PRIMARY KEY CLUSTERED 
	(
		[mib_header_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): mib_header_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[mib_header]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_mib_req_inf_id] ON [dbo].[mib_header]([requirement_information_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[mvr_detail]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[mvr_detail]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[mvr_detail]
	( 	
		[mvr_header_id] [int]  NOT NULL,
		[seq_number] [int]  NOT NULL,
		[record_type] [char]  (4)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[data] [char]  (80)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[modify_datetime] [datetime]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[mvr_detail]
	ALTER COLUMN [mvr_header_id] [int] NOT NULL
	ALTER TABLE [dbo].[mvr_detail]
	ALTER COLUMN [seq_number] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'mvr_detail'), N'mvr_header_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'mvr_detail'), N'seq_number', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[mvr_detail]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[mvr_detail] ADD 
	CONSTRAINT [PK_MVR_DETAIL] PRIMARY KEY CLUSTERED 
	(
		[mvr_header_id], [seq_number]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): mvr_header_id, seq_number do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_mvr_deta_ref_9662_mvr_head]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[mvr_detail]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[mvr_detail]  
	DROP CONSTRAINT fk_mvr_deta_ref_9662_mvr_head
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[mvr_header]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[mvr_header]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[mvr_header]
	( 	
		[mvr_header_id] [int]  NOT NULL,
		[requirement_information_id] [int]  NOT NULL,
		[report_date] [datetime]  NULL,
		[state] [char]  (2)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[license_number] [char]  (25)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[birth_date] [datetime]  NULL,
		[soc_sec_no] [char]  (9)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[license_status] [char]  (9)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[license_class] [char]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[issue_date] [datetime]  NULL,
		[expire_date] [datetime]  NULL,
		[restrictions] [char]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[driver_information] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[last_name] [char]  (25)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[first_name] [char]  (25)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[middle_name] [char]  (25)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[license_address] [char]  (35)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[license_city_state] [char]  (35)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[batch_number] [char]  (2)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[batch_sequence] [char]  (9)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[modify_datetime] [datetime]  NULL,
		[report_status] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[mvr_header]
	ALTER COLUMN [mvr_header_id] [int] NOT NULL
	ALTER TABLE [dbo].[mvr_header]
	ALTER COLUMN [requirement_information_id] [int] NOT NULL
	ALTER TABLE [dbo].[mvr_header]
	ALTER COLUMN [last_name] [char]  (25) NOT NULL
	ALTER TABLE [dbo].[mvr_header]
	ALTER COLUMN [first_name] [char]  (25) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'mvr_header'), N'mvr_header_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[mvr_header]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[mvr_header] ADD 
	CONSTRAINT [PK_MVR_HEADER] PRIMARY KEY CLUSTERED 
	(
		[mvr_header_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): mvr_header_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[mvr_header]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_mvr_req_inf] ON [dbo].[mvr_header]([requirement_information_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[new_association_plan]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[new_association_plan]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[new_association_plan]
	( 	
		[association_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[plan_code_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[tpa_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[g_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[mortality_max] [int]  NULL,
		[auto_approve_requires_member] [int]  NULL,
		[underwrite_child] [int]  NULL,
		[spouse_can_exceed_member] [int]  NULL,
		[allow_jet_issue] [int]  NULL,
		[billing_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[expiration_date] [datetime]  NULL,
		[spouse_coverage_available] [int]  NULL,
		[underwrite_spouse] [int]  NULL,
		[child_coverage_available] [int]  NULL,
		[enrollment_effective_date] [datetime]  NULL,
		[enrollment_num_days] [int]  NULL,
		[employee_eligibility] [int]  NULL,
		[employee_percent_contributory] [numeric]  NULL,
		[add_exclusions] [int]  NULL,
		[replacement_ratio] [numeric]  NULL,
		[plan_max_multiplier] [numeric]  NULL,
		[plan_max_issue] [int]  NULL,
		[plan_min_issue] [int]  NULL,
		[plan_max_participation_amount] [int]  NULL,
		[max_issue_age] [int]  NULL,
		[rounding_flag] [int]  NULL,
		[rounding_amount] [int]  NULL,
		[gsi_plan_max] [int]  NULL,
		[gsi_multiplier] [numeric]  NULL,
		[min_num_hours] [int]  NULL,
		[note_collection_id] [int]  NULL,
		[company_group_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[sub_group_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[class_group_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[association_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[unique_id] [bigint]  Identity (100000 ,1) NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[new_association_plan]
	ALTER COLUMN [association_code] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[new_association_plan]
	ALTER COLUMN [plan_code_id] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[new_association_plan]
	ALTER COLUMN [unique_id] [bigint] NOT NULL
GO


IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_person_note_collection]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[person]  
	DROP CONSTRAINT FK_person_note_collection
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_association_plan_note_collection]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[association_plan]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[association_plan]  
	DROP CONSTRAINT FK_association_plan_note_collection
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[note_collection]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[note_collection]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[note_collection]
	( 	
		[note_collection_id] [int]  NOT NULL,
		[type_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[note_collection]
	ALTER COLUMN [note_collection_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'note_collection'), N'note_collection_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[note_collection]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[note_collection] ADD 
	CONSTRAINT [PK_note_collection] PRIMARY KEY CLUSTERED 
	(
		[note_collection_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): note_collection_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[notes]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[notes]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[notes]
	( 	
		[note_id] [int]  NOT NULL,
		[author] [int]  NULL,
		[note_type] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[topic] [char]  (254)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[visibility] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[added_date] [datetime]  NOT NULL,
		[update_date] [datetime]  NULL,
		[diary_date] [datetime]  NULL,
		[note] [text]  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[policy_person_id] [int]  NULL,
		[refer_to_user_id] [int]  NULL,
		[updated_by] [int]  NULL,
		[email_to_list] [char]  (254)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[reviewed_by] [int]  NULL,
		[reviewed_date] [datetime]  NULL,
		[alt_topic] [char]  (254)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[alt_note] [text]  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY]  TEXTIMAGE_ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[notes]
	ALTER COLUMN [note_id] [int] NOT NULL
	ALTER TABLE [dbo].[notes]
	ALTER COLUMN [added_date] [datetime] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'notes'), N'note_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'notes'), N'added_date', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[notes]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[notes] ADD 
	CONSTRAINT [PK_NOTES] PRIMARY KEY CLUSTERED 
	(
		[note_id], [added_date]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): note_id, added_date do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[notes]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_note_auth_comp] ON [dbo].[notes]([author], [diary_date]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[notes]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_note_auth_id] ON [dbo].[notes]([author]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[notes]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_note_diary_date] ON [dbo].[notes]([diary_date]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[notes]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_note_refer_id] ON [dbo].[notes]([refer_to_user_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[notes]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [IX_notes_insured_id] ON [dbo].[notes]([policy_person_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[object_property]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[object_property]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[object_property]
	( 	
		[object_property_id] [int]  NOT NULL,
		[object_id] [int]  NOT NULL,
		[name] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[value] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[object_property]
	ALTER COLUMN [object_property_id] [int] NOT NULL
	ALTER TABLE [dbo].[object_property]
	ALTER COLUMN [object_id] [int] NOT NULL
	ALTER TABLE [dbo].[object_property]
	ALTER COLUMN [name] [char]  (30) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'object_property'), N'object_property_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[object_property]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[object_property] ADD 
	CONSTRAINT [PK_OBJECT_PROPERTY] PRIMARY KEY CLUSTERED 
	(
		[object_property_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): object_property_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[object_property]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_obj_prop] ON [dbo].[object_property]([object_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[occupation]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[occupation]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[occupation]
	( 	
		[occupation] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[is_ratable] [int]  NULL,
		[occupation_code] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[occupation]
	ALTER COLUMN [occupation] [varchar]  (50) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'occupation'), N'occupation', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[occupation]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[occupation] ADD 
	CONSTRAINT [PK_OCCUPATION] PRIMARY KEY CLUSTERED 
	(
		[occupation]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): occupation do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[paramed]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[paramed]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[paramed]
	( 	
		[requirement_information_id] [int]  NOT NULL,
		[barcode_number] [char]  (12)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[birthdate] [datetime]  NULL,
		[sex] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[last_name] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[first_name] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[middle_name] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[title] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[suffix] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[tax_id_no] [char]  (11)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[agency_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[agency_name] [varchar]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[agent_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[agent_name] [varchar]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[extract_date] [datetime]  NULL,
		[extract_file_name] [varchar]  (128)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[import_date] [datetime]  NULL,
		[added_date] [datetime]  NULL,
		[added_by] [int]  NULL,
		[update_date] [datetime]  NULL,
		[updated_by] [int]  NULL,
		[policy_person_id] [int]  NULL,
		[doctor_name] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[doctor_addr] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[doctor_city] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[doctor_state] [char]  (2)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[doctor_zip] [char]  (9)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[last_visit_date] [datetime]  NULL,
		[visit_reason] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[findings] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[treatments] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[still_under_treatment_flag] [int]  NULL,
		[prior_consultations_flag] [int]  NULL,
		[prior_consultation_detail] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[manual_entry_flag] [int]  NULL,
		[height_inches] [int]  NULL,
		[did_you_weigh_flag] [int]  NULL,
		[did_you_measure_flag] [int]  NULL,
		[weight_pounds] [int]  NULL,
		[weight_loss_gain] [numeric]  NULL,
		[weight_change_reason] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[waist_size] [numeric]  NULL,
		[chest_exhale] [numeric]  NULL,
		[chest_inhale] [numeric]  NULL,
		[systolic] [int]  NULL,
		[diastolic] [int]  NULL,
		[pulse] [int]  NULL,
		[exam_company_number] [char]  (25)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[exam_company_name] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[examiner_number] [char]  (25)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[examiner_name] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[are_you_a_doctor_flag] [int]  NULL,
		[any_answered_yes] [int]  NULL,
		[any_additional_information] [int]  NULL,
		[any_unanswered_questions] [int]  NULL,
		[any_underlined_words] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[paramed]
	ALTER COLUMN [requirement_information_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'paramed'), N'requirement_information_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[paramed]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[paramed] ADD 
	CONSTRAINT [PK_PARAMED] PRIMARY KEY CLUSTERED 
	(
		[requirement_information_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): requirement_information_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[paramed]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_paramed_pol_pers] ON [dbo].[paramed]([policy_person_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[party_relation]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[party_relation]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[party_relation]
	( 	
		[person_id] [int]  NOT NULL,
		[parent_id] [int]  NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[party_relation]
	ALTER COLUMN [person_id] [int] NOT NULL
	ALTER TABLE [dbo].[party_relation]
	ALTER COLUMN [parent_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'party_relation'), N'person_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'party_relation'), N'parent_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[party_relation]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[party_relation] ADD 
	CONSTRAINT [PK_party_relation] PRIMARY KEY CLUSTERED 
	(
		[person_id], [parent_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): person_id, parent_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_COVERAGE_REFERENCE_PERSON]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[coverage_person]  
	DROP CONSTRAINT FK_COVERAGE_REFERENCE_PERSON
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_EMPLOYER_PERSON]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[employer_plan]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[employer_plan]  
	DROP CONSTRAINT FK_EMPLOYER_PERSON
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_cov_ppo_id]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_insured]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[coverage_person_insured]  
	DROP CONSTRAINT FK_cov_ppo_id
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_POLICY_P_REFERENCE_PERSON]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy_person]  
	DROP CONSTRAINT FK_POLICY_P_REFERENCE_PERSON
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_subgroup_person]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[subgroup]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[subgroup]  
	DROP CONSTRAINT FK_subgroup_person
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_AGENCY_REFERENCE_PERSON]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[agency]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[agency]  
	DROP CONSTRAINT FK_AGENCY_REFERENCE_PERSON
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_AGENT_REFERENCE_PERSON]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[agent]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[agent]  
	DROP CONSTRAINT FK_AGENT_REFERENCE_PERSON
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_aus_user_ref_582_person]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_user]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[aus_user]  
	DROP CONSTRAINT fk_aus_user_ref_582_person
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_COMPANY_REF_8638_PERSON]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[company]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[company]  
	DROP CONSTRAINT FK_COMPANY_REF_8638_PERSON
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_INSURED__REFERENCE_PERSON]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_benefits_person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[insured_benefits_person]  
	DROP CONSTRAINT FK_INSURED__REFERENCE_PERSON
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_PERSON_A_REF_9598_PERSON]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[person_address]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[person_address]  
	DROP CONSTRAINT FK_PERSON_A_REF_9598_PERSON
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_PERSON_A_REFERENCE_PERSON]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[person_alias]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[person_alias]  
	DROP CONSTRAINT FK_PERSON_A_REFERENCE_PERSON
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_PERSON_P_REF_6967_PERSON]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[person_phone]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[person_phone]  
	DROP CONSTRAINT FK_PERSON_P_REF_6967_PERSON
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_party_relation_person]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[party_relation]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[party_relation]  
	DROP CONSTRAINT FK_party_relation_person
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_party_relation_person1]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[party_relation]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[party_relation]  
	DROP CONSTRAINT FK_party_relation_person1
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_requirem_ref_574_person]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[requirement_information]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[requirement_information]  
	DROP CONSTRAINT fk_requirem_ref_574_person
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_tpa_person_id]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tpa]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tpa]  
	DROP CONSTRAINT fk_tpa_person_id
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[person]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[person]
	( 	
		[person_id] [int]  NOT NULL,
		[party_id] [int]  NULL,
		[last_name] [char]  (150)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[first_name] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[middle_name] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[birth_name] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[title] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[suffix] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[tax_id] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[tax_type_id] [char]  (4)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[birth_date] [datetime]  NULL,
		[sex] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[person_type_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[preferred_language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[email_address] [char]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[marital_status] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[client_id] [char]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[alt_email_address] [char]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[preferred_contact_mode] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[class_type] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[field1] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[field2] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[field3] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[field4] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[field5] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[note_collection_id] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[person]
	ALTER COLUMN [person_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'person'), N'person_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[person] ADD 
	CONSTRAINT [PK_PERSON] PRIMARY KEY CLUSTERED 
	(
		[person_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): person_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_client_id] ON [dbo].[person]([client_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_party_id] ON [dbo].[person]([party_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_person_dob] ON [dbo].[person]([birth_date]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [IX_person_last_name] ON [dbo].[person]([last_name]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_tax_id] ON [dbo].[person]([tax_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[person_address]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[person_address]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[person_address]
	( 	
		[person_id] [int]  NOT NULL,
		[address_type_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[city] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[country_id] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[postal_code] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[country_state_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[address_line1] [char]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[address_line2] [char]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[address_line3] [char]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[mailing_address_flag] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[person_address]
	ALTER COLUMN [person_id] [int] NOT NULL
	ALTER TABLE [dbo].[person_address]
	ALTER COLUMN [address_type_code] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'person_address'), N'person_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'person_address'), N'address_type_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[person_address]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[person_address] ADD 
	CONSTRAINT [PK_PERSON_ADDRESS] PRIMARY KEY CLUSTERED 
	(
		[person_id], [address_type_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): person_id, address_type_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[person_alias]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[person_alias]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[person_alias]
	( 	
		[person_name_id] [int]  NOT NULL,
		[person_id] [int]  NULL,
		[title] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[first_name] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[middle_name] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[last_name] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[suffix] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[person_alias]
	ALTER COLUMN [person_name_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'person_alias'), N'person_name_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[person_alias]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[person_alias] ADD 
	CONSTRAINT [PK_PERSON_ALIAS] PRIMARY KEY CLUSTERED 
	(
		[person_name_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): person_name_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[person_phone]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[person_phone]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[person_phone]
	( 	
		[person_id] [int]  NOT NULL,
		[phone_type_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[country_calling_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[area_code] [char]  (3)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[prefix] [char]  (3)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[suffix] [char]  (4)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[extension] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[pin] [char]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[is_preferred] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[person_phone]
	ALTER COLUMN [person_id] [int] NOT NULL
	ALTER TABLE [dbo].[person_phone]
	ALTER COLUMN [phone_type_code] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'person_phone'), N'person_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'person_phone'), N'phone_type_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[person_phone]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[person_phone] ADD 
	CONSTRAINT [PK_PERSON_PHONE] PRIMARY KEY CLUSTERED 
	(
		[person_id], [phone_type_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): person_id, phone_type_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[plan_benefit]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[plan_benefit]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[plan_benefit]
	( 	
		[language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[plan_code_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[benefit_id] [int]  NOT NULL,
		[g_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[name] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[plan_benefit]
	ALTER COLUMN [language_code] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[plan_benefit]
	ALTER COLUMN [plan_code_id] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[plan_benefit]
	ALTER COLUMN [benefit_id] [int] NOT NULL
GO


IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[plan_benefit]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE UNIQUE INDEX [IX_plan_benefit] ON [dbo].[plan_benefit]([language_code], [plan_code_id], [benefit_id], [g_number]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_EXTENDED_REFERENCE_POLICY]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[extended_property]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[extended_property]  
	DROP CONSTRAINT FK_EXTENDED_REFERENCE_POLICY
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_POLICY_A_REFERENCE_POLICY]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_assignment]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy_assignment]  
	DROP CONSTRAINT FK_POLICY_A_REFERENCE_POLICY
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_POLICY_C_REFERENCE_POLICY]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_coverage]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy_coverage]  
	DROP CONSTRAINT FK_POLICY_C_REFERENCE_POLICY
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_POLICY_L_REF_20862_POLICY]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_log]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy_log]  
	DROP CONSTRAINT FK_POLICY_L_REF_20862_POLICY
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_POLICY_P_REFERENCE_POLICY]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy_person]  
	DROP CONSTRAINT FK_POLICY_P_REFERENCE_POLICY
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_policy_s_ref_5389_policy]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_status_history]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy_status_history]  
	DROP CONSTRAINT fk_policy_s_ref_5389_policy
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_review_m_ref_278_policy]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[review_message]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[review_message]  
	DROP CONSTRAINT fk_review_m_ref_278_policy
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_policy_admin_status_policy]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_admin_status]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy_admin_status]  
	DROP CONSTRAINT FK_policy_admin_status_policy
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_policy_id_policy_syssearch]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[system_search_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[system_search_info]  
	DROP CONSTRAINT FK_policy_id_policy_syssearch
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_AUS_USER_REFERENCE_POLICY]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[aus_user_recent_files]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[aus_user_recent_files]  
	DROP CONSTRAINT FK_AUS_USER_REFERENCE_POLICY
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[policy]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[policy]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[policy]
	( 	
		[policy_id] [int]  NOT NULL,
		[company_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[policy_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[application_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[issue_date] [datetime]  NULL,
		[underwriter_id] [int]  NULL,
		[team_id] [int]  NULL,
		[application_date] [datetime]  NULL,
		[agent_signed_date] [datetime]  NULL,
		[policy_status_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[policy_status_date] [datetime]  NULL,
		[receive_date] [datetime]  NULL,
		[policy_status] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[dirty_flag] [int]  NULL,
		[current_edit_user_id] [int]  NULL,
		[current_edit_date] [datetime]  NULL,
		[payment_mode_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[last_underwrite_date] [datetime]  NULL,
		[allow_aus_approval] [int]  NULL,
		[final_action_date] [datetime]  NULL,
		[reinsurance_indicator] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[reinsurance_vendor_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[final_action_note_id] [int]  NULL,
		[updated_by] [int]  NULL,
		[updated_date] [datetime]  NULL,
		[added_by] [int]  NULL,
		[final_action_by] [int]  NULL,
		[added_date] [datetime]  NULL,
		[cwa_amount] [numeric]  NULL,
		[cwa_date] [datetime]  NULL,
		[payment_method_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[priority] [int]  NULL,
		[reason_text] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[final_action_note] [varchar]  (2000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[bank_rounting_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[bank_account_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[credit_card_type] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[credit_card_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[credit_card_expiration_year] [char]  (4)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[credit_card_expiration_month] [char]  (2)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[list_bill_location] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[list_bill_employee_id] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[bill_day] [int]  NULL,
		[marketing_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[mode_premium] [numeric]  NULL,
		[requested_issue_date] [datetime]  NULL,
		[version] [int]  NULL,
		[case_group_id] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[service_associate_id] [int]  NULL,
		[association_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[tpa_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[amex_account] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[performed_jet_issue_flag] [int]  NULL,
		[source_info] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[lead_number_id] [char]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[distributor_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[alternate_case_id] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[cedent_policy_number] [char]  (35)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[cedent_company_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[cedent_fax_number] [varchar]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[cedent_underwriter_id] [int]  NULL,
		[cedent_contact_id] [int]  NULL,
		[cedent_date_sent] [datetime]  NULL,
		[international_or_domestic] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[idb_flag] [int]  NULL,
		[currency_code] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[preferred_language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[partner_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[application_type] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[bank_account_type] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[back_date_policy] [int]  NULL,
		[agent_staff_code] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[agent_team_code] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[commission_override] [int]  NULL,
		[ppo_network] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[employer_id] [int]  NULL,
		[group_indicator] [int]  NULL,
		[product_type] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[trust_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[policy]
	ALTER COLUMN [policy_id] [int] NOT NULL
	ALTER TABLE [dbo].[policy]
	ALTER COLUMN [policy_number] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'policy'), N'policy_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy] ADD 
	CONSTRAINT [PK_POLICY] PRIMARY KEY CLUSTERED 
	(
		[policy_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): policy_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_pol_case_grp] ON [dbo].[policy]([case_group_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_pol_sa_id] ON [dbo].[policy]([service_associate_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_pol_stat_code] ON [dbo].[policy]([policy_status_code]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_pol_stat_user] ON [dbo].[policy]([policy_status_code], [underwriter_id], [service_associate_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_pol_un_id] ON [dbo].[policy]([underwriter_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [IX_policy_priority] ON [dbo].[policy]([priority]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_policy_receive_date] ON [dbo].[policy]([receive_date]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE UNIQUE INDEX [policy_number_ak] ON [dbo].[policy]([policy_number]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [update_date_ak] ON [dbo].[policy]([updated_date]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[policy_admin_status]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[policy_admin_status]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[policy_admin_status]
	( 	
		[policy_id] [int]  NOT NULL,
		[policy_status] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[issue_date] [datetime]  NULL,
		[inforce_date] [datetime]  NULL,
		[agent_status] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[cwa_amount] [decimal]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[policy_admin_status]
	ALTER COLUMN [policy_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'policy_admin_status'), N'policy_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_admin_status]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_admin_status] ADD 
	CONSTRAINT [PK_policy_admin_status] PRIMARY KEY CLUSTERED 
	(
		[policy_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): policy_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[policy_assignment]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[policy_assignment]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[policy_assignment]
	( 	
		[policy_id] [int]  NULL,
		[user_id] [int]  NULL,
		[assignment_role] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[assign_date] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_COVERAGE_REF_POLICY_C3]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[coverage_person]  
	DROP CONSTRAINT FK_COVERAGE_REF_POLICY_C3
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_COVERAGE_REFERENCE_POLICY_C]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_subaccounts]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[coverage_subaccounts]  
	DROP CONSTRAINT FK_COVERAGE_REFERENCE_POLICY_C
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_COVERAGE_REF_POLICY_C2]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_benefits]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[coverage_benefits]  
	DROP CONSTRAINT FK_COVERAGE_REF_POLICY_C2
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[policy_coverage]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[policy_coverage]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[policy_coverage]
	( 	
		[policy_coverage_id] [int]  NOT NULL,
		[policy_id] [int]  NULL,
		[plan_code_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[death_benefit_option_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[purpose_of_coverage_id] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[coverage_type] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[indicator_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[amount] [numeric]  NULL,
		[coverage_status] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[premium_mode] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[investment_objective] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[pref_date_of_withdrawl] [datetime]  NULL,
		[planned_premium] [numeric]  NULL,
		[initial_planned_premium] [numeric]  NULL,
		[equivalent_age] [int]  NULL,
		[can_take_final_action_flag] [int]  NULL,
		[temp_flat_extra_period] [int]  NULL,
		[perm_flat_extra_amount] [numeric]  NULL,
		[temp_flat_extra_amount] [numeric]  NULL,
		[flat_extra_reason] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[temp_table_rating] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[temp_table_reason] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[perm_table_rating] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[perm_table_reason] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[dividend_option] [int]  NULL,
		[approved_amount] [numeric]  NULL,
		[benefit_amount_basis] [int]  NULL,
		[modal_premium_amount] [numeric]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[policy_coverage]
	ALTER COLUMN [policy_coverage_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'policy_coverage'), N'policy_coverage_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_coverage]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_coverage] ADD 
	CONSTRAINT [PK_POLICY_COVERAGE] PRIMARY KEY CLUSTERED 
	(
		[policy_coverage_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): policy_coverage_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_coverage]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_pol_cov_pol_id] ON [dbo].[policy_coverage]([policy_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[policy_extract]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[policy_extract]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[policy_extract]
	( 	
		[policy_id] [int]  NOT NULL,
		[company_code] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[policy_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[will_update] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[life_pro_crc] [char]  (8)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[nailba_100_crc] [char]  (8)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[nailba_200_crc] [char]  (8)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[policy_extract]
	ALTER COLUMN [policy_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'policy_extract'), N'policy_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_extract]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_extract] ADD 
	CONSTRAINT [PK_POLICY_EXTRACT] PRIMARY KEY CLUSTERED 
	(
		[policy_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): policy_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[policy_log]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[policy_log]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[policy_log]
	( 	
		[policy_log_id] [int]  NOT NULL,
		[policy_id] [int]  NOT NULL,
		[log_text] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[user_id] [int]  NULL,
		[log_date] [datetime]  NOT NULL,
		[log_reason_type] [int]  NULL,
		[log_reason_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[policy_log]
	ALTER COLUMN [policy_log_id] [int] NOT NULL
	ALTER TABLE [dbo].[policy_log]
	ALTER COLUMN [policy_id] [int] NOT NULL
	ALTER TABLE [dbo].[policy_log]
	ALTER COLUMN [log_date] [datetime] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'policy_log'), N'policy_log_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_log]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_log] ADD 
	CONSTRAINT [PK_policy_log] PRIMARY KEY CLUSTERED 
	(
		[policy_log_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): policy_log_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_log]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_policy_log] ON [dbo].[policy_log]([policy_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_PRIMARY_REFERENCE_ID]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_person_insured]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy_person_insured]  
	DROP CONSTRAINT FK_PRIMARY_REFERENCE_ID
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_POLICY_PERSON_AGENT]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_person_agent]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy_person_agent]  
	DROP CONSTRAINT FK_POLICY_PERSON_AGENT
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_POLICY_P_REFERENCE_POLICY_P]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_person_insured]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy_person_insured]  
	DROP CONSTRAINT FK_POLICY_P_REFERENCE_POLICY_P
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_policy_person_retro_info_pp]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_person_retro_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy_person_retro_info]  
	DROP CONSTRAINT FK_policy_person_retro_info_pp
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[policy_person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[policy_person]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[policy_person]
	( 	
		[policy_person_id] [int]  NOT NULL,
		[policy_id] [int]  NULL,
		[person_id] [int]  NULL,
		[role_id] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[relationship_to_insured] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[policy_person]
	ALTER COLUMN [policy_person_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'policy_person'), N'policy_person_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_person] ADD 
	CONSTRAINT [PK_POLICY_PERSON] PRIMARY KEY CLUSTERED 
	(
		[policy_person_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): policy_person_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_pol_pers_comp] ON [dbo].[policy_person]([policy_person_id], [policy_id], [person_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_policy_person] ON [dbo].[policy_person]([policy_id], [person_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [IX_policy_person_personid] ON [dbo].[policy_person]([person_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_person]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [IX_policy_person_policyid] ON [dbo].[policy_person]([policy_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[policy_person_agent]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[policy_person_agent]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[policy_person_agent]
	( 	
		[policy_person_id] [int]  NOT NULL,
		[agency_id] [int]  NULL,
		[commission_split] [int]  NULL,
		[commission_option] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[market_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[agent_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[firm_name] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[level5_code] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[policy_person_agent]
	ALTER COLUMN [policy_person_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'policy_person_agent'), N'policy_person_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_person_agent]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_person_agent] ADD 
	CONSTRAINT [PK_POLICY_PERSON_AGENT] PRIMARY KEY CLUSTERED 
	(
		[policy_person_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): policy_person_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_person_agent]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_agent_num2] ON [dbo].[policy_person_agent]([agent_number]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_form_ref_5982_insured]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_application_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[insured_application_info]  
	DROP CONSTRAINT fk_form_ref_5982_insured
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_MIB_CODI_REF_3419_INSURED]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[mib_coding]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[mib_coding]  
	DROP CONSTRAINT FK_MIB_CODI_REF_3419_INSURED
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_notes_policy_person_insured]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[notes]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[notes]  
	DROP CONSTRAINT FK_notes_policy_person_insured
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_paramed_ref_5986_insured]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[paramed]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[paramed]  
	DROP CONSTRAINT fk_paramed_ref_5986_insured
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_related_pol_pers_insured]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[related_policies]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[related_policies]  
	DROP CONSTRAINT FK_related_pol_pers_insured
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_review_m_ref_13931_insured]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[review_message]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[review_message]  
	DROP CONSTRAINT fk_review_m_ref_13931_insured
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_COVERAGE_REFERENCE_POLICY_P]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_person_insured]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[coverage_person_insured]  
	DROP CONSTRAINT FK_COVERAGE_REFERENCE_POLICY_P
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_DOC_APPLICANT_ID]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[doc_mgmt_history]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[doc_mgmt_history]  
	DROP CONSTRAINT FK_DOC_APPLICANT_ID
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[policy_person_insured]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[policy_person_insured]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[policy_person_insured]
	( 	
		[policy_person_id] [int]  NOT NULL,
		[signed_state_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[underwriting_amount] [numeric]  NULL,
		[issue_age] [int]  NULL,
		[primary_insured_flag] [int]  NULL,
		[aviation_exclusion] [int]  NULL,
		[add_uw_amt] [numeric]  NULL,
		[applicant_status] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[applicant_status_date] [datetime]  NULL,
		[is_member] [int]  NULL,
		[allow_auto_approval] [int]  NULL,
		[adverse_history] [int]  NULL,
		[und_allow_auto_approval] [int]  NULL,
		[und_allow_jet_issue] [int]  NULL,
		[und_allow_auto_ordering] [int]  NULL,
		[added_date] [datetime]  NULL,
		[added_by] [int]  NULL,
		[reopen_date] [datetime]  NULL,
		[retro_type] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[aviation_flag] [int]  NULL,
		[entertainer_flag] [int]  NULL,
		[sports_flag] [int]  NULL,
		[foreign_flag] [int]  NULL,
		[additional_in_force] [int]  NULL,
		[signed_country_id] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[rx_threshold] [int]  NULL,
		[primary_reference_id] [int]  NULL,
		[medical_coverage_indicator] [int]  NULL,
		[dental_coverage_indicator] [int]  NULL,
		[vision_coverage_indicator] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[policy_person_insured]
	ALTER COLUMN [policy_person_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'policy_person_insured'), N'policy_person_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_person_insured]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_person_insured] ADD 
	CONSTRAINT [PK_POLICY_PERSON_INSURED] PRIMARY KEY CLUSTERED 
	(
		[policy_person_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): policy_person_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_person_insured]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_pol_pers_ins_stat] ON [dbo].[policy_person_insured]([applicant_status]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[policy_person_retro_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[policy_person_retro_info]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[policy_person_retro_info]
	( 	
		[retro_info_id] [int]  NOT NULL,
		[policy_person_id] [int]  NOT NULL,
		[retro_type] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[company_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[date_sent] [datetime]  NULL,
		[papers_sent] [datetime]  NULL,
		[date_replied] [datetime]  NULL,
		[action] [char]  (25)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[rating] [char]  (25)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[amount] [int]  NULL,
		[comments] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[product] [char]  (11)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[policy_person_retro_info]
	ALTER COLUMN [retro_info_id] [int] NOT NULL
	ALTER TABLE [dbo].[policy_person_retro_info]
	ALTER COLUMN [policy_person_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'policy_person_retro_info'), N'retro_info_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_person_retro_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_person_retro_info] ADD 
	CONSTRAINT [PK_policy_person_retro_info] PRIMARY KEY CLUSTERED 
	(
		[retro_info_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): retro_info_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_person_retro_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_retro_pol_pers] ON [dbo].[policy_person_retro_info]([policy_person_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[policy_status_history]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[policy_status_history]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[policy_status_history]
	( 	
		[policy_status_history_id] [numeric]  NOT NULL,
		[policy_id] [int]  NULL,
		[policy_status_id] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[user_id] [int]  NULL,
		[effective_date] [datetime]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[policy_status_history]
	ALTER COLUMN [policy_status_history_id] [numeric] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'policy_status_history'), N'policy_status_history_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_status_history]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_status_history] ADD 
	CONSTRAINT [PK_POLICY_STATUS_HISTORY] PRIMARY KEY CLUSTERED 
	(
		[policy_status_history_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): policy_status_history_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_insured_req_provider]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[insured_requirement]  
	DROP CONSTRAINT FK_insured_req_provider
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_tl_requirement_provider]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_requirement]  
	DROP CONSTRAINT FK_tl_requirement_provider
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[provider]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[provider]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[provider]
	( 	
		[provider] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[provider_class] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[evidence_type] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[evidence_code] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[us_vendor] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[non_us_vendor] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[provider_type] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[caseone_schedulenow] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[provider]
	ALTER COLUMN [provider] [char]  (20) NOT NULL
	ALTER TABLE [dbo].[provider]
	ALTER COLUMN [evidence_type] [char]  (50) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'provider'), N'provider', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'provider'), N'evidence_type', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[provider]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[provider] ADD 
	CONSTRAINT [PK_provider] PRIMARY KEY CLUSTERED 
	(
		[provider], [evidence_type]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): provider, evidence_type do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_provider_order]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[insured_requirement]  
	DROP CONSTRAINT FK_provider_order
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[provider_order]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[provider_order]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[provider_order]
	( 	
		[provider_order_id] [int]  NOT NULL,
		[ordered_date] [datetime]  NULL,
		[closed_date] [datetime]  NULL,
		[tracking_number] [char]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[alternate_id] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[provider_order]
	ALTER COLUMN [provider_order_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'provider_order'), N'provider_order_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[provider_order]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[provider_order] ADD 
	CONSTRAINT [PK_provider_order] PRIMARY KEY CLUSTERED 
	(
		[provider_order_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): provider_order_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[provider_order]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_tracking_number] ON [dbo].[provider_order]([tracking_number]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[reinsurance_vendor]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[reinsurance_vendor]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[reinsurance_vendor]
	( 	
		[reinsurance_vendor_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[name] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[external_code] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[reinsurance_vendor]
	ALTER COLUMN [reinsurance_vendor_code] [char]  (10) NOT NULL
GO


if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[related_policies]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[related_policies]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[related_policies]
	( 	
		[policy_person_id] [int]  NOT NULL,
		[sequence_number] [int]  NOT NULL,
		[company] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[policy_number] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[status] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[amount] [numeric]  NULL,
		[replacement_flag] [int]  NULL,
		[replacement_date] [datetime]  NULL,
		[comment_text] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[relationship] [varchar]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[relation_type] [int]  NULL,
		[adb_amount] [numeric]  NULL,
		[issue_date] [datetime]  NULL,
		[purpose_of_coverage] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[underwrite_flag] [int]  NULL,
		[line_of_business] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[benefit_period] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[elimination_period] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[employer_paid_percent] [int]  NULL,
		[replacement_type] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[related_policies]
	ALTER COLUMN [policy_person_id] [int] NOT NULL
	ALTER TABLE [dbo].[related_policies]
	ALTER COLUMN [sequence_number] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'related_policies'), N'policy_person_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'related_policies'), N'sequence_number', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[related_policies]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[related_policies] ADD 
	CONSTRAINT [PK_RELATED_POLICIES] PRIMARY KEY CLUSTERED 
	(
		[policy_person_id], [sequence_number]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): policy_person_id, sequence_number do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_requirem_ref_15525_requirem]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[requirement_information]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[requirement_information]  
	DROP CONSTRAINT fk_requirem_ref_15525_requirem
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[requirement_info_request]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[requirement_info_request]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[requirement_info_request]
	( 	
		[requirement_request_id] [int]  NOT NULL,
		[requested_by_id] [int]  NULL,
		[date_requested] [datetime]  NULL,
		[status] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[received_date] [datetime]  NULL,
		[vendor_id] [int]  NULL,
		[followup_date] [datetime]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[requirement_info_request]
	ALTER COLUMN [requirement_request_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'requirement_info_request'), N'requirement_request_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[requirement_info_request]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[requirement_info_request] ADD 
	CONSTRAINT [PK_REQUIREMENT_INFO_REQUEST] PRIMARY KEY CLUSTERED 
	(
		[requirement_request_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): requirement_request_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_INSURED__REFERENCE_REQUIREM]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_application_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[insured_application_info]  
	DROP CONSTRAINT FK_INSURED__REFERENCE_REQUIREM
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_insured_req_req_information]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[insured_requirement]  
	DROP CONSTRAINT FK_insured_req_req_information
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_paramed_ref_602_requirem]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[paramed]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[paramed]  
	DROP CONSTRAINT fk_paramed_ref_602_requirem
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_form_instance_reqt_info]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_instance]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[form_instance]  
	DROP CONSTRAINT FK_form_instance_reqt_info
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_evidence_status_req_info]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[evidence_status]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[evidence_status]  
	DROP CONSTRAINT FK_evidence_status_req_info
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_family_h_ref_8276_requirem]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[family_history]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[family_history]  
	DROP CONSTRAINT fk_family_h_ref_8276_requirem
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_lab_head_ref_542_requirem]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[lab_header]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[lab_header]  
	DROP CONSTRAINT fk_lab_head_ref_542_requirem
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_mib_head_ref_559_requirem]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[mib_header]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[mib_header]  
	DROP CONSTRAINT fk_mib_head_ref_559_requirem
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_mvr_head_ref_9647_requirem]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[mvr_header]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[mvr_header]  
	DROP CONSTRAINT fk_mvr_head_ref_9647_requirem
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_tobacco_ref_8267_requirem]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tobacco]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tobacco]  
	DROP CONSTRAINT fk_tobacco_ref_8267_requirem
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[requirement_information]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[requirement_information]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[requirement_information]
	( 	
		[requirement_information_id] [int]  NOT NULL,
		[person_id] [int]  NULL,
		[create_date] [datetime]  NULL,
		[match_method] [int]  NULL,
		[status] [char]  (2)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[vendor_id] [char]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[manual_or_electronic_entry] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[expiration_date] [datetime]  NULL,
		[added_by] [int]  NULL,
		[requirement_type_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[requirement_request_id] [int]  NULL,
		[lifespan_days] [int]  NULL,
		[insured_requirement_id] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[requirement_information]
	ALTER COLUMN [requirement_information_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'requirement_information'), N'requirement_information_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[requirement_information]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[requirement_information] ADD 
	CONSTRAINT [PK_REQUIREMENT_INFORMATION] PRIMARY KEY CLUSTERED 
	(
		[requirement_information_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): requirement_information_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[requirement_information]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_req_inf_ins_req] ON [dbo].[requirement_information]([insured_requirement_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[requirement_match]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[requirement_match]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[requirement_match]
	( 	
		[requirement_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[lab_specimen_id] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[requirement_match]
	ALTER COLUMN [requirement_code] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[requirement_match]
	ALTER COLUMN [lab_specimen_id] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'requirement_match'), N'requirement_code', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'requirement_match'), N'lab_specimen_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[requirement_match]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[requirement_match] ADD 
	CONSTRAINT [PK_requirement_match] PRIMARY KEY CLUSTERED 
	(
		[requirement_code], [lab_specimen_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): requirement_code, lab_specimen_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_insured_req_review_message]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[insured_requirement]  
	DROP CONSTRAINT FK_insured_req_review_message
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[review_message]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[review_message]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[review_message]
	( 	
		[review_message_id] [int]  NOT NULL,
		[note_id] [int]  NULL,
		[policy_id] [int]  NULL,
		[sequence_number] [int]  NULL,
		[message_type] [char]  (1)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[message] [varchar]  (1000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[origin_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[checkoff_flag] [int]  NULL,
		[message_number] [int]  NULL,
		[added_date] [datetime]  NULL,
		[check_off_date] [datetime]  NULL,
		[checked_off_by] [int]  NULL,
		[policy_person_id] [int]  NULL,
		[rule_name] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[review_message_comment] [varchar]  (1000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[alt_message] [varchar]  (1000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[alt_comment] [varchar]  (1000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[user_role_type] [char]  (2)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[review_message]
	ALTER COLUMN [review_message_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'review_message'), N'review_message_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[review_message]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[review_message] ADD 
	CONSTRAINT [PK_REVIEW_MESSAGE] PRIMARY KEY CLUSTERED 
	(
		[review_message_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): review_message_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[review_message]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [IX_review_message_policy_ins] ON [dbo].[review_message]([policy_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[review_message]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [IX_review_message_policy_rule] ON [dbo].[review_message]([policy_id], [rule_name]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[review_message]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_rvw_msg_type] ON [dbo].[review_message]([message_type], [user_role_type]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[review_message]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_rvw_msg_user_role] ON [dbo].[review_message]([user_role_type]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[review_message]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_rvwmsg_pol_pers_id] ON [dbo].[review_message]([policy_person_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[sequence_number]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[sequence_number]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[sequence_number]
	( 	
		[id] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[next_num] [int]  NOT NULL,
		[prefix] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[sequence_number]
	ALTER COLUMN [id] [char]  (5) NOT NULL
	ALTER TABLE [dbo].[sequence_number]
	ALTER COLUMN [next_num] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'sequence_number'), N'id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[sequence_number]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[sequence_number] ADD 
	CONSTRAINT [pk_sequence_number] PRIMARY KEY CLUSTERED 
	(
		[id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[service_associate_range]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[service_associate_range]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[service_associate_range]
	( 	
		[service_associate_login_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[from_string] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[to_string] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[service_associate_range]
	ALTER COLUMN [service_associate_login_id] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[service_associate_range]
	ALTER COLUMN [from_string] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[service_associate_range]
	ALTER COLUMN [to_string] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'service_associate_range'), N'service_associate_login_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'service_associate_range'), N'from_string', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[service_associate_range]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[service_associate_range] ADD 
	CONSTRAINT [PK_service_associate_range] PRIMARY KEY CLUSTERED 
	(
		[service_associate_login_id], [from_string]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): service_associate_login_id, from_string do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[service_associate_range]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE UNIQUE INDEX [IX_service_associate_range] ON [dbo].[service_associate_range]([from_string], [to_string]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_company_subgroup]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[company]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[company]  
	DROP CONSTRAINT FK_company_subgroup
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[subgroup]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[subgroup]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[subgroup]
	( 	
		[sub_group_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[company_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[person_id] [int]  NOT NULL,
		[subgroup_id] [int]  NOT NULL,
		[is_using_company_address] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[subgroup]
	ALTER COLUMN [sub_group_code] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[subgroup]
	ALTER COLUMN [company_code] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[subgroup]
	ALTER COLUMN [person_id] [int] NOT NULL
	ALTER TABLE [dbo].[subgroup]
	ALTER COLUMN [subgroup_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'subgroup'), N'company_code', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'subgroup'), N'sub_group_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[subgroup]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[subgroup] ADD 
	CONSTRAINT [IX_subgroup_company] UNIQUE NONCLUSTERED 
	(
		[company_code], [sub_group_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): company_code, sub_group_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'subgroup'), N'person_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[subgroup]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[subgroup] ADD 
	CONSTRAINT [IX_subgroup_person] UNIQUE NONCLUSTERED 
	(
		[person_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): person_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'subgroup'), N'subgroup_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[subgroup]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[subgroup] ADD 
	CONSTRAINT [PK_subgroup] PRIMARY KEY CLUSTERED 
	(
		[subgroup_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): subgroup_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[system_search_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[system_search_info]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[system_search_info]
	( 	
		[system_search_id] [int]  NOT NULL,
		[policy_id] [int]  NULL,
		[system_name] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[policy_number] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[cedent_company] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[decision_amount] [numeric]  NULL,
		[action] [char]  (25)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[action_date] [datetime]  NULL,
		[retained_amount] [numeric]  NULL,
		[retro_amount] [numeric]  NULL,
		[rating] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[smoker] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[policy_date] [datetime]  NULL,
		[policy_status] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[uw_basis] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[net_amount_at_risk] [numeric]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[system_search_info]
	ALTER COLUMN [system_search_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'system_search_info'), N'system_search_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[system_search_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[system_search_info] ADD 
	CONSTRAINT [PK_system_search_info] PRIMARY KEY CLUSTERED 
	(
		[system_search_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): system_search_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TR_AGE_F_REF_4178_TA_AGE_B]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tr_age_face_amount_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tr_age_face_amount_requirement]  
	DROP CONSTRAINT FK_TR_AGE_F_REF_4178_TA_AGE_B
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ta_age_band]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[ta_age_band]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[ta_age_band]
	( 	
		[rulebook_id] [int]  NOT NULL,
		[age_band_seq_no] [int]  NOT NULL,
		[age_from] [numeric]  NULL,
		[age_to] [numeric]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[ta_age_band]
	ALTER COLUMN [rulebook_id] [int] NOT NULL
	ALTER TABLE [dbo].[ta_age_band]
	ALTER COLUMN [age_band_seq_no] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'ta_age_band'), N'rulebook_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'ta_age_band'), N'age_band_seq_no', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[ta_age_band]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[ta_age_band] ADD 
	CONSTRAINT [PK_TA_AGE_BAND] PRIMARY KEY CLUSTERED 
	(
		[rulebook_id], [age_band_seq_no]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): rulebook_id, age_band_seq_no do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ta_band_level]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[ta_band_level]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[ta_band_level]
	( 	
		[band_level_id] [int]  NOT NULL,
		[sequence_number] [int]  NOT NULL,
		[value_from] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[value_to] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[point_id] [int]  NULL,
		[next_band_level_id] [numeric]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[ta_band_level]
	ALTER COLUMN [band_level_id] [int] NOT NULL
	ALTER TABLE [dbo].[ta_band_level]
	ALTER COLUMN [sequence_number] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'ta_band_level'), N'band_level_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'ta_band_level'), N'sequence_number', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[ta_band_level]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[ta_band_level] ADD 
	CONSTRAINT [PK_TA_BAND_LEVEL] PRIMARY KEY CLUSTERED 
	(
		[band_level_id], [sequence_number]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): band_level_id, sequence_number do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TR_AGE_F_REF_4185_TA_FACE_]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tr_age_face_amount_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tr_age_face_amount_requirement]  
	DROP CONSTRAINT FK_TR_AGE_F_REF_4185_TA_FACE_
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ta_face_amount_band]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[ta_face_amount_band]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[ta_face_amount_band]
	( 	
		[rulebook_id] [int]  NOT NULL,
		[face_amount_seq_no] [int]  NOT NULL,
		[face_amount_from] [numeric]  NULL,
		[face_amount_to] [numeric]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[ta_face_amount_band]
	ALTER COLUMN [rulebook_id] [int] NOT NULL
	ALTER TABLE [dbo].[ta_face_amount_band]
	ALTER COLUMN [face_amount_seq_no] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'ta_face_amount_band'), N'rulebook_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'ta_face_amount_band'), N'face_amount_seq_no', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[ta_face_amount_band]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[ta_face_amount_band] ADD 
	CONSTRAINT [PK_TA_FACE_AMOUNT_BAND] PRIMARY KEY CLUSTERED 
	(
		[rulebook_id], [face_amount_seq_no]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): rulebook_id, face_amount_seq_no do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TA_BAND__REF_570_TA_POINT]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[ta_band_level]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[ta_band_level]  
	DROP CONSTRAINT FK_TA_BAND__REF_570_TA_POINT
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ta_point_allocation]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[ta_point_allocation]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[ta_point_allocation]
	( 	
		[point_id] [int]  NOT NULL,
		[can_points_from] [numeric]  NULL,
		[can_points_to] [numeric]  NULL,
		[cad_points_from] [numeric]  NULL,
		[cad_points_to] [numeric]  NULL,
		[ao_points_from] [numeric]  NULL,
		[ao_points_to] [numeric]  NULL,
		[kickout_flag] [int]  NULL,
		[rate_class] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[smoking_rate_class] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[review_message] [varchar]  (1000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[assign_points] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[ta_point_allocation]
	ALTER COLUMN [point_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'ta_point_allocation'), N'point_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[ta_point_allocation]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[ta_point_allocation] ADD 
	CONSTRAINT [PK_TA_POINT_ALLOCATION] PRIMARY KEY CLUSTERED 
	(
		[point_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): point_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_UNDERWRI_REF_5297_TA_POINT]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[underwriting_detail]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[underwriting_detail]  
	DROP CONSTRAINT FK_UNDERWRI_REF_5297_TA_POINT
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ta_point_rule]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[ta_point_rule]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[ta_point_rule]
	( 	
		[rulebook_id] [int]  NOT NULL,
		[rule_name] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[first_band_id] [int]  NULL,
		[male_can_points] [numeric]  NULL,
		[male_cad_points] [numeric]  NULL,
		[male_ao_points] [numeric]  NULL,
		[female_can_points] [numeric]  NULL,
		[female_cad_points] [numeric]  NULL,
		[female_ao_points] [numeric]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[ta_point_rule]
	ALTER COLUMN [rulebook_id] [int] NOT NULL
	ALTER TABLE [dbo].[ta_point_rule]
	ALTER COLUMN [rule_name] [char]  (50) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'ta_point_rule'), N'rulebook_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'ta_point_rule'), N'rule_name', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[ta_point_rule]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[ta_point_rule] ADD 
	CONSTRAINT [PK_TA_POINT_RULE] PRIMARY KEY CLUSTERED 
	(
		[rulebook_id], [rule_name]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): rulebook_id, rule_name do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ta_rate_table_class]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[ta_rate_table_class]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[ta_rate_table_class]
	( 	
		[rulebook_id] [int]  NOT NULL,
		[sequence_no] [numeric]  NOT NULL,
		[description] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[smoking_class] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[allow_aus_approval] [int]  NULL,
		[male_can_pct] [numeric]  NULL,
		[male_cad_pct] [numeric]  NULL,
		[male_ao_pct] [numeric]  NULL,
		[female_can_pct] [numeric]  NULL,
		[female_cad_pct] [numeric]  NULL,
		[female_ao_pct] [numeric]  NULL,
		[comment_text] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[alt_description] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[ta_rate_table_class]
	ALTER COLUMN [rulebook_id] [int] NOT NULL
	ALTER TABLE [dbo].[ta_rate_table_class]
	ALTER COLUMN [sequence_no] [numeric] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'ta_rate_table_class'), N'rulebook_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'ta_rate_table_class'), N'sequence_no', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[ta_rate_table_class]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[ta_rate_table_class] ADD 
	CONSTRAINT [PK_TA_RATE_TABLE_CLASS] PRIMARY KEY CLUSTERED 
	(
		[rulebook_id], [sequence_no]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): rulebook_id, sequence_no do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ta_rule_option]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[ta_rule_option]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[ta_rule_option]
	( 	
		[rule_id] [numeric]  NOT NULL,
		[option_type] [int]  NOT NULL,
		[sequence_no] [numeric]  NOT NULL,
		[review_message] [varchar]  (1000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[comment_text] [varchar]  (1000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[requirement_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[requirement_group_id] [int]  NULL,
		[rate_class] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[rate_class_smoking] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[is_checkable] [int]  NULL,
		[decline_policy_flag] [int]  NULL,
		[is_smoker_flag] [int]  NULL,
		[points] [int]  NULL,
		[priority] [int]  NULL,
		[allow_jet_issue] [int]  NULL,
		[allow_auto_approval] [int]  NULL,
		[allow_auto_ordering] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[ta_rule_option]
	ALTER COLUMN [rule_id] [numeric] NOT NULL
	ALTER TABLE [dbo].[ta_rule_option]
	ALTER COLUMN [option_type] [int] NOT NULL
	ALTER TABLE [dbo].[ta_rule_option]
	ALTER COLUMN [sequence_no] [numeric] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'ta_rule_option'), N'rule_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'ta_rule_option'), N'option_type', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'ta_rule_option'), N'sequence_no', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[ta_rule_option]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[ta_rule_option] ADD 
	CONSTRAINT [PK_TA_RULE_OPTION] PRIMARY KEY CLUSTERED 
	(
		[rule_id], [option_type], [sequence_no]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): rule_id, option_type, sequence_no do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TA_BAND__REF_566_TE_BAND]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[ta_band_level]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[ta_band_level]  
	DROP CONSTRAINT FK_TA_BAND__REF_566_TE_BAND
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TA_POINT_REF_574_TE_BAND]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[ta_point_rule]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[ta_point_rule]  
	DROP CONSTRAINT FK_TA_POINT_REF_574_TE_BAND
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[te_band]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[te_band]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[te_band]
	( 	
		[band_id] [int]  NOT NULL,
		[based_on] [char]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[te_band]
	ALTER COLUMN [band_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'te_band'), N'band_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[te_band]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[te_band] ADD 
	CONSTRAINT [PK_TE_BAND] PRIMARY KEY CLUSTERED 
	(
		[band_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): band_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[te_case_assignment]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[te_case_assignment]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[te_case_assignment]
	( 	
		[user_id] [int]  NULL,
		[person_id] [int]  NULL,
		[criteria_from] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[criteria_to] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[te_rule]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[te_rule]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[te_rule]
	( 	
		[rule_id] [int]  NOT NULL,
		[rule_name] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[rulebook_id] [int]  NULL,
		[description] [varchar]  (1000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[is_active] [int]  NULL,
		[added_date] [datetime]  NULL,
		[added_by] [int]  NULL,
		[update_date] [datetime]  NULL,
		[updated_by] [int]  NULL,
		[rule_text] [varchar]  (2000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[te_rule]
	ALTER COLUMN [rule_id] [int] NOT NULL
	ALTER TABLE [dbo].[te_rule]
	ALTER COLUMN [rule_name] [char]  (50) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'te_rule'), N'rulebook_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'te_rule'), N'rule_name', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[te_rule]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[te_rule] ADD 
	CONSTRAINT [AK_IX_RULE_NAME_TE_RULE] UNIQUE NONCLUSTERED 
	(
		[rulebook_id], [rule_name]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): rulebook_id, rule_name do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'te_rule'), N'rule_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[te_rule]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[te_rule] ADD 
	CONSTRAINT [PK_TE_RULE] PRIMARY KEY CLUSTERED 
	(
		[rule_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): rule_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TA_AGE_B_REF_4168_TE_RULEB]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[ta_age_band]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[ta_age_band]  
	DROP CONSTRAINT FK_TA_AGE_B_REF_4168_TE_RULEB
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TA_FACE__REF_4164_TE_RULEB]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[ta_face_amount_band]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[ta_face_amount_band]  
	DROP CONSTRAINT FK_TA_FACE__REF_4164_TE_RULEB
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TA_POINT_REF_534_TE_RULEB]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[ta_point_rule]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[ta_point_rule]  
	DROP CONSTRAINT FK_TA_POINT_REF_534_TE_RULEB
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TA_RATE__REF_530_TE_RULEB]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[ta_rate_table_class]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[ta_rate_table_class]  
	DROP CONSTRAINT FK_TA_RATE__REF_530_TE_RULEB
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TE_RULE_REFERENCE_TE_RULEB]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[te_rule]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[te_rule]  
	DROP CONSTRAINT FK_TE_RULE_REFERENCE_TE_RULEB
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TR_PLAN__REFERENCE_TE_RULEB]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tr_plan_code_rulebook]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tr_plan_code_rulebook]  
	DROP CONSTRAINT FK_TR_PLAN__REFERENCE_TE_RULEB
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_te_rulebook_form_te_rb]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[te_rulebook_form]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[te_rulebook_form]  
	DROP CONSTRAINT FK_te_rulebook_form_te_rb
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[te_rulebook]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[te_rulebook]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[te_rulebook]
	( 	
		[rulebook_id] [int]  NOT NULL,
		[rulebook_name] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[effective_date] [datetime]  NULL,
		[is_active] [int]  NULL,
		[non_smoking_classes] [int]  NULL,
		[added_date] [datetime]  NULL,
		[added_by] [int]  NULL,
		[update_date] [datetime]  NULL,
		[updated_by] [int]  NULL,
		[age_calc_rule] [int]  NULL,
		[rulebook_script] [text]  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[smoker_quit_months_duration] [int]  NULL,
		[smoker_if_positive_test] [int]  NULL,
		[association_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[type] [int]  NULL
	)   ON [PRIMARY]  TEXTIMAGE_ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[te_rulebook]
	ALTER COLUMN [rulebook_id] [int] NOT NULL
	ALTER TABLE [dbo].[te_rulebook]
	ALTER COLUMN [rulebook_name] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'te_rulebook'), N'rulebook_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[te_rulebook]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[te_rulebook] ADD 
	CONSTRAINT [PK_TE_RULEBOOK] PRIMARY KEY CLUSTERED 
	(
		[rulebook_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): rulebook_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[te_rulebook]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_rulebook_type_effdate] ON [dbo].[te_rulebook]([effective_date], [type]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[te_rulebook_form]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[te_rulebook_form]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[te_rulebook_form]
	( 	
		[rulebook_id] [int]  NOT NULL,
		[form_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[te_rulebook_form]
	ALTER COLUMN [rulebook_id] [int] NOT NULL
	ALTER TABLE [dbo].[te_rulebook_form]
	ALTER COLUMN [form_code] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'te_rulebook_form'), N'rulebook_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'te_rulebook_form'), N'form_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[te_rulebook_form]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[te_rulebook_form] ADD 
	CONSTRAINT [PK_te_rulebook_form] PRIMARY KEY CLUSTERED 
	(
		[rulebook_id], [form_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): rulebook_id, form_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_tr_user_team_team]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tr_user_team]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tr_user_team]  
	DROP CONSTRAINT FK_tr_user_team_team
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[team]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[team]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[team]
	( 	
		[team_id] [int]  NOT NULL,
		[team_name] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[description] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[is_active] [int]  NULL,
		[deleted] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[team]
	ALTER COLUMN [team_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'team'), N'team_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[team]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[team] ADD 
	CONSTRAINT [PK_TEAM] PRIMARY KEY CLUSTERED 
	(
		[team_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): team_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_acord_codes]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_acord_codes]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_acord_codes]
	( 	
		[code_type] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[code_id] [int]  NOT NULL,
		[code_value] [char]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[external_code] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_acord_codes]
	ALTER COLUMN [code_type] [char]  (50) NOT NULL
	ALTER TABLE [dbo].[tl_acord_codes]
	ALTER COLUMN [code_id] [int] NOT NULL
	ALTER TABLE [dbo].[tl_acord_codes]
	ALTER COLUMN [code_value] [char]  (100) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_acord_codes'), N'code_type', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_acord_codes'), N'code_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_acord_codes]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_acord_codes] ADD 
	CONSTRAINT [PK_acord_codes_valuelist] PRIMARY KEY CLUSTERED 
	(
		[code_type], [code_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): code_type, code_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_ADDRE_REFERENCE_TL_ADDRE]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_address_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_address_type_description]  
	DROP CONSTRAINT FK_TL_ADDRE_REFERENCE_TL_ADDRE
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_address_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_address_type]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_address_type]
	( 	
		[address_type_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[external_code] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_address_type]
	ALTER COLUMN [address_type_code] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_address_type'), N'address_type_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_address_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_address_type] ADD 
	CONSTRAINT [PK_TL_ADDRESS_TYPE] PRIMARY KEY CLUSTERED 
	(
		[address_type_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): address_type_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_address_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_address_type_description]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_address_type_description]
	( 	
		[address_type_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_address_type_description]
	ALTER COLUMN [address_type_code] [char]  (20) NOT NULL
	ALTER TABLE [dbo].[tl_address_type_description]
	ALTER COLUMN [language_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_address_type_description'), N'address_type_code', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_address_type_description'), N'language_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_address_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_address_type_description] ADD 
	CONSTRAINT [PK_TL_ADDRESS_TYPE_DESCRIPTION] PRIMARY KEY CLUSTERED 
	(
		[address_type_code], [language_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): address_type_code, language_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_lab_resu_ref_9315_tl_ansi_]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[lab_result]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[lab_result]  
	DROP CONSTRAINT fk_lab_resu_ref_9315_tl_ansi_
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_ansi_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_ansi_code]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_ansi_code]
	( 	
		[horl_code] [char]  (8)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[sequence_number] [int]  NULL,
		[lab_specimen_id] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[ansi] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[lis] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[lnrm] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[capsco] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[cna] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[low_male] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[high_male] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[low_female] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[high_female] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[unit] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_ansi_code]
	ALTER COLUMN [horl_code] [char]  (8) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_ansi_code'), N'horl_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_ansi_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_ansi_code] ADD 
	CONSTRAINT [PK_TL_ANSI_CODE] PRIMARY KEY CLUSTERED 
	(
		[horl_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): horl_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_ANSWE_REFERENCE_TL_ANSWE]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_answer_set_answers]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_answer_set_answers]  
	DROP CONSTRAINT FK_TL_ANSWE_REFERENCE_TL_ANSWE
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_form_question_tl_answer_set]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form_question]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[form_question]  
	DROP CONSTRAINT FK_form_question_tl_answer_set
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_answer_set]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_answer_set]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_answer_set]
	( 	
		[answer_set_name] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_answer_set]
	ALTER COLUMN [answer_set_name] [varchar]  (50) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_answer_set'), N'answer_set_name', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_answer_set]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_answer_set] ADD 
	CONSTRAINT [PK_TL_ANSWER_SET] PRIMARY KEY CLUSTERED 
	(
		[answer_set_name]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): answer_set_name do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_answer_set_answers]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_answer_set_answers]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_answer_set_answers]
	( 	
		[answer_set_name] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[sequence_number] [numeric]  NOT NULL,
		[answer_text] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[alt_answer_text] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_answer_set_answers]
	ALTER COLUMN [answer_set_name] [varchar]  (50) NOT NULL
	ALTER TABLE [dbo].[tl_answer_set_answers]
	ALTER COLUMN [sequence_number] [numeric] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_answer_set_answers'), N'sequence_number', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_answer_set_answers'), N'answer_set_name', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_answer_set_answers]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_answer_set_answers] ADD 
	CONSTRAINT [PK_TL_ANSWER_SET_ANSWERS] PRIMARY KEY CLUSTERED 
	(
		[sequence_number], [answer_set_name]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): sequence_number, answer_set_name do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_applicant_status]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_applicant_status]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_applicant_status]
	( 	
		[applicant_status_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [char]  (254)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_applicant_status]
	ALTER COLUMN [applicant_status_code] [char]  (20) NOT NULL
GO


IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_BENEF_REFERENCE_TL_BENEF]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_beneficiary_type_desc]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_beneficiary_type_desc]  
	DROP CONSTRAINT FK_TL_BENEF_REFERENCE_TL_BENEF
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_beneficiary_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_beneficiary_type]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_beneficiary_type]
	( 	
		[beneficiary_type] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_beneficiary_type]
	ALTER COLUMN [beneficiary_type] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_beneficiary_type'), N'beneficiary_type', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_beneficiary_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_beneficiary_type] ADD 
	CONSTRAINT [PK_TL_BENEFICIARY_TYPE] PRIMARY KEY CLUSTERED 
	(
		[beneficiary_type]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): beneficiary_type do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_beneficiary_type_desc]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_beneficiary_type_desc]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_beneficiary_type_desc]
	( 	
		[beneficiary_type] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_beneficiary_type_desc]
	ALTER COLUMN [beneficiary_type] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[tl_beneficiary_type_desc]
	ALTER COLUMN [language_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_beneficiary_type_desc'), N'beneficiary_type', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_beneficiary_type_desc'), N'language_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_beneficiary_type_desc]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_beneficiary_type_desc] ADD 
	CONSTRAINT [PK_TL_BENEFICIARY_TYPE_DESCRIP] PRIMARY KEY CLUSTERED 
	(
		[beneficiary_type], [language_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): beneficiary_type, language_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_BENEF_FK_TL_BEN_TL_BENEF]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_benefit_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_benefit_type_description]  
	DROP CONSTRAINT FK_TL_BENEF_FK_TL_BEN_TL_BENEF
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_benefit_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_benefit_type]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_benefit_type]
	( 	
		[benefit_id] [int]  NOT NULL,
		[name] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[base_coverage_flag] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_benefit_type]
	ALTER COLUMN [benefit_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_benefit_type'), N'benefit_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_benefit_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_benefit_type] ADD 
	CONSTRAINT [PK_TL_BENEFIT_TYPE] PRIMARY KEY CLUSTERED 
	(
		[benefit_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): benefit_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_benefit_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_benefit_type_description]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_benefit_type_description]
	( 	
		[language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[benefit_id] [int]  NOT NULL,
		[description] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_benefit_type_description]
	ALTER COLUMN [language_code] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[tl_benefit_type_description]
	ALTER COLUMN [benefit_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_benefit_type_description'), N'language_code', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_benefit_type_description'), N'benefit_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_benefit_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_benefit_type_description] ADD 
	CONSTRAINT [PK_TL_BENEFIT_TYPE_DESCRIPTION] PRIMARY KEY CLUSTERED 
	(
		[language_code], [benefit_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): language_code, benefit_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_code]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_code]
	( 	
		[language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[code_type] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[code_id] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[code_value] [varchar]  (1000)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[external_code] [char]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_code]
	ALTER COLUMN [language_code] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[tl_code]
	ALTER COLUMN [code_type] [char]  (50) NOT NULL
	ALTER TABLE [dbo].[tl_code]
	ALTER COLUMN [code_id] [char]  (30) NOT NULL
	ALTER TABLE [dbo].[tl_code]
	ALTER COLUMN [code_value] [varchar]  (1000) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_code'), N'language_code', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_code'), N'code_type', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_code'), N'code_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_code] ADD 
	CONSTRAINT [pk_code_valuelist] PRIMARY KEY CLUSTERED 
	(
		[language_code], [code_type], [code_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): language_code, code_type, code_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_country]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_country]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_country]
	( 	
		[country_id] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[country_code] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[country_name] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[mib_country] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[alt_country_name] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_country]
	ALTER COLUMN [country_id] [char]  (30) NOT NULL
GO


IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_form_ref_1051_tl_count]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_application_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[insured_application_info]  
	DROP CONSTRAINT fk_form_ref_1051_tl_count
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_form_ref_1055_tl_count]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_application_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[insured_application_info]  
	DROP CONSTRAINT fk_form_ref_1055_tl_count
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_INSURED_REF_14420_TL_COUNT]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_person_insured]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy_person_insured]  
	DROP CONSTRAINT FK_INSURED_REF_14420_TL_COUNT
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_person_a_ref_2023_tl_count]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[person_address]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[person_address]  
	DROP CONSTRAINT fk_person_a_ref_2023_tl_count
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_country_state]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_country_state]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_country_state]
	( 	
		[country_state_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[country_id] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[state_code] [char]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[state_name] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[alt_state_name] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_country_state]
	ALTER COLUMN [country_state_id] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[tl_country_state]
	ALTER COLUMN [country_id] [char]  (30) NOT NULL
	ALTER TABLE [dbo].[tl_country_state]
	ALTER COLUMN [state_code] [char]  (5) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_country_state'), N'country_state_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_country_state]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_country_state] ADD 
	CONSTRAINT [PK_TL_COUNTRY_STATE] PRIMARY KEY CLUSTERED 
	(
		[country_state_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): country_state_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_coverage_indicator_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_coverage_indicator_code]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_coverage_indicator_code]
	( 	
		[indicator_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[external_code] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_coverage_indicator_code]
	ALTER COLUMN [indicator_code] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_coverage_indicator_code'), N'indicator_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_coverage_indicator_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_coverage_indicator_code] ADD 
	CONSTRAINT [PK_TL_COVERAGE_INDICATOR_CODE] PRIMARY KEY CLUSTERED 
	(
		[indicator_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): indicator_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_coverage_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_coverage_type]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_coverage_type]
	( 	
		[coverage_type] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[external_code] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_coverage_type]
	ALTER COLUMN [coverage_type] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_coverage_type'), N'coverage_type', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_coverage_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_coverage_type] ADD 
	CONSTRAINT [PK_TL_COVERAGE_TYPE] PRIMARY KEY CLUSTERED 
	(
		[coverage_type]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): coverage_type do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_DEATH_REFERENCE_TL_DEATH]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_death_benefit_option_desc]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_death_benefit_option_desc]  
	DROP CONSTRAINT FK_TL_DEATH_REFERENCE_TL_DEATH
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_death_benefit_option]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_death_benefit_option]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_death_benefit_option]
	( 	
		[death_benefit_option_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[external_code] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_death_benefit_option]
	ALTER COLUMN [death_benefit_option_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_death_benefit_option'), N'death_benefit_option_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_death_benefit_option]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_death_benefit_option] ADD 
	CONSTRAINT [PK_TL_DEATH_BENEFIT_OPTION] PRIMARY KEY CLUSTERED 
	(
		[death_benefit_option_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): death_benefit_option_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_death_benefit_option_desc]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_death_benefit_option_desc]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_death_benefit_option_desc]
	( 	
		[death_benefit_option_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_death_benefit_option_desc]
	ALTER COLUMN [death_benefit_option_code] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[tl_death_benefit_option_desc]
	ALTER COLUMN [language_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_death_benefit_option_desc'), N'death_benefit_option_code', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_death_benefit_option_desc'), N'language_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_death_benefit_option_desc]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_death_benefit_option_desc] ADD 
	CONSTRAINT [PK_TL_DEATH_BENEFIT_OPTION_DES] PRIMARY KEY CLUSTERED 
	(
		[death_benefit_option_code], [language_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): death_benefit_option_code, language_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_distributor_codes]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_distributor_codes]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_distributor_codes]
	( 	
		[distributor_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[distributor_description] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_distributor_codes]
	ALTER COLUMN [distributor_code] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[tl_distributor_codes]
	ALTER COLUMN [distributor_description] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_distributor_codes'), N'distributor_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_distributor_codes]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_distributor_codes] ADD 
	CONSTRAINT [PK_distributor] PRIMARY KEY CLUSTERED 
	(
		[distributor_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): distributor_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_extended_property]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_extended_property]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_extended_property]
	( 	
		[property_name] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[data_type] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_extended_property]
	ALTER COLUMN [property_name] [varchar]  (255) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_extended_property'), N'property_name', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_extended_property]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_extended_property] ADD 
	CONSTRAINT [PK_TL_EXTENDED_PROPERTY] PRIMARY KEY CLUSTERED 
	(
		[property_name]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): property_name do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_family_history_relationship]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_family_history_relationship]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_family_history_relationship]
	( 	
		[famhist_relationship_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_family_history_relationship]
	ALTER COLUMN [famhist_relationship_code] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_family_history_relationship'), N'famhist_relationship_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_family_history_relationship]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_family_history_relationship] ADD 
	CONSTRAINT [PK_TL_FAMILY_HISTORY_RELATIONS] PRIMARY KEY CLUSTERED 
	(
		[famhist_relationship_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): famhist_relationship_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_final_action_reason]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_final_action_reason]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_final_action_reason]
	( 	
		[reason_status] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[reason_text] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[alt_reason_text] [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[reason_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_final_action_reason]
	ALTER COLUMN [reason_status] [char]  (20) NOT NULL
	ALTER TABLE [dbo].[tl_final_action_reason]
	ALTER COLUMN [reason_text] [varchar]  (100) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_final_action_reason'), N'reason_text', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_final_action_reason]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_final_action_reason] ADD 
	CONSTRAINT [PK_TL_FINAL_ACTION_REASON] PRIMARY KEY CLUSTERED 
	(
		[reason_text]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): reason_text do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_form_tl_form_type]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[form]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[form]  
	DROP CONSTRAINT FK_form_tl_form_type
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_form_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_form_type]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_form_type]
	( 	
		[form_type] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[form_name] [char]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[form_desc] [char]  (250)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[external_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_form_type]
	ALTER COLUMN [form_type] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_form_type'), N'form_type', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_form_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_form_type] ADD 
	CONSTRAINT [PK_tl_form_type] PRIMARY KEY CLUSTERED 
	(
		[form_type]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): form_type do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_lab_request]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_lab_request]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_lab_request]
	( 	
		[request_code] [varchar]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_lab_request]
	ALTER COLUMN [request_code] [varchar]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_lab_request'), N'request_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_lab_request]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_lab_request] ADD 
	CONSTRAINT [PK_TL_LAB_REQUEST] PRIMARY KEY CLUSTERED 
	(
		[request_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): request_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[fk_tl_ansi__ref_10810_tl_lab_s]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_ansi_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_ansi_code]  
	DROP CONSTRAINT fk_tl_ansi__ref_10810_tl_lab_s
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_lab_specimen_id]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[requirement_match]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[requirement_match]  
	DROP CONSTRAINT FK_lab_specimen_id
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_lab_specimen]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_lab_specimen]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_lab_specimen]
	( 	
		[lab_specimin_id] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[can_match] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_lab_specimen]
	ALTER COLUMN [lab_specimin_id] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_lab_specimen'), N'lab_specimin_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_lab_specimen]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_lab_specimen] ADD 
	CONSTRAINT [PK_TL_LAB_SPECIMEN] PRIMARY KEY CLUSTERED 
	(
		[lab_specimin_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): lab_specimin_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_ADDRE_REFERENCE_TL_LANGU]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_address_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_address_type_description]  
	DROP CONSTRAINT FK_TL_ADDRE_REFERENCE_TL_LANGU
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_PHONE_REFERENCE_TL_LANGU]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_phone_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_phone_type_description]  
	DROP CONSTRAINT FK_TL_PHONE_REFERENCE_TL_LANGU
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_POLIC_REFERENCE_TL_LANGU]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_policy_role_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_policy_role_description]  
	DROP CONSTRAINT FK_TL_POLIC_REFERENCE_TL_LANGU
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_BENEF_REF_TL_LANGU2]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_benefit_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_benefit_type_description]  
	DROP CONSTRAINT FK_TL_BENEF_REF_TL_LANGU2
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_NOTE__REFERENCE_TL_LANGU]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_note_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_note_type_description]  
	DROP CONSTRAINT FK_TL_NOTE__REFERENCE_TL_LANGU
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_DEATH_REFERENCE_TL_LANGU]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_death_benefit_option_desc]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_death_benefit_option_desc]  
	DROP CONSTRAINT FK_TL_DEATH_REFERENCE_TL_LANGU
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_PURPO_REFERENCE_TL_LANGU]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_purpose_of_coverage_desc]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_purpose_of_coverage_desc]  
	DROP CONSTRAINT FK_TL_PURPO_REFERENCE_TL_LANGU
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_TOBAC_REFERENCE_TL_LANGU]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_tobacco_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_tobacco_type_description]  
	DROP CONSTRAINT FK_TL_TOBAC_REFERENCE_TL_LANGU
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_TOBAC_REF_TL_LANGU2]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_tobacco_use_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_tobacco_use_description]  
	DROP CONSTRAINT FK_TL_TOBAC_REF_TL_LANGU2
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_BENEF_REFERENCE_TL_LANGU]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_beneficiary_type_desc]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_beneficiary_type_desc]  
	DROP CONSTRAINT FK_TL_BENEF_REFERENCE_TL_LANGU
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_POLIC_REF_TL_LANGU2]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_policy_status_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_policy_status_description]  
	DROP CONSTRAINT FK_TL_POLIC_REF_TL_LANGU2
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_language]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_language]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_language]
	( 	
		[language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[external_code] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_language]
	ALTER COLUMN [language_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_language'), N'language_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_language]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_language] ADD 
	CONSTRAINT [PK_TL_LANGUAGE] PRIMARY KEY CLUSTERED 
	(
		[language_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): language_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_marital_status]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_marital_status]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_marital_status]
	( 	
		[marital_status_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[external_code] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_marital_status]
	ALTER COLUMN [marital_status_code] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_marital_status'), N'marital_status_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_marital_status]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_marital_status] ADD 
	CONSTRAINT [PK_tl_marital_status] PRIMARY KEY CLUSTERED 
	(
		[marital_status_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): marital_status_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_NOTE__REFERENCE_TL_NOTE_]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_note_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_note_type_description]  
	DROP CONSTRAINT FK_TL_NOTE__REFERENCE_TL_NOTE_
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_note_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_note_type]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_note_type]
	( 	
		[note_type] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_note_type]
	ALTER COLUMN [note_type] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_note_type'), N'note_type', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_note_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_note_type] ADD 
	CONSTRAINT [PK_TL_NOTE_TYPE] PRIMARY KEY CLUSTERED 
	(
		[note_type]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): note_type do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_note_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_note_type_description]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_note_type_description]
	( 	
		[note_type] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_note_type_description]
	ALTER COLUMN [note_type] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[tl_note_type_description]
	ALTER COLUMN [language_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_note_type_description'), N'note_type', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_note_type_description'), N'language_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_note_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_note_type_description] ADD 
	CONSTRAINT [PK_TL_NOTE_TYPE_DESCRIPTION] PRIMARY KEY CLUSTERED 
	(
		[note_type], [language_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): note_type, language_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_person_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_person_type]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_person_type]
	( 	
		[person_type_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_person_type]
	ALTER COLUMN [person_type_id] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_person_type'), N'person_type_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_person_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_person_type] ADD 
	CONSTRAINT [PK_TL_PERSON_TYPE] PRIMARY KEY CLUSTERED 
	(
		[person_type_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): person_type_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_PHONE_REFERENCE_TL_PHONE]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_phone_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_phone_type_description]  
	DROP CONSTRAINT FK_TL_PHONE_REFERENCE_TL_PHONE
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_phone_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_phone_type]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_phone_type]
	( 	
		[phone_type_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_phone_type]
	ALTER COLUMN [phone_type_code] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_phone_type'), N'phone_type_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_phone_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_phone_type] ADD 
	CONSTRAINT [PK_TL_PHONE_TYPE] PRIMARY KEY CLUSTERED 
	(
		[phone_type_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): phone_type_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_phone_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_phone_type_description]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_phone_type_description]
	( 	
		[phone_type_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_phone_type_description]
	ALTER COLUMN [phone_type_code] [char]  (20) NOT NULL
	ALTER TABLE [dbo].[tl_phone_type_description]
	ALTER COLUMN [language_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_phone_type_description'), N'phone_type_code', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_phone_type_description'), N'language_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_phone_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_phone_type_description] ADD 
	CONSTRAINT [PK_TL_PHONE_TYPE_DESCRIPTION] PRIMARY KEY CLUSTERED 
	(
		[phone_type_code], [language_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): phone_type_code, language_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_EMPLOYER_PLAN_CODE]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[employer_plan]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[employer_plan]  
	DROP CONSTRAINT FK_EMPLOYER_PLAN_CODE
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_PLAN_OPTION_PLAN_CODE]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_plan_option]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_plan_option]  
	DROP CONSTRAINT FK_TL_PLAN_OPTION_PLAN_CODE
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_POLICY_C_REFERENCE_TL_PLAN_]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[policy_coverage]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[policy_coverage]  
	DROP CONSTRAINT FK_POLICY_C_REFERENCE_TL_PLAN_
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_association_plan_plan]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[association_plan]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[association_plan]  
	DROP CONSTRAINT FK_association_plan_plan
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TR_PLAN__REFERENCE_TL_PLAN_]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tr_plan_code_rulebook]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tr_plan_code_rulebook]  
	DROP CONSTRAINT FK_TR_PLAN__REFERENCE_TL_PLAN_
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_plan_benefit_plan]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[plan_benefit]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[plan_benefit]  
	DROP CONSTRAINT FK_plan_benefit_plan
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_benefit_period_plan]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[benefit_period]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[benefit_period]  
	DROP CONSTRAINT FK_benefit_period_plan
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_elimination_period_plan]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[elimination_period]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[elimination_period]  
	DROP CONSTRAINT FK_elimination_period_plan
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_plan_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_plan_code]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_plan_code]
	( 	
		[plan_code_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [varchar]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[line_of_business_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[alt_lang] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[alt_description] [varchar]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_plan_code]
	ALTER COLUMN [plan_code_id] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_plan_code'), N'plan_code_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_plan_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_plan_code] ADD 
	CONSTRAINT [PK_TL_PLAN_CODE] PRIMARY KEY CLUSTERED 
	(
		[plan_code_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): plan_code_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_plan_option]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_plan_option]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_plan_option]
	( 	
		[language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[option_type] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[plan_code_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[sequence_number] [int]  NOT NULL,
		[description] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_plan_option]
	ALTER COLUMN [language_code] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[tl_plan_option]
	ALTER COLUMN [option_type] [char]  (20) NOT NULL
	ALTER TABLE [dbo].[tl_plan_option]
	ALTER COLUMN [plan_code_id] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[tl_plan_option]
	ALTER COLUMN [sequence_number] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_plan_option'), N'language_code', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_plan_option'), N'option_type', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_plan_option'), N'plan_code_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_plan_option'), N'sequence_number', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_plan_option]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_plan_option] ADD 
	CONSTRAINT [PK_tl_plan_option] PRIMARY KEY CLUSTERED 
	(
		[language_code], [option_type], [plan_code_id], [sequence_number]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): language_code, option_type, plan_code_id, sequence_number do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_POLIC_REFERENCE_TL_POLIC]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_policy_role_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_policy_role_description]  
	DROP CONSTRAINT FK_TL_POLIC_REFERENCE_TL_POLIC
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_policy_role]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_policy_role]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_policy_role]
	( 	
		[code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_policy_role]
	ALTER COLUMN [code] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_policy_role'), N'code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_policy_role]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_policy_role] ADD 
	CONSTRAINT [PK_TL_POLICY_ROLE] PRIMARY KEY CLUSTERED 
	(
		[code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_policy_role_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_policy_role_description]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_policy_role_description]
	( 	
		[code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_policy_role_description]
	ALTER COLUMN [code] [char]  (20) NOT NULL
	ALTER TABLE [dbo].[tl_policy_role_description]
	ALTER COLUMN [language_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_policy_role_description'), N'code', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_policy_role_description'), N'language_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_policy_role_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_policy_role_description] ADD 
	CONSTRAINT [PK_TL_POLICY_ROLE_DESCRIPTION] PRIMARY KEY CLUSTERED 
	(
		[code], [language_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): code, language_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_POLIC_REF_TL_POLIC2]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_policy_status_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_policy_status_description]  
	DROP CONSTRAINT FK_TL_POLIC_REF_TL_POLIC2
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_policy_status]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_policy_status]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_policy_status]
	( 	
		[policy_status_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[short_code] [char]  (2)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_policy_status]
	ALTER COLUMN [policy_status_code] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_policy_status'), N'policy_status_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_policy_status]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_policy_status] ADD 
	CONSTRAINT [PK_TL_POLICY_STATUS] PRIMARY KEY CLUSTERED 
	(
		[policy_status_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): policy_status_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_policy_status_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_policy_status_description]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_policy_status_description]
	( 	
		[policy_status_code] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_policy_status_description]
	ALTER COLUMN [policy_status_code] [char]  (20) NOT NULL
	ALTER TABLE [dbo].[tl_policy_status_description]
	ALTER COLUMN [language_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_policy_status_description'), N'policy_status_code', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_policy_status_description'), N'language_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_policy_status_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_policy_status_description] ADD 
	CONSTRAINT [PK_TL_POLICY_STATUS_DESCRIPTIO] PRIMARY KEY CLUSTERED 
	(
		[policy_status_code], [language_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): policy_status_code, language_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_PURPO_REFERENCE_TL_PURPO]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_purpose_of_coverage_desc]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_purpose_of_coverage_desc]  
	DROP CONSTRAINT FK_TL_PURPO_REFERENCE_TL_PURPO
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_purpose_of_coverage]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_purpose_of_coverage]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_purpose_of_coverage]
	( 	
		[purpose_of_coverage_id] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_purpose_of_coverage]
	ALTER COLUMN [purpose_of_coverage_id] [char]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_purpose_of_coverage'), N'purpose_of_coverage_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_purpose_of_coverage]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_purpose_of_coverage] ADD 
	CONSTRAINT [PK_TL_PURPOSE_OF_COVERAGE] PRIMARY KEY CLUSTERED 
	(
		[purpose_of_coverage_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): purpose_of_coverage_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_purpose_of_coverage_desc]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_purpose_of_coverage_desc]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_purpose_of_coverage_desc]
	( 	
		[purpose_of_coverage_id] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_purpose_of_coverage_desc]
	ALTER COLUMN [purpose_of_coverage_id] [char]  (20) NOT NULL
	ALTER TABLE [dbo].[tl_purpose_of_coverage_desc]
	ALTER COLUMN [language_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_purpose_of_coverage_desc'), N'purpose_of_coverage_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_purpose_of_coverage_desc'), N'language_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_purpose_of_coverage_desc]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_purpose_of_coverage_desc] ADD 
	CONSTRAINT [PK_TL_PURPOSE_OF_COVERAGE_DESC] PRIMARY KEY CLUSTERED 
	(
		[purpose_of_coverage_id], [language_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): purpose_of_coverage_id, language_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_insured_req_tl_requirement]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[insured_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[insured_requirement]  
	DROP CONSTRAINT FK_insured_req_tl_requirement
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_requirement_code]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[requirement_match]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[requirement_match]  
	DROP CONSTRAINT FK_requirement_code
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TR_GROUP_REF_1197_TL_REQUI]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tr_group_requirements]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tr_group_requirements]  
	DROP CONSTRAINT FK_TR_GROUP_REF_1197_TL_REQUI
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_requirement]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_requirement]
	( 	
		[requirement_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[requirement_name] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[requirement_category] [int]  NULL,
		[notify_when_satisfied] [int]  NULL,
		[can_auto_approve] [int]  NULL,
		[expiration_days] [int]  NULL,
		[followup_days] [int]  NULL,
		[requirement_type_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[default_ordered_by] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[notify_when_received] [int]  NULL,
		[is_active] [int]  NULL,
		[added_date] [datetime]  NULL,
		[added_by] [int]  NULL,
		[update_date] [datetime]  NULL,
		[updated_by] [int]  NULL,
		[external_requirement_code] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[provider] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[evidence_type] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[authorization_required] [int]  NULL,
		[hippa_auth_required] [int]  NULL,
		[external_followup_days] [int]  NULL,
		[hierarchy] [int]  NULL,
		[new_business_until_closed] [int]  NULL,
		[alt_lang] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[alt_name] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[notify_cm_when_received] [int]  NULL,
		[notify_cm_when_satisfied] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_requirement]
	ALTER COLUMN [requirement_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_requirement'), N'requirement_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_requirement] ADD 
	CONSTRAINT [PK_TL_REQUIREMENT] PRIMARY KEY CLUSTERED 
	(
		[requirement_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): requirement_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TR_AGE_F_REF_4196_TL_REQUI]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tr_age_face_amount_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tr_age_face_amount_requirement]  
	DROP CONSTRAINT FK_TR_AGE_F_REF_4196_TL_REQUI
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TR_GROUP_REF_1194_TL_REQUI]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tr_group_requirements]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tr_group_requirements]  
	DROP CONSTRAINT FK_TR_GROUP_REF_1194_TL_REQUI
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_requirement_group]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_requirement_group]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_requirement_group]
	( 	
		[requirement_group_id] [int]  NOT NULL,
		[name] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[description] [char]  (254)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[is_active] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_requirement_group]
	ALTER COLUMN [requirement_group_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_requirement_group'), N'requirement_group_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_requirement_group]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_requirement_group] ADD 
	CONSTRAINT [PK_TL_REQUIREMENT_GROUP] PRIMARY KEY CLUSTERED 
	(
		[requirement_group_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): requirement_group_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_requirement_group'), N'name', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_requirement_group]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_requirement_group] ADD 
	CONSTRAINT [unique_requirement_group_name] UNIQUE NONCLUSTERED 
	(
		[name]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): name do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_requirement_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_requirement_type]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_requirement_type]
	( 	
		[requirement_type_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_requirement_type]
	ALTER COLUMN [requirement_type_id] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_requirement_type'), N'requirement_type_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_requirement_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_requirement_type] ADD 
	CONSTRAINT [PK_TL_REQUIREMENT_TYPE] PRIMARY KEY CLUSTERED 
	(
		[requirement_type_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): requirement_type_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_source_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_source_info]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_source_info]
	( 	
		[source_info] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[source_description] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[partner_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_source_info]
	ALTER COLUMN [source_info] [char]  (20) NOT NULL
	ALTER TABLE [dbo].[tl_source_info]
	ALTER COLUMN [source_description] [char]  (30) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_source_info'), N'source_info', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_source_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_source_info] ADD 
	CONSTRAINT [PK_source_info] PRIMARY KEY CLUSTERED 
	(
		[source_info]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): source_info do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_COVERAGE_REFERENCE_TL_SUBAC]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[coverage_subaccounts]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[coverage_subaccounts]  
	DROP CONSTRAINT FK_COVERAGE_REFERENCE_TL_SUBAC
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_subaccount]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_subaccount]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_subaccount]
	( 	
		[subaccount_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[full_name] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[product_symbol] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[effective_date] [datetime]  NULL,
		[stop_date] [datetime]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_subaccount]
	ALTER COLUMN [subaccount_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_subaccount'), N'subaccount_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_subaccount]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_subaccount] ADD 
	CONSTRAINT [PK_TL_SUBACCOUNT] PRIMARY KEY CLUSTERED 
	(
		[subaccount_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): subaccount_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_tax_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_tax_type]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_tax_type]
	( 	
		[tax_type_id] [char]  (4)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [varchar]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_tax_type]
	ALTER COLUMN [tax_type_id] [char]  (4) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_tax_type'), N'tax_type_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_tax_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_tax_type] ADD 
	CONSTRAINT [PK_TL_TAX_TYPE] PRIMARY KEY CLUSTERED 
	(
		[tax_type_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): tax_type_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_TOBAC_REFERENCE_TL_TOBAC]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_tobacco_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_tobacco_type_description]  
	DROP CONSTRAINT FK_TL_TOBAC_REFERENCE_TL_TOBAC
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_tobacco_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_tobacco_type]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_tobacco_type]
	( 	
		[tobacco_type_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[external_code] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_tobacco_type]
	ALTER COLUMN [tobacco_type_id] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_tobacco_type'), N'tobacco_type_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_tobacco_type]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_tobacco_type] ADD 
	CONSTRAINT [PK_TL_TOBACCO_TYPE] PRIMARY KEY CLUSTERED 
	(
		[tobacco_type_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): tobacco_type_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_tobacco_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_tobacco_type_description]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_tobacco_type_description]
	( 	
		[tobacco_type_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_tobacco_type_description]
	ALTER COLUMN [tobacco_type_id] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[tl_tobacco_type_description]
	ALTER COLUMN [language_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_tobacco_type_description'), N'tobacco_type_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_tobacco_type_description'), N'language_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_tobacco_type_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_tobacco_type_description] ADD 
	CONSTRAINT [PK_TL_TOBACCO_TYPE_DESCRIPTION] PRIMARY KEY CLUSTERED 
	(
		[tobacco_type_id], [language_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): tobacco_type_id, language_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_TL_TOBAC_REF_TL_TOBAC2]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_tobacco_use_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_tobacco_use_description]  
	DROP CONSTRAINT FK_TL_TOBAC_REF_TL_TOBAC2
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_tobacco_use]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_tobacco_use]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_tobacco_use]
	( 	
		[tobacco_use_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[external_code] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_tobacco_use]
	ALTER COLUMN [tobacco_use_id] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_tobacco_use'), N'tobacco_use_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_tobacco_use]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_tobacco_use] ADD 
	CONSTRAINT [PK_TL_TOBACCO_USE] PRIMARY KEY CLUSTERED 
	(
		[tobacco_use_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): tobacco_use_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_tobacco_use_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tl_tobacco_use_description]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tl_tobacco_use_description]
	( 	
		[tobacco_use_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[description] [varchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tl_tobacco_use_description]
	ALTER COLUMN [tobacco_use_id] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[tl_tobacco_use_description]
	ALTER COLUMN [language_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_tobacco_use_description'), N'tobacco_use_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_tobacco_use_description'), N'language_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tl_tobacco_use_description]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_tobacco_use_description] ADD 
	CONSTRAINT [PK_TL_TOBACCO_USE_DESCRIPTION] PRIMARY KEY CLUSTERED 
	(
		[tobacco_use_id], [language_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): tobacco_use_id, language_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tobacco]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tobacco]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tobacco]
	( 	
		[requirement_information_id] [int]  NOT NULL,
		[tobacco_use_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[tobacco_type_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[years_quit] [numeric]  NULL,
		[years_smoked] [numeric]  NULL,
		[packs_per_day] [numeric]  NULL,
		[quit_date] [datetime]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tobacco]
	ALTER COLUMN [requirement_information_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tobacco'), N'requirement_information_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tobacco]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tobacco] ADD 
	CONSTRAINT [PK_TOBACCO] PRIMARY KEY CLUSTERED 
	(
		[requirement_information_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): requirement_information_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_billing_code_tpa]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[billing_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[billing_code]  
	DROP CONSTRAINT FK_billing_code_tpa
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_association_plan_tpa]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[association_plan]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[association_plan]  
	DROP CONSTRAINT FK_association_plan_tpa
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tpa]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tpa]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tpa]
	( 	
		[tpa_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[tpa_short_name] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[person_id] [int]  NOT NULL,
		[contact_last_name] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[contact_first_name] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[auto_closure_days] [int]  NULL,
		[expiration_date] [datetime]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tpa]
	ALTER COLUMN [tpa_code] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[tpa]
	ALTER COLUMN [tpa_short_name] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[tpa]
	ALTER COLUMN [person_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tpa'), N'tpa_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tpa]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tpa] ADD 
	CONSTRAINT [PK_tpa] PRIMARY KEY CLUSTERED 
	(
		[tpa_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): tpa_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tpa]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE UNIQUE INDEX [IX_tpa_acronym] ON [dbo].[tpa]([tpa_short_name]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tr_age_face_amount_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tr_age_face_amount_requirement]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tr_age_face_amount_requirement]
	( 	
		[rulebook_id] [int]  NOT NULL,
		[age_band_seq_no] [int]  NOT NULL,
		[face_amount_seq_no] [int]  NOT NULL,
		[requirement_group_id] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tr_age_face_amount_requirement]
	ALTER COLUMN [rulebook_id] [int] NOT NULL
	ALTER TABLE [dbo].[tr_age_face_amount_requirement]
	ALTER COLUMN [age_band_seq_no] [int] NOT NULL
	ALTER TABLE [dbo].[tr_age_face_amount_requirement]
	ALTER COLUMN [face_amount_seq_no] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tr_age_face_amount_requirement'), N'rulebook_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tr_age_face_amount_requirement'), N'age_band_seq_no', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tr_age_face_amount_requirement'), N'face_amount_seq_no', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tr_age_face_amount_requirement]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tr_age_face_amount_requirement] ADD 
	CONSTRAINT [PK_TR_AGE_FACE_AMOUNT_REQUIREM] PRIMARY KEY CLUSTERED 
	(
		[rulebook_id], [age_band_seq_no], [face_amount_seq_no]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): rulebook_id, age_band_seq_no, face_amount_seq_no do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tr_group_requirements]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tr_group_requirements]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tr_group_requirements]
	( 	
		[requirement_group_id] [int]  NOT NULL,
		[requirement_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tr_group_requirements]
	ALTER COLUMN [requirement_group_id] [int] NOT NULL
	ALTER TABLE [dbo].[tr_group_requirements]
	ALTER COLUMN [requirement_code] [char]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tr_group_requirements'), N'requirement_group_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tr_group_requirements'), N'requirement_code', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tr_group_requirements]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tr_group_requirements] ADD 
	CONSTRAINT [PK_TR_GROUP_REQUIREMENTS] PRIMARY KEY CLUSTERED 
	(
		[requirement_group_id], [requirement_code]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): requirement_group_id, requirement_code do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tr_plan_code_rulebook]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tr_plan_code_rulebook]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tr_plan_code_rulebook]
	( 	
		[plan_code_id] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[effective_date] [datetime]  NULL,
		[rulebook_id] [int]  NOT NULL,
		[association_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tr_plan_code_rulebook]
	ALTER COLUMN [plan_code_id] [char]  (10) NOT NULL
	ALTER TABLE [dbo].[tr_plan_code_rulebook]
	ALTER COLUMN [rulebook_id] [int] NOT NULL
GO


IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tr_plan_code_rulebook]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ix_plan_code_rulebook] ON [dbo].[tr_plan_code_rulebook]([plan_code_id], [rulebook_id]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tr_user_team]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[tr_user_team]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[tr_user_team]
	( 	
		[user_id] [int]  NOT NULL,
		[team_id] [int]  NOT NULL,
		[auto_assign] [int]  NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[tr_user_team]
	ALTER COLUMN [user_id] [int] NOT NULL
	ALTER TABLE [dbo].[tr_user_team]
	ALTER COLUMN [team_id] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tr_user_team'), N'user_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tr_user_team'), N'team_id', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tr_user_team]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tr_user_team] ADD 
	CONSTRAINT [PK_tr_user_team] PRIMARY KEY NONCLUSTERED 
	(
		[user_id], [team_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): user_id, team_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[underwriting_detail]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[underwriting_detail]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[underwriting_detail]
	( 	
		[insured_id] [int]  NOT NULL,
		[rulebook_id] [int]  NOT NULL,
		[rule_name] [char]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AI NOT NULL,
		[based_on] [char]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[result_text] [char]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[can_points] [real]  NULL,
		[cad_points] [real]  NULL,
		[ao_points] [real]  NULL,
		[can_class] [int]  NULL,
		[cad_class] [int]  NULL,
		[ao_class] [int]  NULL,
		[kickout_flag] [int]  NULL,
		[added_date] [datetime]  NULL,
		[run_status] [char]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL,
		[review_message_comment] [varchar]  (2000)  COLLATE SQL_Latin1_General_CP1_CI_AI NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[underwriting_detail]
	ALTER COLUMN [insured_id] [int] NOT NULL
	ALTER TABLE [dbo].[underwriting_detail]
	ALTER COLUMN [rulebook_id] [int] NOT NULL
	ALTER TABLE [dbo].[underwriting_detail]
	ALTER COLUMN [rule_name] [char]  (50) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'underwriting_detail'), N'insured_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'underwriting_detail'), N'rulebook_id', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'underwriting_detail'), N'rule_name', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[underwriting_detail]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[underwriting_detail] ADD 
	CONSTRAINT [PK_UNDERWRITING_DETAIL] PRIMARY KEY CLUSTERED 
	(
		[insured_id], [rulebook_id], [rule_name]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): insured_id, rulebook_id, rule_name do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF object_id(N'policy_person_agent') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'agency'), N'person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_person_agent] ADD 
	CONSTRAINT [FK_POLICY_P_REFERENCE_AGENCY] FOREIGN KEY 
	(	
		[agency_id]
	) REFERENCES [dbo].[agency] ( 
		[person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy_person_agent, or the related column: person_id does not exist', 16, 1)
GO
	
IF object_id(N'te_case_assignment') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'agency'), N'person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[te_case_assignment] ADD 
	CONSTRAINT [FK_TE_CASE__REFERENCE_AGENCY] FOREIGN KEY 
	(	
		[person_id]
	) REFERENCES [dbo].[agency] ( 
		[person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: te_case_assignment, or the related column: person_id does not exist', 16, 1)
GO
	
IF object_id(N'aus_role_privilege') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_security_privilege'), N'privilege_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[aus_role_privilege] ADD 
	CONSTRAINT [FK_AUS_ROLE_REF_8704_AUS_SECU] FOREIGN KEY 
	(	
		[privilege_id]
	) REFERENCES [dbo].[aus_security_privilege] ( 
		[privilege_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: aus_role_privilege, or the related column: privilege_id does not exist', 16, 1)
GO
	
IF object_id(N'aus_role_privilege') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_security_roles'), N'role_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[aus_role_privilege] ADD 
	CONSTRAINT [FK_AUS_ROLE_REF_8700_AUS_SECU] FOREIGN KEY 
	(	
		[role_id]
	) REFERENCES [dbo].[aus_security_roles] ( 
		[role_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: aus_role_privilege, or the related column: role_id does not exist', 16, 1)
GO
	
IF object_id(N'aus_user') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_security_roles'), N'role_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[aus_user] ADD 
	CONSTRAINT [fk_aus_user_ref_role] FOREIGN KEY 
	(	
		[role_id]
	) REFERENCES [dbo].[aus_security_roles] ( 
		[role_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: aus_user, or the related column: role_id does not exist', 16, 1)
GO
	
IF object_id(N'aus_security_privilege') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_security_subsystem'), N'subsystem_name', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[aus_security_privilege] ADD 
	CONSTRAINT [FK_sec_priv_sec_subsys] FOREIGN KEY 
	(	
		[subsystem_name]
	) REFERENCES [dbo].[aus_security_subsystem] ( 
		[subsystem_name]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: aus_security_privilege, or the related column: subsystem_name does not exist', 16, 1)
GO
	
IF object_id(N'insured_application_info') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[insured_application_info] ADD 
	CONSTRAINT [fk_form_ref_491_aus_user] FOREIGN KEY 
	(	
		[added_by]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: insured_application_info, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'insured_application_info') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[insured_application_info] ADD 
	CONSTRAINT [fk_form_ref_503_aus_user] FOREIGN KEY 
	(	
		[updated_by]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: insured_application_info, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'insured_requirement') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[insured_requirement] ADD 
	CONSTRAINT [FK_insured_req_aus_user] FOREIGN KEY 
	(	
		[received_by]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: insured_requirement, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'insured_requirement') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[insured_requirement] ADD 
	CONSTRAINT [FK_insured_req_aus_user1] FOREIGN KEY 
	(	
		[added_by]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: insured_requirement, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'insured_requirement') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[insured_requirement] ADD 
	CONSTRAINT [FK_insured_req_aus_user2] FOREIGN KEY 
	(	
		[closed_by]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: insured_requirement, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'notes') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[notes] ADD 
	CONSTRAINT [fk_notes_ref_39_aus_user] FOREIGN KEY 
	(	
		[author]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: notes, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'paramed') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[paramed] ADD 
	CONSTRAINT [fk_paramed_ref_12407_aus_user] FOREIGN KEY 
	(	
		[added_by]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: paramed, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'paramed') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[paramed] ADD 
	CONSTRAINT [fk_paramed_ref_12411_aus_user] FOREIGN KEY 
	(	
		[updated_by]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: paramed, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'policy') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy] ADD 
	CONSTRAINT [fk_policy_ref_1006_aus_user] FOREIGN KEY 
	(	
		[added_by]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'policy') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy] ADD 
	CONSTRAINT [fk_policy_ref_1010_aus_user] FOREIGN KEY 
	(	
		[updated_by]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'policy') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy] ADD 
	CONSTRAINT [fk_policy_ref_13937_aus_user] FOREIGN KEY 
	(	
		[current_edit_user_id]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'policy') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy] ADD 
	CONSTRAINT [fk_policy_ref_992_aus_user] FOREIGN KEY 
	(	
		[underwriter_id]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'policy') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy] ADD 
	CONSTRAINT [FK_POLICY_REFERENCE_AUS_USER] FOREIGN KEY 
	(	
		[final_action_by]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'policy') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy] ADD 
	CONSTRAINT [FK_policy_service_associate] FOREIGN KEY 
	(	
		[service_associate_id]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'policy_assignment') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_assignment] ADD 
	CONSTRAINT [FK_POLICY_A_REFERENCE_AUS_USER] FOREIGN KEY 
	(	
		[user_id]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy_assignment, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'policy_log') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_log] ADD 
	CONSTRAINT [FK_POLICY_L_REF_8715_AUS_USER] FOREIGN KEY 
	(	
		[user_id]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy_log, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'policy_status_history') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_status_history] ADD 
	CONSTRAINT [fk_policy_s_ref_5408_aus_user] FOREIGN KEY 
	(	
		[user_id]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy_status_history, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'review_message') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[review_message] ADD 
	CONSTRAINT [fk_review_m_ref_507_aus_user] FOREIGN KEY 
	(	
		[checked_off_by]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: review_message, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'requirement_info_request') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[requirement_info_request] ADD 
	CONSTRAINT [fk_requirem_ref_13269_aus_user] FOREIGN KEY 
	(	
		[requested_by_id]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: requirement_info_request, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'te_case_assignment') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[te_case_assignment] ADD 
	CONSTRAINT [FK_TE_CASE__REFERENCE_AUS_USER] FOREIGN KEY 
	(	
		[user_id]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: te_case_assignment, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'tl_requirement') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_requirement] ADD 
	CONSTRAINT [FK_TL_REQUIREMENT_ADDED_BY] FOREIGN KEY 
	(	
		[added_by]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_requirement, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'tl_requirement') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_requirement] ADD 
	CONSTRAINT [FK_TL_REQUIREMENT_UPDATED_BY] FOREIGN KEY 
	(	
		[updated_by]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_requirement, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'tr_user_team') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tr_user_team] ADD 
	CONSTRAINT [FK_tr_user_team_aus_user] FOREIGN KEY 
	(	
		[user_id]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tr_user_team, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'aus_user_limits') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[aus_user_limits] ADD 
	CONSTRAINT [FK_aus_user_limits_user] FOREIGN KEY 
	(	
		[user_id]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: aus_user_limits, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'requirement_information') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[requirement_information] ADD 
	CONSTRAINT [fk_requirem_ref_1955_aus_user] FOREIGN KEY 
	(	
		[added_by]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: requirement_information, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'aus_user_recent_files') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'aus_user'), N'user_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[aus_user_recent_files] ADD 
	CONSTRAINT [FK_AUS_USER_REFERENCE_AUS_USER] FOREIGN KEY 
	(	
		[user_id]
	) REFERENCES [dbo].[aus_user] ( 
		[user_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: aus_user_recent_files, or the related column: user_id does not exist', 16, 1)
GO
	
IF object_id(N'company_mib_entry') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'company_mib'), N'company_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[company_mib_entry] ADD 
	CONSTRAINT [FK_COMPANY__REF_17407_COMPANY_] FOREIGN KEY 
	(	
		[company_code]
	) REFERENCES [dbo].[company_mib] ( 
		[company_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: company_mib_entry, or the related column: company_code does not exist', 16, 1)
GO
	
IF object_id(N'coverage_benefits_party') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'coverage_benefits'), N'benefit_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_benefits_party] ADD 
	CONSTRAINT [FK_coverage_benefits_party] FOREIGN KEY 
	(	
		[benefit_id],
		[policy_coverage_id]
	) REFERENCES [dbo].[coverage_benefits] ( 
		[benefit_id],
		[policy_coverage_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: coverage_benefits_party, or the related column: benefit_id does not exist', 16, 1)
GO
	
IF object_id(N'coverage_person_beneficiary') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'coverage_person'), N'coverage_person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person_beneficiary] ADD 
	CONSTRAINT [FK_COVERAGE_REFERENCE_COVERAGE] FOREIGN KEY 
	(	
		[coverage_person_id]
	) REFERENCES [dbo].[coverage_person] ( 
		[coverage_person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: coverage_person_beneficiary, or the related column: coverage_person_id does not exist', 16, 1)
GO
	
IF object_id(N'coverage_person_fund_alloc') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'coverage_person'), N'coverage_person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person_fund_alloc] ADD 
	CONSTRAINT [FK_cov_pers_fund] FOREIGN KEY 
	(	
		[coverage_person_id]
	) REFERENCES [dbo].[coverage_person] ( 
		[coverage_person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: coverage_person_fund_alloc, or the related column: coverage_person_id does not exist', 16, 1)
GO
	
IF object_id(N'coverage_person_amendment') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'coverage_person'), N'coverage_person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person_amendment] ADD 
	CONSTRAINT [FK_cov_pers_amendment_cov] FOREIGN KEY 
	(	
		[coverage_person_id]
	) REFERENCES [dbo].[coverage_person] ( 
		[coverage_person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: coverage_person_amendment, or the related column: coverage_person_id does not exist', 16, 1)
GO
	
IF object_id(N'coverage_person_reinsurer') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'coverage_person'), N'coverage_person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person_reinsurer] ADD 
	CONSTRAINT [FK_cov_pers_reinsurer_cov] FOREIGN KEY 
	(	
		[coverage_person_id]
	) REFERENCES [dbo].[coverage_person] ( 
		[coverage_person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: coverage_person_reinsurer, or the related column: coverage_person_id does not exist', 16, 1)
GO
	
IF object_id(N'coverage_person_impairment') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'coverage_person'), N'coverage_person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person_impairment] ADD 
	CONSTRAINT [FK_cov_pers_impairment_cov] FOREIGN KEY 
	(	
		[coverage_person_id]
	) REFERENCES [dbo].[coverage_person] ( 
		[coverage_person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: coverage_person_impairment, or the related column: coverage_person_id does not exist', 16, 1)
GO
	
IF object_id(N'coverage_person_insured') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'coverage_person'), N'coverage_person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person_insured] ADD 
	CONSTRAINT [FK_COVERAGE_REF_COVERAGE2] FOREIGN KEY 
	(	
		[coverage_person_id]
	) REFERENCES [dbo].[coverage_person] ( 
		[coverage_person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: coverage_person_insured, or the related column: coverage_person_id does not exist', 16, 1)
GO
	
IF object_id(N'coverage_person_extra_info') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'coverage_person'), N'coverage_person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person_extra_info] ADD 
	CONSTRAINT [FK_cov_person_extra_info_cp] FOREIGN KEY 
	(	
		[coverage_person_id]
	) REFERENCES [dbo].[coverage_person] ( 
		[coverage_person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: coverage_person_extra_info, or the related column: coverage_person_id does not exist', 16, 1)
GO
	
IF object_id(N'form_section') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'form'), N'form_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_section] ADD 
	CONSTRAINT [FK_form_section_form] FOREIGN KEY 
	(	
		[form_code]
	) REFERENCES [dbo].[form] ( 
		[form_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: form_section, or the related column: form_code does not exist', 16, 1)
GO
	
IF object_id(N'te_rulebook_form') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'form'), N'form_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[te_rulebook_form] ADD 
	CONSTRAINT [FK_te_rulebook_form_form] FOREIGN KEY 
	(	
		[form_code]
	) REFERENCES [dbo].[form] ( 
		[form_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: te_rulebook_form, or the related column: form_code does not exist', 16, 1)
GO
	
IF object_id(N'form_instance_section') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'form_instance'), N'requirement_information_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_instance_section] ADD 
	CONSTRAINT [FK_form_inst_section_form_inst] FOREIGN KEY 
	(	
		[requirement_information_id]
	) REFERENCES [dbo].[form_instance] ( 
		[requirement_information_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: form_instance_section, or the related column: requirement_information_id does not exist', 16, 1)
GO
	
IF object_id(N'form_instance_answer') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'form_instance_answers_doc_info'), N'form_instance_answer_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_instance_answer] ADD 
	CONSTRAINT [FK_form_inst_ans_doc_info] FOREIGN KEY 
	(	
		[form_instance_answer_id]
	) REFERENCES [dbo].[form_instance_answers_doc_info] ( 
		[form_instance_answer_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: form_instance_answer, or the related column: form_instance_answer_id does not exist', 16, 1)
GO
	
IF object_id(N'form_instance_answer') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'form_instance_question_group'), N'form_instance_question_grp_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_instance_answer] ADD 
	CONSTRAINT [FK_form_inst_ans_q_group] FOREIGN KEY 
	(	
		[form_instance_question_grp_id]
	) REFERENCES [dbo].[form_instance_question_group] ( 
		[form_instance_question_grp_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: form_instance_answer, or the related column: form_instance_question_grp_id does not exist', 16, 1)
GO
	
IF object_id(N'form_instance_question_group') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'form_instance_section'), N'form_instance_section_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_instance_question_group] ADD 
	CONSTRAINT [FK_form_inst_q_group_sec] FOREIGN KEY 
	(	
		[form_instance_section_id]
	) REFERENCES [dbo].[form_instance_section] ( 
		[form_instance_section_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: form_instance_question_group, or the related column: form_instance_section_id does not exist', 16, 1)
GO
	
IF object_id(N'form_instance_answer') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'form_question'), N'question_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_instance_answer] ADD 
	CONSTRAINT [FK_form_inst_answers_form_ques] FOREIGN KEY 
	(	
		[question_id]
	) REFERENCES [dbo].[form_question] ( 
		[question_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: form_instance_answer, or the related column: question_id does not exist', 16, 1)
GO
	
IF object_id(N'form_instance_question_group') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'form_question_group'), N'form_question_group_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_instance_question_group] ADD 
	CONSTRAINT [FK_form_q_group_quest] FOREIGN KEY 
	(	
		[form_question_group_id],
		[form_code],
		[form_section_id]
	) REFERENCES [dbo].[form_question_group] ( 
		[form_question_group_id],
		[form_code],
		[form_section_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: form_instance_question_group, or the related column: form_question_group_id does not exist', 16, 1)
GO
	
IF object_id(N'form_question') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'form_question_group'), N'form_question_group_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_question] ADD 
	CONSTRAINT [FK_form_quest_quest_group] FOREIGN KEY 
	(	
		[question_group_id],
		[form_code],
		[form_section_id]
	) REFERENCES [dbo].[form_question_group] ( 
		[form_question_group_id],
		[form_code],
		[form_section_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: form_question, or the related column: form_question_group_id does not exist', 16, 1)
GO
	
IF object_id(N'form_instance_section') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'form_section'), N'form_section_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_instance_section] ADD 
	CONSTRAINT [FK_form_inst_section_form_sec] FOREIGN KEY 
	(	
		[form_section_id],
		[form_code]
	) REFERENCES [dbo].[form_section] ( 
		[form_section_id],
		[form_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: form_instance_section, or the related column: form_section_id does not exist', 16, 1)
GO
	
IF object_id(N'form_question_group') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'form_section'), N'form_section_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_question_group] ADD 
	CONSTRAINT [FK_question_group_form_section] FOREIGN KEY 
	(	
		[form_section_id],
		[form_code]
	) REFERENCES [dbo].[form_section] ( 
		[form_section_id],
		[form_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: form_question_group, or the related column: form_section_id does not exist', 16, 1)
GO
	
IF object_id(N'coverage_person_impairment') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'impairment_restriction'), N'impairment_restriction_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person_impairment] ADD 
	CONSTRAINT [FK_cov_pers_impairment_code] FOREIGN KEY 
	(	
		[impairment_restriction_code]
	) REFERENCES [dbo].[impairment_restriction] ( 
		[impairment_restriction_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: coverage_person_impairment, or the related column: impairment_restriction_code does not exist', 16, 1)
GO
	
IF object_id(N'evidence_status') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'insured_requirement'), N'insured_requirement_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[evidence_status] ADD 
	CONSTRAINT [FK_evidence_status_ins_req] FOREIGN KEY 
	(	
		[insured_requirement_id]
	) REFERENCES [dbo].[insured_requirement] ( 
		[insured_requirement_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: evidence_status, or the related column: insured_requirement_id does not exist', 16, 1)
GO
	
IF object_id(N'lab_comment') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'lab_header'), N'requirement_information_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[lab_comment] ADD 
	CONSTRAINT [FK_LAB_COMM_REF_14387_LAB_HEAD] FOREIGN KEY 
	(	
		[requirement_information_id]
	) REFERENCES [dbo].[lab_header] ( 
		[requirement_information_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: lab_comment, or the related column: requirement_information_id does not exist', 16, 1)
GO
	
IF object_id(N'lab_result') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'lab_header'), N'requirement_information_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[lab_result] ADD 
	CONSTRAINT [fk_lab_resu_ref_10823_lab_head] FOREIGN KEY 
	(	
		[requirement_information_id]
	) REFERENCES [dbo].[lab_header] ( 
		[requirement_information_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: lab_result, or the related column: requirement_information_id does not exist', 16, 1)
GO
	
IF object_id(N'billing_code') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'line_of_business'), N'line_of_business_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[billing_code] ADD 
	CONSTRAINT [FK_billing_code_line_of_bus] FOREIGN KEY 
	(	
		[line_of_business_code]
	) REFERENCES [dbo].[line_of_business] ( 
		[line_of_business_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: billing_code, or the related column: line_of_business_code does not exist', 16, 1)
GO
	
IF object_id(N'aus_user_limits') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'line_of_business'), N'line_of_business_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[aus_user_limits] ADD 
	CONSTRAINT [FK_aus_user_limits_lob] FOREIGN KEY 
	(	
		[line_of_business_code]
	) REFERENCES [dbo].[line_of_business] ( 
		[line_of_business_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: aus_user_limits, or the related column: line_of_business_code does not exist', 16, 1)
GO
	
IF object_id(N'tl_plan_code') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'line_of_business'), N'line_of_business_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_plan_code] ADD 
	CONSTRAINT [fk_plan_code_lob] FOREIGN KEY 
	(	
		[line_of_business_code]
	) REFERENCES [dbo].[line_of_business] ( 
		[line_of_business_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_plan_code, or the related column: line_of_business_code does not exist', 16, 1)
GO
	
IF object_id(N'mib_code') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'mib_header'), N'mib_header_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[mib_code] ADD 
	CONSTRAINT [fk_mib_code_ref_598_mib_head] FOREIGN KEY 
	(	
		[mib_header_id]
	) REFERENCES [dbo].[mib_header] ( 
		[mib_header_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: mib_code, or the related column: mib_header_id does not exist', 16, 1)
GO
	
IF object_id(N'mvr_detail') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'mvr_header'), N'mvr_header_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[mvr_detail] ADD 
	CONSTRAINT [fk_mvr_deta_ref_9662_mvr_head] FOREIGN KEY 
	(	
		[mvr_header_id]
	) REFERENCES [dbo].[mvr_header] ( 
		[mvr_header_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: mvr_detail, or the related column: mvr_header_id does not exist', 16, 1)
GO
	
IF object_id(N'person') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'note_collection'), N'note_collection_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[person] ADD 
	CONSTRAINT [FK_person_note_collection] FOREIGN KEY 
	(	
		[note_collection_id]
	) REFERENCES [dbo].[note_collection] ( 
		[note_collection_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: person, or the related column: note_collection_id does not exist', 16, 1)
GO
	
IF object_id(N'association_plan') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'note_collection'), N'note_collection_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[association_plan] ADD 
	CONSTRAINT [FK_association_plan_note_collection] FOREIGN KEY 
	(	
		[note_collection_id]
	) REFERENCES [dbo].[note_collection] ( 
		[note_collection_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: association_plan, or the related column: note_collection_id does not exist', 16, 1)
GO
	
IF object_id(N'coverage_person') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'person'), N'person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person] ADD 
	CONSTRAINT [FK_COVERAGE_REFERENCE_PERSON] FOREIGN KEY 
	(	
		[person_id]
	) REFERENCES [dbo].[person] ( 
		[person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: coverage_person, or the related column: person_id does not exist', 16, 1)
GO
	
IF object_id(N'employer_plan') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'person'), N'person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[employer_plan] ADD 
	CONSTRAINT [FK_EMPLOYER_PERSON] FOREIGN KEY 
	(	
		[employer_id]
	) REFERENCES [dbo].[person] ( 
		[person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: employer_plan, or the related column: person_id does not exist', 16, 1)
GO
	
IF object_id(N'coverage_person_insured') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'person'), N'person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person_insured] ADD 
	CONSTRAINT [FK_cov_ppo_id] FOREIGN KEY 
	(	
		[ppo_id]
	) REFERENCES [dbo].[person] ( 
		[person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: coverage_person_insured, or the related column: person_id does not exist', 16, 1)
GO
	
IF object_id(N'policy_person') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'person'), N'person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_person] ADD 
	CONSTRAINT [FK_POLICY_P_REFERENCE_PERSON] FOREIGN KEY 
	(	
		[person_id]
	) REFERENCES [dbo].[person] ( 
		[person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy_person, or the related column: person_id does not exist', 16, 1)
GO
	
IF object_id(N'subgroup') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'person'), N'person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[subgroup] ADD 
	CONSTRAINT [FK_subgroup_person] FOREIGN KEY 
	(	
		[person_id]
	) REFERENCES [dbo].[person] ( 
		[person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: subgroup, or the related column: person_id does not exist', 16, 1)
GO
	
IF object_id(N'agency') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'person'), N'person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[agency] ADD 
	CONSTRAINT [FK_AGENCY_REFERENCE_PERSON] FOREIGN KEY 
	(	
		[person_id]
	) REFERENCES [dbo].[person] ( 
		[person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: agency, or the related column: person_id does not exist', 16, 1)
GO
	
IF object_id(N'agent') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'person'), N'person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[agent] ADD 
	CONSTRAINT [FK_AGENT_REFERENCE_PERSON] FOREIGN KEY 
	(	
		[person_id]
	) REFERENCES [dbo].[person] ( 
		[person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: agent, or the related column: person_id does not exist', 16, 1)
GO
	
IF object_id(N'aus_user') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'person'), N'person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[aus_user] ADD 
	CONSTRAINT [fk_aus_user_ref_582_person] FOREIGN KEY 
	(	
		[person_id]
	) REFERENCES [dbo].[person] ( 
		[person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: aus_user, or the related column: person_id does not exist', 16, 1)
GO
	
IF object_id(N'company') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'person'), N'person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[company] ADD 
	CONSTRAINT [FK_COMPANY_REF_8638_PERSON] FOREIGN KEY 
	(	
		[person_id]
	) REFERENCES [dbo].[person] ( 
		[person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: company, or the related column: person_id does not exist', 16, 1)
GO
	
IF object_id(N'insured_benefits_person') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'person'), N'person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[insured_benefits_person] ADD 
	CONSTRAINT [FK_INSURED__REFERENCE_PERSON] FOREIGN KEY 
	(	
		[person_id]
	) REFERENCES [dbo].[person] ( 
		[person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: insured_benefits_person, or the related column: person_id does not exist', 16, 1)
GO
	
IF object_id(N'person_address') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'person'), N'person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[person_address] ADD 
	CONSTRAINT [FK_PERSON_A_REF_9598_PERSON] FOREIGN KEY 
	(	
		[person_id]
	) REFERENCES [dbo].[person] ( 
		[person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: person_address, or the related column: person_id does not exist', 16, 1)
GO
	
IF object_id(N'person_alias') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'person'), N'person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[person_alias] ADD 
	CONSTRAINT [FK_PERSON_A_REFERENCE_PERSON] FOREIGN KEY 
	(	
		[person_id]
	) REFERENCES [dbo].[person] ( 
		[person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: person_alias, or the related column: person_id does not exist', 16, 1)
GO
	
IF object_id(N'person_phone') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'person'), N'person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[person_phone] ADD 
	CONSTRAINT [FK_PERSON_P_REF_6967_PERSON] FOREIGN KEY 
	(	
		[person_id]
	) REFERENCES [dbo].[person] ( 
		[person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: person_phone, or the related column: person_id does not exist', 16, 1)
GO
	
IF object_id(N'party_relation') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'person'), N'person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[party_relation] ADD 
	CONSTRAINT [FK_party_relation_person] FOREIGN KEY 
	(	
		[person_id]
	) REFERENCES [dbo].[person] ( 
		[person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: party_relation, or the related column: person_id does not exist', 16, 1)
GO
	
IF object_id(N'party_relation') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'person'), N'person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[party_relation] ADD 
	CONSTRAINT [FK_party_relation_person1] FOREIGN KEY 
	(	
		[parent_id]
	) REFERENCES [dbo].[person] ( 
		[person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: party_relation, or the related column: person_id does not exist', 16, 1)
GO
	
IF object_id(N'requirement_information') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'person'), N'person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[requirement_information] ADD 
	CONSTRAINT [fk_requirem_ref_574_person] FOREIGN KEY 
	(	
		[person_id]
	) REFERENCES [dbo].[person] ( 
		[person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: requirement_information, or the related column: person_id does not exist', 16, 1)
GO
	
IF object_id(N'tpa') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'person'), N'person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tpa] ADD 
	CONSTRAINT [fk_tpa_person_id] FOREIGN KEY 
	(	
		[person_id]
	) REFERENCES [dbo].[person] ( 
		[person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tpa, or the related column: person_id does not exist', 16, 1)
GO
	
IF object_id(N'extended_property') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy'), N'policy_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[extended_property] ADD 
	CONSTRAINT [FK_EXTENDED_REFERENCE_POLICY] FOREIGN KEY 
	(	
		[policy_id]
	) REFERENCES [dbo].[policy] ( 
		[policy_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: extended_property, or the related column: policy_id does not exist', 16, 1)
GO
	
IF object_id(N'policy_assignment') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy'), N'policy_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_assignment] ADD 
	CONSTRAINT [FK_POLICY_A_REFERENCE_POLICY] FOREIGN KEY 
	(	
		[policy_id]
	) REFERENCES [dbo].[policy] ( 
		[policy_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy_assignment, or the related column: policy_id does not exist', 16, 1)
GO
	
IF object_id(N'policy_coverage') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy'), N'policy_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_coverage] ADD 
	CONSTRAINT [FK_POLICY_C_REFERENCE_POLICY] FOREIGN KEY 
	(	
		[policy_id]
	) REFERENCES [dbo].[policy] ( 
		[policy_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy_coverage, or the related column: policy_id does not exist', 16, 1)
GO
	
IF object_id(N'policy_log') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy'), N'policy_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_log] ADD 
	CONSTRAINT [FK_POLICY_L_REF_20862_POLICY] FOREIGN KEY 
	(	
		[policy_id]
	) REFERENCES [dbo].[policy] ( 
		[policy_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy_log, or the related column: policy_id does not exist', 16, 1)
GO
	
IF object_id(N'policy_person') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy'), N'policy_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_person] ADD 
	CONSTRAINT [FK_POLICY_P_REFERENCE_POLICY] FOREIGN KEY 
	(	
		[policy_id]
	) REFERENCES [dbo].[policy] ( 
		[policy_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy_person, or the related column: policy_id does not exist', 16, 1)
GO
	
IF object_id(N'policy_status_history') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy'), N'policy_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_status_history] ADD 
	CONSTRAINT [fk_policy_s_ref_5389_policy] FOREIGN KEY 
	(	
		[policy_id]
	) REFERENCES [dbo].[policy] ( 
		[policy_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy_status_history, or the related column: policy_id does not exist', 16, 1)
GO
	
IF object_id(N'review_message') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy'), N'policy_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[review_message] ADD 
	CONSTRAINT [fk_review_m_ref_278_policy] FOREIGN KEY 
	(	
		[policy_id]
	) REFERENCES [dbo].[policy] ( 
		[policy_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: review_message, or the related column: policy_id does not exist', 16, 1)
GO
	
IF object_id(N'policy_admin_status') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy'), N'policy_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_admin_status] ADD 
	CONSTRAINT [FK_policy_admin_status_policy] FOREIGN KEY 
	(	
		[policy_id]
	) REFERENCES [dbo].[policy] ( 
		[policy_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy_admin_status, or the related column: policy_id does not exist', 16, 1)
GO
	
IF object_id(N'system_search_info') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy'), N'policy_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[system_search_info] ADD 
	CONSTRAINT [FK_policy_id_policy_syssearch] FOREIGN KEY 
	(	
		[policy_id]
	) REFERENCES [dbo].[policy] ( 
		[policy_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: system_search_info, or the related column: policy_id does not exist', 16, 1)
GO
	
IF object_id(N'aus_user_recent_files') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy'), N'policy_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[aus_user_recent_files] ADD 
	CONSTRAINT [FK_AUS_USER_REFERENCE_POLICY] FOREIGN KEY 
	(	
		[policy_id]
	) REFERENCES [dbo].[policy] ( 
		[policy_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: aus_user_recent_files, or the related column: policy_id does not exist', 16, 1)
GO
	
IF object_id(N'coverage_person') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy_coverage'), N'policy_coverage_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person] ADD 
	CONSTRAINT [FK_COVERAGE_REF_POLICY_C3] FOREIGN KEY 
	(	
		[policy_coverage_id]
	) REFERENCES [dbo].[policy_coverage] ( 
		[policy_coverage_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: coverage_person, or the related column: policy_coverage_id does not exist', 16, 1)
GO
	
IF object_id(N'coverage_subaccounts') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy_coverage'), N'policy_coverage_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_subaccounts] ADD 
	CONSTRAINT [FK_COVERAGE_REFERENCE_POLICY_C] FOREIGN KEY 
	(	
		[policy_coverage_id]
	) REFERENCES [dbo].[policy_coverage] ( 
		[policy_coverage_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: coverage_subaccounts, or the related column: policy_coverage_id does not exist', 16, 1)
GO
	
IF object_id(N'coverage_benefits') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy_coverage'), N'policy_coverage_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_benefits] ADD 
	CONSTRAINT [FK_COVERAGE_REF_POLICY_C2] FOREIGN KEY 
	(	
		[policy_coverage_id]
	) REFERENCES [dbo].[policy_coverage] ( 
		[policy_coverage_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: coverage_benefits, or the related column: policy_coverage_id does not exist', 16, 1)
GO
	
IF object_id(N'policy_person_insured') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy_person'), N'policy_person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_person_insured] ADD 
	CONSTRAINT [FK_PRIMARY_REFERENCE_ID] FOREIGN KEY 
	(	
		[primary_reference_id]
	) REFERENCES [dbo].[policy_person] ( 
		[policy_person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy_person_insured, or the related column: policy_person_id does not exist', 16, 1)
GO
	
IF object_id(N'policy_person_agent') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy_person'), N'policy_person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_person_agent] ADD 
	CONSTRAINT [FK_POLICY_PERSON_AGENT] FOREIGN KEY 
	(	
		[policy_person_id]
	) REFERENCES [dbo].[policy_person] ( 
		[policy_person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy_person_agent, or the related column: policy_person_id does not exist', 16, 1)
GO
	
IF object_id(N'policy_person_insured') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy_person'), N'policy_person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_person_insured] ADD 
	CONSTRAINT [FK_POLICY_P_REFERENCE_POLICY_P] FOREIGN KEY 
	(	
		[policy_person_id]
	) REFERENCES [dbo].[policy_person] ( 
		[policy_person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy_person_insured, or the related column: policy_person_id does not exist', 16, 1)
GO
	
IF object_id(N'policy_person_retro_info') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy_person'), N'policy_person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_person_retro_info] ADD 
	CONSTRAINT [FK_policy_person_retro_info_pp] FOREIGN KEY 
	(	
		[policy_person_id]
	) REFERENCES [dbo].[policy_person] ( 
		[policy_person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy_person_retro_info, or the related column: policy_person_id does not exist', 16, 1)
GO
	
IF object_id(N'insured_application_info') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy_person_insured'), N'policy_person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[insured_application_info] ADD 
	CONSTRAINT [fk_form_ref_5982_insured] FOREIGN KEY 
	(	
		[policy_person_id]
	) REFERENCES [dbo].[policy_person_insured] ( 
		[policy_person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: insured_application_info, or the related column: policy_person_id does not exist', 16, 1)
GO
	
IF object_id(N'mib_coding') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy_person_insured'), N'policy_person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[mib_coding] ADD 
	CONSTRAINT [FK_MIB_CODI_REF_3419_INSURED] FOREIGN KEY 
	(	
		[policy_person_id]
	) REFERENCES [dbo].[policy_person_insured] ( 
		[policy_person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: mib_coding, or the related column: policy_person_id does not exist', 16, 1)
GO
	
IF object_id(N'notes') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy_person_insured'), N'policy_person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[notes] ADD 
	CONSTRAINT [FK_notes_policy_person_insured] FOREIGN KEY 
	(	
		[policy_person_id]
	) REFERENCES [dbo].[policy_person_insured] ( 
		[policy_person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: notes, or the related column: policy_person_id does not exist', 16, 1)
GO
	
IF object_id(N'paramed') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy_person_insured'), N'policy_person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[paramed] ADD 
	CONSTRAINT [fk_paramed_ref_5986_insured] FOREIGN KEY 
	(	
		[policy_person_id]
	) REFERENCES [dbo].[policy_person_insured] ( 
		[policy_person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: paramed, or the related column: policy_person_id does not exist', 16, 1)
GO
	
IF object_id(N'related_policies') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy_person_insured'), N'policy_person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[related_policies] ADD 
	CONSTRAINT [FK_related_pol_pers_insured] FOREIGN KEY 
	(	
		[policy_person_id]
	) REFERENCES [dbo].[policy_person_insured] ( 
		[policy_person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: related_policies, or the related column: policy_person_id does not exist', 16, 1)
GO
	
IF object_id(N'review_message') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy_person_insured'), N'policy_person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[review_message] ADD 
	CONSTRAINT [fk_review_m_ref_13931_insured] FOREIGN KEY 
	(	
		[policy_person_id]
	) REFERENCES [dbo].[policy_person_insured] ( 
		[policy_person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: review_message, or the related column: policy_person_id does not exist', 16, 1)
GO
	
IF object_id(N'coverage_person_insured') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy_person_insured'), N'policy_person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_person_insured] ADD 
	CONSTRAINT [FK_COVERAGE_REFERENCE_POLICY_P] FOREIGN KEY 
	(	
		[policy_person_id]
	) REFERENCES [dbo].[policy_person_insured] ( 
		[policy_person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: coverage_person_insured, or the related column: policy_person_id does not exist', 16, 1)
GO
	
IF object_id(N'doc_mgmt_history') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'policy_person_insured'), N'policy_person_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[doc_mgmt_history] ADD 
	CONSTRAINT [FK_DOC_APPLICANT_ID] FOREIGN KEY 
	(	
		[policy_person_id]
	) REFERENCES [dbo].[policy_person_insured] ( 
		[policy_person_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: doc_mgmt_history, or the related column: policy_person_id does not exist', 16, 1)
GO
	
IF object_id(N'insured_requirement') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'provider'), N'provider', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[insured_requirement] ADD 
	CONSTRAINT [FK_insured_req_provider] FOREIGN KEY 
	(	
		[provider],
		[evidence_type]
	) REFERENCES [dbo].[provider] ( 
		[provider],
		[evidence_type]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: insured_requirement, or the related column: provider does not exist', 16, 1)
GO
	
IF object_id(N'tl_requirement') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'provider'), N'provider', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_requirement] ADD 
	CONSTRAINT [FK_tl_requirement_provider] FOREIGN KEY 
	(	
		[provider],
		[evidence_type]
	) REFERENCES [dbo].[provider] ( 
		[provider],
		[evidence_type]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_requirement, or the related column: provider does not exist', 16, 1)
GO
	
IF object_id(N'insured_requirement') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'provider_order'), N'provider_order_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[insured_requirement] ADD 
	CONSTRAINT [FK_provider_order] FOREIGN KEY 
	(	
		[provider_order_id]
	) REFERENCES [dbo].[provider_order] ( 
		[provider_order_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: insured_requirement, or the related column: provider_order_id does not exist', 16, 1)
GO
	
IF object_id(N'requirement_information') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'requirement_info_request'), N'requirement_request_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[requirement_information] ADD 
	CONSTRAINT [fk_requirem_ref_15525_requirem] FOREIGN KEY 
	(	
		[requirement_request_id]
	) REFERENCES [dbo].[requirement_info_request] ( 
		[requirement_request_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: requirement_information, or the related column: requirement_request_id does not exist', 16, 1)
GO
	
IF object_id(N'insured_application_info') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'requirement_information'), N'requirement_information_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[insured_application_info] ADD 
	CONSTRAINT [FK_INSURED__REFERENCE_REQUIREM] FOREIGN KEY 
	(	
		[requirement_information_id]
	) REFERENCES [dbo].[requirement_information] ( 
		[requirement_information_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: insured_application_info, or the related column: requirement_information_id does not exist', 16, 1)
GO
	
IF object_id(N'insured_requirement') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'requirement_information'), N'requirement_information_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[insured_requirement] ADD 
	CONSTRAINT [FK_insured_req_req_information] FOREIGN KEY 
	(	
		[requirement_information_id]
	) REFERENCES [dbo].[requirement_information] ( 
		[requirement_information_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: insured_requirement, or the related column: requirement_information_id does not exist', 16, 1)
GO
	
IF object_id(N'paramed') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'requirement_information'), N'requirement_information_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[paramed] ADD 
	CONSTRAINT [fk_paramed_ref_602_requirem] FOREIGN KEY 
	(	
		[requirement_information_id]
	) REFERENCES [dbo].[requirement_information] ( 
		[requirement_information_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: paramed, or the related column: requirement_information_id does not exist', 16, 1)
GO
	
IF object_id(N'form_instance') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'requirement_information'), N'requirement_information_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_instance] ADD 
	CONSTRAINT [FK_form_instance_reqt_info] FOREIGN KEY 
	(	
		[requirement_information_id]
	) REFERENCES [dbo].[requirement_information] ( 
		[requirement_information_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: form_instance, or the related column: requirement_information_id does not exist', 16, 1)
GO
	
IF object_id(N'evidence_status') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'requirement_information'), N'requirement_information_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[evidence_status] ADD 
	CONSTRAINT [FK_evidence_status_req_info] FOREIGN KEY 
	(	
		[requirement_information_id]
	) REFERENCES [dbo].[requirement_information] ( 
		[requirement_information_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: evidence_status, or the related column: requirement_information_id does not exist', 16, 1)
GO
	
IF object_id(N'family_history') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'requirement_information'), N'requirement_information_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[family_history] ADD 
	CONSTRAINT [fk_family_h_ref_8276_requirem] FOREIGN KEY 
	(	
		[requirement_information_id]
	) REFERENCES [dbo].[requirement_information] ( 
		[requirement_information_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: family_history, or the related column: requirement_information_id does not exist', 16, 1)
GO
	
IF object_id(N'lab_header') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'requirement_information'), N'requirement_information_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[lab_header] ADD 
	CONSTRAINT [fk_lab_head_ref_542_requirem] FOREIGN KEY 
	(	
		[requirement_information_id]
	) REFERENCES [dbo].[requirement_information] ( 
		[requirement_information_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: lab_header, or the related column: requirement_information_id does not exist', 16, 1)
GO
	
IF object_id(N'mib_header') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'requirement_information'), N'requirement_information_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[mib_header] ADD 
	CONSTRAINT [fk_mib_head_ref_559_requirem] FOREIGN KEY 
	(	
		[requirement_information_id]
	) REFERENCES [dbo].[requirement_information] ( 
		[requirement_information_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: mib_header, or the related column: requirement_information_id does not exist', 16, 1)
GO
	
IF object_id(N'mvr_header') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'requirement_information'), N'requirement_information_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[mvr_header] ADD 
	CONSTRAINT [fk_mvr_head_ref_9647_requirem] FOREIGN KEY 
	(	
		[requirement_information_id]
	) REFERENCES [dbo].[requirement_information] ( 
		[requirement_information_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: mvr_header, or the related column: requirement_information_id does not exist', 16, 1)
GO
	
IF object_id(N'tobacco') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'requirement_information'), N'requirement_information_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tobacco] ADD 
	CONSTRAINT [fk_tobacco_ref_8267_requirem] FOREIGN KEY 
	(	
		[requirement_information_id]
	) REFERENCES [dbo].[requirement_information] ( 
		[requirement_information_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tobacco, or the related column: requirement_information_id does not exist', 16, 1)
GO
	
IF object_id(N'insured_requirement') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'review_message'), N'review_message_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[insured_requirement] ADD 
	CONSTRAINT [FK_insured_req_review_message] FOREIGN KEY 
	(	
		[review_message_id]
	) REFERENCES [dbo].[review_message] ( 
		[review_message_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: insured_requirement, or the related column: review_message_id does not exist', 16, 1)
GO
	
IF object_id(N'company') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'subgroup'), N'subgroup_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[company] ADD 
	CONSTRAINT [FK_company_subgroup] FOREIGN KEY 
	(	
		[subgroup_id]
	) REFERENCES [dbo].[subgroup] ( 
		[subgroup_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: company, or the related column: subgroup_id does not exist', 16, 1)
GO
	
IF object_id(N'tr_age_face_amount_requirement') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'ta_age_band'), N'rulebook_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tr_age_face_amount_requirement] ADD 
	CONSTRAINT [FK_TR_AGE_F_REF_4178_TA_AGE_B] FOREIGN KEY 
	(	
		[rulebook_id],
		[age_band_seq_no]
	) REFERENCES [dbo].[ta_age_band] ( 
		[rulebook_id],
		[age_band_seq_no]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tr_age_face_amount_requirement, or the related column: rulebook_id does not exist', 16, 1)
GO
	
IF object_id(N'tr_age_face_amount_requirement') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'ta_face_amount_band'), N'rulebook_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tr_age_face_amount_requirement] ADD 
	CONSTRAINT [FK_TR_AGE_F_REF_4185_TA_FACE_] FOREIGN KEY 
	(	
		[rulebook_id],
		[face_amount_seq_no]
	) REFERENCES [dbo].[ta_face_amount_band] ( 
		[rulebook_id],
		[face_amount_seq_no]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tr_age_face_amount_requirement, or the related column: rulebook_id does not exist', 16, 1)
GO
	
IF object_id(N'ta_band_level') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'ta_point_allocation'), N'point_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[ta_band_level] ADD 
	CONSTRAINT [FK_TA_BAND__REF_570_TA_POINT] FOREIGN KEY 
	(	
		[point_id]
	) REFERENCES [dbo].[ta_point_allocation] ( 
		[point_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: ta_band_level, or the related column: point_id does not exist', 16, 1)
GO
	
IF object_id(N'underwriting_detail') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'ta_point_rule'), N'rulebook_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[underwriting_detail] ADD 
	CONSTRAINT [FK_UNDERWRI_REF_5297_TA_POINT] FOREIGN KEY 
	(	
		[rulebook_id],
		[rule_name]
	) REFERENCES [dbo].[ta_point_rule] ( 
		[rulebook_id],
		[rule_name]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: underwriting_detail, or the related column: rulebook_id does not exist', 16, 1)
GO
	
IF object_id(N'ta_band_level') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'te_band'), N'band_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[ta_band_level] ADD 
	CONSTRAINT [FK_TA_BAND__REF_566_TE_BAND] FOREIGN KEY 
	(	
		[band_level_id]
	) REFERENCES [dbo].[te_band] ( 
		[band_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: ta_band_level, or the related column: band_id does not exist', 16, 1)
GO
	
IF object_id(N'ta_point_rule') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'te_band'), N'band_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[ta_point_rule] ADD 
	CONSTRAINT [FK_TA_POINT_REF_574_TE_BAND] FOREIGN KEY 
	(	
		[first_band_id]
	) REFERENCES [dbo].[te_band] ( 
		[band_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: ta_point_rule, or the related column: band_id does not exist', 16, 1)
GO
	
IF object_id(N'ta_age_band') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'te_rulebook'), N'rulebook_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[ta_age_band] ADD 
	CONSTRAINT [FK_TA_AGE_B_REF_4168_TE_RULEB] FOREIGN KEY 
	(	
		[rulebook_id]
	) REFERENCES [dbo].[te_rulebook] ( 
		[rulebook_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: ta_age_band, or the related column: rulebook_id does not exist', 16, 1)
GO
	
IF object_id(N'ta_face_amount_band') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'te_rulebook'), N'rulebook_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[ta_face_amount_band] ADD 
	CONSTRAINT [FK_TA_FACE__REF_4164_TE_RULEB] FOREIGN KEY 
	(	
		[rulebook_id]
	) REFERENCES [dbo].[te_rulebook] ( 
		[rulebook_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: ta_face_amount_band, or the related column: rulebook_id does not exist', 16, 1)
GO
	
IF object_id(N'ta_point_rule') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'te_rulebook'), N'rulebook_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[ta_point_rule] ADD 
	CONSTRAINT [FK_TA_POINT_REF_534_TE_RULEB] FOREIGN KEY 
	(	
		[rulebook_id]
	) REFERENCES [dbo].[te_rulebook] ( 
		[rulebook_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: ta_point_rule, or the related column: rulebook_id does not exist', 16, 1)
GO
	
IF object_id(N'ta_rate_table_class') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'te_rulebook'), N'rulebook_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[ta_rate_table_class] ADD 
	CONSTRAINT [FK_TA_RATE__REF_530_TE_RULEB] FOREIGN KEY 
	(	
		[rulebook_id]
	) REFERENCES [dbo].[te_rulebook] ( 
		[rulebook_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: ta_rate_table_class, or the related column: rulebook_id does not exist', 16, 1)
GO
	
IF object_id(N'te_rule') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'te_rulebook'), N'rulebook_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[te_rule] ADD 
	CONSTRAINT [FK_TE_RULE_REFERENCE_TE_RULEB] FOREIGN KEY 
	(	
		[rulebook_id]
	) REFERENCES [dbo].[te_rulebook] ( 
		[rulebook_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: te_rule, or the related column: rulebook_id does not exist', 16, 1)
GO
	
IF object_id(N'tr_plan_code_rulebook') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'te_rulebook'), N'rulebook_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tr_plan_code_rulebook] ADD 
	CONSTRAINT [FK_TR_PLAN__REFERENCE_TE_RULEB] FOREIGN KEY 
	(	
		[rulebook_id]
	) REFERENCES [dbo].[te_rulebook] ( 
		[rulebook_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tr_plan_code_rulebook, or the related column: rulebook_id does not exist', 16, 1)
GO
	
IF object_id(N'te_rulebook_form') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'te_rulebook'), N'rulebook_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[te_rulebook_form] ADD 
	CONSTRAINT [FK_te_rulebook_form_te_rb] FOREIGN KEY 
	(	
		[rulebook_id]
	) REFERENCES [dbo].[te_rulebook] ( 
		[rulebook_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: te_rulebook_form, or the related column: rulebook_id does not exist', 16, 1)
GO
	
IF object_id(N'tr_user_team') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'team'), N'team_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tr_user_team] ADD 
	CONSTRAINT [FK_tr_user_team_team] FOREIGN KEY 
	(	
		[team_id]
	) REFERENCES [dbo].[team] ( 
		[team_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tr_user_team, or the related column: team_id does not exist', 16, 1)
GO
	
IF object_id(N'tl_address_type_description') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_address_type'), N'address_type_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_address_type_description] ADD 
	CONSTRAINT [FK_TL_ADDRE_REFERENCE_TL_ADDRE] FOREIGN KEY 
	(	
		[address_type_code]
	) REFERENCES [dbo].[tl_address_type] ( 
		[address_type_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_address_type_description, or the related column: address_type_code does not exist', 16, 1)
GO
	
IF object_id(N'lab_result') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_ansi_code'), N'horl_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[lab_result] ADD 
	CONSTRAINT [fk_lab_resu_ref_9315_tl_ansi_] FOREIGN KEY 
	(	
		[horl_code]
	) REFERENCES [dbo].[tl_ansi_code] ( 
		[horl_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: lab_result, or the related column: horl_code does not exist', 16, 1)
GO
	
IF object_id(N'tl_answer_set_answers') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_answer_set'), N'answer_set_name', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_answer_set_answers] ADD 
	CONSTRAINT [FK_TL_ANSWE_REFERENCE_TL_ANSWE] FOREIGN KEY 
	(	
		[answer_set_name]
	) REFERENCES [dbo].[tl_answer_set] ( 
		[answer_set_name]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_answer_set_answers, or the related column: answer_set_name does not exist', 16, 1)
GO
	
IF object_id(N'form_question') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_answer_set'), N'answer_set_name', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form_question] ADD 
	CONSTRAINT [FK_form_question_tl_answer_set] FOREIGN KEY 
	(	
		[answer_set_name]
	) REFERENCES [dbo].[tl_answer_set] ( 
		[answer_set_name]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: form_question, or the related column: answer_set_name does not exist', 16, 1)
GO
	
IF object_id(N'tl_beneficiary_type_desc') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_beneficiary_type'), N'beneficiary_type', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_beneficiary_type_desc] ADD 
	CONSTRAINT [FK_TL_BENEF_REFERENCE_TL_BENEF] FOREIGN KEY 
	(	
		[beneficiary_type]
	) REFERENCES [dbo].[tl_beneficiary_type] ( 
		[beneficiary_type]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_beneficiary_type_desc, or the related column: beneficiary_type does not exist', 16, 1)
GO
	
IF object_id(N'tl_benefit_type_description') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_benefit_type'), N'benefit_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_benefit_type_description] ADD 
	CONSTRAINT [FK_TL_BENEF_FK_TL_BEN_TL_BENEF] FOREIGN KEY 
	(	
		[benefit_id]
	) REFERENCES [dbo].[tl_benefit_type] ( 
		[benefit_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_benefit_type_description, or the related column: benefit_id does not exist', 16, 1)
GO
	
IF object_id(N'insured_application_info') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_country_state'), N'country_state_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[insured_application_info] ADD 
	CONSTRAINT [fk_form_ref_1051_tl_count] FOREIGN KEY 
	(	
		[residence_state]
	) REFERENCES [dbo].[tl_country_state] ( 
		[country_state_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: insured_application_info, or the related column: country_state_id does not exist', 16, 1)
GO
	
IF object_id(N'insured_application_info') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_country_state'), N'country_state_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[insured_application_info] ADD 
	CONSTRAINT [fk_form_ref_1055_tl_count] FOREIGN KEY 
	(	
		[drivers_license_state]
	) REFERENCES [dbo].[tl_country_state] ( 
		[country_state_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: insured_application_info, or the related column: country_state_id does not exist', 16, 1)
GO
	
IF object_id(N'policy_person_insured') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_country_state'), N'country_state_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_person_insured] ADD 
	CONSTRAINT [FK_INSURED_REF_14420_TL_COUNT] FOREIGN KEY 
	(	
		[signed_state_id]
	) REFERENCES [dbo].[tl_country_state] ( 
		[country_state_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy_person_insured, or the related column: country_state_id does not exist', 16, 1)
GO
	
IF object_id(N'person_address') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_country_state'), N'country_state_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[person_address] ADD 
	CONSTRAINT [fk_person_a_ref_2023_tl_count] FOREIGN KEY 
	(	
		[country_state_id]
	) REFERENCES [dbo].[tl_country_state] ( 
		[country_state_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: person_address, or the related column: country_state_id does not exist', 16, 1)
GO
	
IF object_id(N'tl_death_benefit_option_desc') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_death_benefit_option'), N'death_benefit_option_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_death_benefit_option_desc] ADD 
	CONSTRAINT [FK_TL_DEATH_REFERENCE_TL_DEATH] FOREIGN KEY 
	(	
		[death_benefit_option_code]
	) REFERENCES [dbo].[tl_death_benefit_option] ( 
		[death_benefit_option_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_death_benefit_option_desc, or the related column: death_benefit_option_code does not exist', 16, 1)
GO
	
IF object_id(N'form') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_form_type'), N'form_type', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[form] ADD 
	CONSTRAINT [FK_form_tl_form_type] FOREIGN KEY 
	(	
		[form_type]
	) REFERENCES [dbo].[tl_form_type] ( 
		[form_type]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: form, or the related column: form_type does not exist', 16, 1)
GO
	
IF object_id(N'tl_ansi_code') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_lab_specimen'), N'lab_specimin_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_ansi_code] ADD 
	CONSTRAINT [fk_tl_ansi__ref_10810_tl_lab_s] FOREIGN KEY 
	(	
		[lab_specimen_id]
	) REFERENCES [dbo].[tl_lab_specimen] ( 
		[lab_specimin_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_ansi_code, or the related column: lab_specimin_id does not exist', 16, 1)
GO
	
IF object_id(N'requirement_match') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_lab_specimen'), N'lab_specimin_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[requirement_match] ADD 
	CONSTRAINT [FK_lab_specimen_id] FOREIGN KEY 
	(	
		[lab_specimen_id]
	) REFERENCES [dbo].[tl_lab_specimen] ( 
		[lab_specimin_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: requirement_match, or the related column: lab_specimin_id does not exist', 16, 1)
GO
	
IF object_id(N'tl_address_type_description') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_language'), N'language_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_address_type_description] ADD 
	CONSTRAINT [FK_TL_ADDRE_REFERENCE_TL_LANGU] FOREIGN KEY 
	(	
		[language_code]
	) REFERENCES [dbo].[tl_language] ( 
		[language_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_address_type_description, or the related column: language_code does not exist', 16, 1)
GO
	
IF object_id(N'tl_phone_type_description') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_language'), N'language_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_phone_type_description] ADD 
	CONSTRAINT [FK_TL_PHONE_REFERENCE_TL_LANGU] FOREIGN KEY 
	(	
		[language_code]
	) REFERENCES [dbo].[tl_language] ( 
		[language_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_phone_type_description, or the related column: language_code does not exist', 16, 1)
GO
	
IF object_id(N'tl_policy_role_description') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_language'), N'language_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_policy_role_description] ADD 
	CONSTRAINT [FK_TL_POLIC_REFERENCE_TL_LANGU] FOREIGN KEY 
	(	
		[language_code]
	) REFERENCES [dbo].[tl_language] ( 
		[language_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_policy_role_description, or the related column: language_code does not exist', 16, 1)
GO
	
IF object_id(N'tl_benefit_type_description') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_language'), N'language_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_benefit_type_description] ADD 
	CONSTRAINT [FK_TL_BENEF_REF_TL_LANGU2] FOREIGN KEY 
	(	
		[language_code]
	) REFERENCES [dbo].[tl_language] ( 
		[language_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_benefit_type_description, or the related column: language_code does not exist', 16, 1)
GO
	
IF object_id(N'tl_note_type_description') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_language'), N'language_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_note_type_description] ADD 
	CONSTRAINT [FK_TL_NOTE__REFERENCE_TL_LANGU] FOREIGN KEY 
	(	
		[language_code]
	) REFERENCES [dbo].[tl_language] ( 
		[language_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_note_type_description, or the related column: language_code does not exist', 16, 1)
GO
	
IF object_id(N'tl_death_benefit_option_desc') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_language'), N'language_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_death_benefit_option_desc] ADD 
	CONSTRAINT [FK_TL_DEATH_REFERENCE_TL_LANGU] FOREIGN KEY 
	(	
		[language_code]
	) REFERENCES [dbo].[tl_language] ( 
		[language_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_death_benefit_option_desc, or the related column: language_code does not exist', 16, 1)
GO
	
IF object_id(N'tl_purpose_of_coverage_desc') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_language'), N'language_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_purpose_of_coverage_desc] ADD 
	CONSTRAINT [FK_TL_PURPO_REFERENCE_TL_LANGU] FOREIGN KEY 
	(	
		[language_code]
	) REFERENCES [dbo].[tl_language] ( 
		[language_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_purpose_of_coverage_desc, or the related column: language_code does not exist', 16, 1)
GO
	
IF object_id(N'tl_tobacco_type_description') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_language'), N'language_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_tobacco_type_description] ADD 
	CONSTRAINT [FK_TL_TOBAC_REFERENCE_TL_LANGU] FOREIGN KEY 
	(	
		[language_code]
	) REFERENCES [dbo].[tl_language] ( 
		[language_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_tobacco_type_description, or the related column: language_code does not exist', 16, 1)
GO
	
IF object_id(N'tl_tobacco_use_description') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_language'), N'language_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_tobacco_use_description] ADD 
	CONSTRAINT [FK_TL_TOBAC_REF_TL_LANGU2] FOREIGN KEY 
	(	
		[language_code]
	) REFERENCES [dbo].[tl_language] ( 
		[language_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_tobacco_use_description, or the related column: language_code does not exist', 16, 1)
GO
	
IF object_id(N'tl_beneficiary_type_desc') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_language'), N'language_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_beneficiary_type_desc] ADD 
	CONSTRAINT [FK_TL_BENEF_REFERENCE_TL_LANGU] FOREIGN KEY 
	(	
		[language_code]
	) REFERENCES [dbo].[tl_language] ( 
		[language_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_beneficiary_type_desc, or the related column: language_code does not exist', 16, 1)
GO
	
IF object_id(N'tl_policy_status_description') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_language'), N'language_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_policy_status_description] ADD 
	CONSTRAINT [FK_TL_POLIC_REF_TL_LANGU2] FOREIGN KEY 
	(	
		[language_code]
	) REFERENCES [dbo].[tl_language] ( 
		[language_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_policy_status_description, or the related column: language_code does not exist', 16, 1)
GO
	
IF object_id(N'tl_note_type_description') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_note_type'), N'note_type', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_note_type_description] ADD 
	CONSTRAINT [FK_TL_NOTE__REFERENCE_TL_NOTE_] FOREIGN KEY 
	(	
		[note_type]
	) REFERENCES [dbo].[tl_note_type] ( 
		[note_type]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_note_type_description, or the related column: note_type does not exist', 16, 1)
GO
	
IF object_id(N'tl_phone_type_description') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_phone_type'), N'phone_type_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_phone_type_description] ADD 
	CONSTRAINT [FK_TL_PHONE_REFERENCE_TL_PHONE] FOREIGN KEY 
	(	
		[phone_type_code]
	) REFERENCES [dbo].[tl_phone_type] ( 
		[phone_type_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_phone_type_description, or the related column: phone_type_code does not exist', 16, 1)
GO
	
IF object_id(N'employer_plan') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_plan_code'), N'plan_code_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[employer_plan] ADD 
	CONSTRAINT [FK_EMPLOYER_PLAN_CODE] FOREIGN KEY 
	(	
		[plan_code]
	) REFERENCES [dbo].[tl_plan_code] ( 
		[plan_code_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: employer_plan, or the related column: plan_code_id does not exist', 16, 1)
GO
	
IF object_id(N'tl_plan_option') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_plan_code'), N'plan_code_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_plan_option] ADD 
	CONSTRAINT [FK_TL_PLAN_OPTION_PLAN_CODE] FOREIGN KEY 
	(	
		[plan_code_id]
	) REFERENCES [dbo].[tl_plan_code] ( 
		[plan_code_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_plan_option, or the related column: plan_code_id does not exist', 16, 1)
GO
	
IF object_id(N'policy_coverage') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_plan_code'), N'plan_code_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[policy_coverage] ADD 
	CONSTRAINT [FK_POLICY_C_REFERENCE_TL_PLAN_] FOREIGN KEY 
	(	
		[plan_code_id]
	) REFERENCES [dbo].[tl_plan_code] ( 
		[plan_code_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: policy_coverage, or the related column: plan_code_id does not exist', 16, 1)
GO
	
IF object_id(N'association_plan') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_plan_code'), N'plan_code_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[association_plan] ADD 
	CONSTRAINT [FK_association_plan_plan] FOREIGN KEY 
	(	
		[plan_code_id]
	) REFERENCES [dbo].[tl_plan_code] ( 
		[plan_code_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: association_plan, or the related column: plan_code_id does not exist', 16, 1)
GO
	
IF object_id(N'tr_plan_code_rulebook') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_plan_code'), N'plan_code_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tr_plan_code_rulebook] ADD 
	CONSTRAINT [FK_TR_PLAN__REFERENCE_TL_PLAN_] FOREIGN KEY 
	(	
		[plan_code_id]
	) REFERENCES [dbo].[tl_plan_code] ( 
		[plan_code_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tr_plan_code_rulebook, or the related column: plan_code_id does not exist', 16, 1)
GO
	
IF object_id(N'plan_benefit') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_plan_code'), N'plan_code_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[plan_benefit] ADD 
	CONSTRAINT [FK_plan_benefit_plan] FOREIGN KEY 
	(	
		[plan_code_id]
	) REFERENCES [dbo].[tl_plan_code] ( 
		[plan_code_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: plan_benefit, or the related column: plan_code_id does not exist', 16, 1)
GO
	
IF object_id(N'benefit_period') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_plan_code'), N'plan_code_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[benefit_period] ADD 
	CONSTRAINT [FK_benefit_period_plan] FOREIGN KEY 
	(	
		[plan_code_id]
	) REFERENCES [dbo].[tl_plan_code] ( 
		[plan_code_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: benefit_period, or the related column: plan_code_id does not exist', 16, 1)
GO
	
IF object_id(N'elimination_period') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_plan_code'), N'plan_code_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[elimination_period] ADD 
	CONSTRAINT [FK_elimination_period_plan] FOREIGN KEY 
	(	
		[plan_code_id]
	) REFERENCES [dbo].[tl_plan_code] ( 
		[plan_code_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: elimination_period, or the related column: plan_code_id does not exist', 16, 1)
GO
	
IF object_id(N'tl_policy_role_description') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_policy_role'), N'code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_policy_role_description] ADD 
	CONSTRAINT [FK_TL_POLIC_REFERENCE_TL_POLIC] FOREIGN KEY 
	(	
		[code]
	) REFERENCES [dbo].[tl_policy_role] ( 
		[code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_policy_role_description, or the related column: code does not exist', 16, 1)
GO
	
IF object_id(N'tl_policy_status_description') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_policy_status'), N'policy_status_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_policy_status_description] ADD 
	CONSTRAINT [FK_TL_POLIC_REF_TL_POLIC2] FOREIGN KEY 
	(	
		[policy_status_code]
	) REFERENCES [dbo].[tl_policy_status] ( 
		[policy_status_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_policy_status_description, or the related column: policy_status_code does not exist', 16, 1)
GO
	
IF object_id(N'tl_purpose_of_coverage_desc') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_purpose_of_coverage'), N'purpose_of_coverage_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_purpose_of_coverage_desc] ADD 
	CONSTRAINT [FK_TL_PURPO_REFERENCE_TL_PURPO] FOREIGN KEY 
	(	
		[purpose_of_coverage_id]
	) REFERENCES [dbo].[tl_purpose_of_coverage] ( 
		[purpose_of_coverage_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_purpose_of_coverage_desc, or the related column: purpose_of_coverage_id does not exist', 16, 1)
GO
	
IF object_id(N'insured_requirement') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_requirement'), N'requirement_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[insured_requirement] ADD 
	CONSTRAINT [FK_insured_req_tl_requirement] FOREIGN KEY 
	(	
		[requirement_code]
	) REFERENCES [dbo].[tl_requirement] ( 
		[requirement_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: insured_requirement, or the related column: requirement_code does not exist', 16, 1)
GO
	
IF object_id(N'requirement_match') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_requirement'), N'requirement_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[requirement_match] ADD 
	CONSTRAINT [FK_requirement_code] FOREIGN KEY 
	(	
		[requirement_code]
	) REFERENCES [dbo].[tl_requirement] ( 
		[requirement_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: requirement_match, or the related column: requirement_code does not exist', 16, 1)
GO
	
IF object_id(N'tr_group_requirements') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_requirement'), N'requirement_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tr_group_requirements] ADD 
	CONSTRAINT [FK_TR_GROUP_REF_1197_TL_REQUI] FOREIGN KEY 
	(	
		[requirement_code]
	) REFERENCES [dbo].[tl_requirement] ( 
		[requirement_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tr_group_requirements, or the related column: requirement_code does not exist', 16, 1)
GO
	
IF object_id(N'tr_age_face_amount_requirement') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_requirement_group'), N'requirement_group_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tr_age_face_amount_requirement] ADD 
	CONSTRAINT [FK_TR_AGE_F_REF_4196_TL_REQUI] FOREIGN KEY 
	(	
		[requirement_group_id]
	) REFERENCES [dbo].[tl_requirement_group] ( 
		[requirement_group_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tr_age_face_amount_requirement, or the related column: requirement_group_id does not exist', 16, 1)
GO
	
IF object_id(N'tr_group_requirements') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_requirement_group'), N'requirement_group_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tr_group_requirements] ADD 
	CONSTRAINT [FK_TR_GROUP_REF_1194_TL_REQUI] FOREIGN KEY 
	(	
		[requirement_group_id]
	) REFERENCES [dbo].[tl_requirement_group] ( 
		[requirement_group_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tr_group_requirements, or the related column: requirement_group_id does not exist', 16, 1)
GO
	
IF object_id(N'coverage_subaccounts') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_subaccount'), N'subaccount_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[coverage_subaccounts] ADD 
	CONSTRAINT [FK_COVERAGE_REFERENCE_TL_SUBAC] FOREIGN KEY 
	(	
		[subaccount_code]
	) REFERENCES [dbo].[tl_subaccount] ( 
		[subaccount_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: coverage_subaccounts, or the related column: subaccount_code does not exist', 16, 1)
GO
	
IF object_id(N'tl_tobacco_type_description') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_tobacco_type'), N'tobacco_type_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_tobacco_type_description] ADD 
	CONSTRAINT [FK_TL_TOBAC_REFERENCE_TL_TOBAC] FOREIGN KEY 
	(	
		[tobacco_type_id]
	) REFERENCES [dbo].[tl_tobacco_type] ( 
		[tobacco_type_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_tobacco_type_description, or the related column: tobacco_type_id does not exist', 16, 1)
GO
	
IF object_id(N'tl_tobacco_use_description') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tl_tobacco_use'), N'tobacco_use_id', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_tobacco_use_description] ADD 
	CONSTRAINT [FK_TL_TOBAC_REF_TL_TOBAC2] FOREIGN KEY 
	(	
		[tobacco_use_id]
	) REFERENCES [dbo].[tl_tobacco_use] ( 
		[tobacco_use_id]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: tl_tobacco_use_description, or the related column: tobacco_use_id does not exist', 16, 1)
GO
	
IF object_id(N'billing_code') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tpa'), N'tpa_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[billing_code] ADD 
	CONSTRAINT [FK_billing_code_tpa] FOREIGN KEY 
	(	
		[tpa_code]
	) REFERENCES [dbo].[tpa] ( 
		[tpa_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: billing_code, or the related column: tpa_code does not exist', 16, 1)
GO
	
IF object_id(N'association_plan') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'tpa'), N'tpa_code', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[association_plan] ADD 
	CONSTRAINT [FK_association_plan_tpa] FOREIGN KEY 
	(	
		[tpa_code]
	) REFERENCES [dbo].[tpa] ( 
		[tpa_code]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: association_plan, or the related column: tpa_code does not exist', 16, 1)
GO
	

DECLARE @ERR int

SET @ERR = @@ERROR
IF @@TRANCOUNT > 0
BEGIN
	IF @ERR > 0
		ROLLBACK TRANSACTION
	ELSE
		COMMIT TRANSACTION T1
END
SET XACT_ABORT OFF
	