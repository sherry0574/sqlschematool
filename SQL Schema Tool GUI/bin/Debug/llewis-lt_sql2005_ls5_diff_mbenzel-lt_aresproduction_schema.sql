
-- Diff Name: Compare results for Source DB XML snapshot: llewis-lt_sql2005_LS5_SCHEMA.xml,
-- with Target DB XML snapshot: C:\Dev\NYL\mbenzel-lt_AresProduction_SCHEMA.xml.
-- Results are the SQL changes necessary to match
-- the Target DB schema to the Source DB schema.
-- Output Date: 2/12/2009
-- Output Time: 4:37 PM
-- AutoGenerated SQL: using the SQL Schema Tool.

/*
When SET XACT_ABORT is ON, if a Transact-SQL statement raises a run-time 
error, the entire transaction is terminated and rolled back. When OFF, only the 
Transact-SQL statement that raised the error is rolled back and the transaction 
continues processing. Compile errors, such as syntax errors, are not affected by 
SET XACT_ABORT.
*/

SET QUOTED_IDENTIFIER ON
SET XACT_ABORT ON
BEGIN TRANSACTION T1 WITH MARK 'Apply Diffgram SQL'
	
-- COUNT OF ALTERED COLUMNS IN TABLE [association_plan]: 4
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[association_plan]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- Alter existing table columns 
	ALTER TABLE [dbo].[association_plan]
		ALTER COLUMN  [employee_percent_contributory]  [numeric]  NULL 
	ALTER TABLE [dbo].[association_plan]
		ALTER COLUMN  [replacement_ratio]  [numeric]  NULL 
	ALTER TABLE [dbo].[association_plan]
		ALTER COLUMN  [plan_max_multiplier]  [numeric]  NULL 
	ALTER TABLE [dbo].[association_plan]
		ALTER COLUMN  [gsi_multiplier]  [numeric]  NULL 
	
END
ELSE
	RAISERROR ('Error applying table changes: association_plan does not exist in catalog!', 16, 1)
GO

-- COUNT OF ALTERED COLUMNS IN TABLE [aus_event]: 1
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[aus_event]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- Alter existing table columns 
	ALTER TABLE [dbo].[aus_event]
		ALTER COLUMN  [param_data]  [varchar]  (4000)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL 
	
END
ELSE
	RAISERROR ('Error applying table changes: aus_event does not exist in catalog!', 16, 1)
GO

-- COUNT OF ALTERED COLUMNS IN TABLE [billing_code]: 1
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[billing_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- drop existing table columns that don't exist in new schema
	ALTER TABLE [dbo].[billing_code]
	DROP COLUMN  [alt_billing_code]  [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL 
	
END
ELSE
	RAISERROR ('Error applying table changes: billing_code does not exist in catalog!', 16, 1)
GO

-- COUNT OF ALTERED COLUMNS IN TABLE [company]: 2
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[company]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- Alter existing table columns 
	ALTER TABLE [dbo].[company]
		ALTER COLUMN  [percent_eligible_employees]  [numeric]  NULL 
	ALTER TABLE [dbo].[company]
		ALTER COLUMN  [percent_eligible_dependants]  [numeric]  NULL 
	
END
ELSE
	RAISERROR ('Error applying table changes: company does not exist in catalog!', 16, 1)
GO

-- COUNT OF ALTERED COLUMNS IN TABLE [coverage_person_fund_alloc]: 1
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[coverage_person_fund_alloc]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- Alter existing table columns 
	ALTER TABLE [dbo].[coverage_person_fund_alloc]
		ALTER COLUMN  [percent_allocation]  [numeric]  NULL 
	
END
ELSE
	RAISERROR ('Error applying table changes: coverage_person_fund_alloc does not exist in catalog!', 16, 1)
GO

-- COUNT OF ALTERED COLUMNS IN TABLE [coverage_person_insured]: 5
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[coverage_person_insured]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- Alter existing table columns 
	ALTER TABLE [dbo].[coverage_person_insured]
		ALTER COLUMN  [reinsurance_amount]  [numeric]  NULL 
	ALTER TABLE [dbo].[coverage_person_insured]
		ALTER COLUMN  [paid_amount]  [numeric]  NULL 
	ALTER TABLE [dbo].[coverage_person_insured]
		ALTER COLUMN  [medical_load_percentage]  [numeric]  NULL 
	ALTER TABLE [dbo].[coverage_person_insured]
		ALTER COLUMN  [rx_load_percentage]  [numeric]  NULL 
	ALTER TABLE [dbo].[coverage_person_insured]
		ALTER COLUMN  [industry_load_percentage]  [numeric]  NULL 
	
END
ELSE
	RAISERROR ('Error applying table changes: coverage_person_insured does not exist in catalog!', 16, 1)
GO

-- COUNT OF ALTERED COLUMNS IN TABLE [coverage_person_reinsurer]: 3
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[coverage_person_reinsurer]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- Alter existing table columns 
	ALTER TABLE [dbo].[coverage_person_reinsurer]
		ALTER COLUMN  [retention_amount]  [numeric]  NULL 
	ALTER TABLE [dbo].[coverage_person_reinsurer]
		ALTER COLUMN  [reinsurance_amount]  [numeric]  NULL 
	ALTER TABLE [dbo].[coverage_person_reinsurer]
		ALTER COLUMN  [adb_reinsured_amount]  [numeric]  NULL 
	
END
ELSE
	RAISERROR ('Error applying table changes: coverage_person_reinsurer does not exist in catalog!', 16, 1)
GO

-- COUNT OF ALTERED COLUMNS IN TABLE [coverage_person_worksheet]: 1
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[coverage_person_worksheet]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- Alter existing table columns 
	ALTER TABLE [dbo].[coverage_person_worksheet]
		ALTER COLUMN  [debit]  [numeric]  NULL 
	
END
ELSE
	RAISERROR ('Error applying table changes: coverage_person_worksheet does not exist in catalog!', 16, 1)
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[FileStore]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
-- drop original non-unique indexes on table 
	DROP INDEX [FileStore].[IX_FileStore_Id] 
END
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[FileStore]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN		
	CREATE  INDEX [IX_FileStore_Id] ON [dbo].[FileStore]([Id]) ON [PRIMARY]
END	
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
-- COUNT OF ALTERED COLUMNS IN TABLE [form_instance]: 1
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[form_instance]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- Alter existing table columns 
	ALTER TABLE [dbo].[form_instance]
		ALTER COLUMN  [last_name]  [varchar]  (250)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL 
	
END
ELSE
	RAISERROR ('Error applying table changes: form_instance does not exist in catalog!', 16, 1)
GO

-- COUNT OF ALTERED COLUMNS IN TABLE [insured_application_info]: 1
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[insured_application_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- Alter existing table columns 
	ALTER TABLE [dbo].[insured_application_info]
		ALTER COLUMN  [total_household_income]  [numeric]  NULL 
	
END
ELSE
	RAISERROR ('Error applying table changes: insured_application_info does not exist in catalog!', 16, 1)
GO

-- COUNT OF ALTERED COLUMNS IN TABLE [lab_header]: 2
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[lab_header]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- Alter existing table columns 
	ALTER TABLE [dbo].[lab_header]
		ALTER COLUMN  [last_name]  [varchar]  (250)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL 
	ALTER TABLE [dbo].[lab_header]
		ALTER COLUMN  [first_name]  [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL 
	
END
ELSE
	RAISERROR ('Error applying table changes: lab_header does not exist in catalog!', 16, 1)
GO

-- COUNT OF ALTERED COLUMNS IN TABLE [medical_provider]: 2
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[medical_provider]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- drop existing table columns that don't exist in new schema
	ALTER TABLE [dbo].[medical_provider]
	DROP COLUMN  [first_name]  [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL 
	-- add new table columns
	ALTER TABLE [dbo].[medical_provider] 
	ADD  [fist_name]  [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL 
	
END
ELSE
	RAISERROR ('Error applying table changes: medical_provider does not exist in catalog!', 16, 1)
GO

-- COUNT OF ALTERED COLUMNS IN TABLE [mib_header]: 2
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[mib_header]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- Alter existing table columns 
	ALTER TABLE [dbo].[mib_header]
		ALTER COLUMN  [last_name]  [varchar]  (250)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL 
	ALTER TABLE [dbo].[mib_header]
		ALTER COLUMN  [first_name]  [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL 
	
END
ELSE
	RAISERROR ('Error applying table changes: mib_header does not exist in catalog!', 16, 1)
GO

-- COUNT OF ALTERED COLUMNS IN TABLE [mvr_header]: 3
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[mvr_header]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- drop existing table columns that don't exist in new schema
	ALTER TABLE [dbo].[mvr_header]
	DROP COLUMN  [license_name]  [char]  (35)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL 
	-- Alter existing table columns 
	ALTER TABLE [dbo].[mvr_header]
		ALTER COLUMN  [last_name]  [varchar]  (250)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL 
	ALTER TABLE [dbo].[mvr_header]
		ALTER COLUMN  [first_name]  [varchar]  (100)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL 
	
END
ELSE
	RAISERROR ('Error applying table changes: mvr_header does not exist in catalog!', 16, 1)
GO

-- COUNT OF ALTERED COLUMNS IN TABLE [policy]: 3
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[policy]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- drop existing table columns that don't exist in new schema
	ALTER TABLE [dbo].[policy]
	DROP COLUMN  [teleunderwriting_indicator]  [int]  NULL 
	-- add new table columns
	ALTER TABLE [dbo].[policy] 
	ADD  [bank_account_name]  [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
		 [Credit_Card_Account_Name]  [varchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL 
	
END
ELSE
	RAISERROR ('Error applying table changes: policy does not exist in catalog!', 16, 1)
GO

-- COUNT OF ALTERED COLUMNS IN TABLE [policy_coverage]: 1
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[policy_coverage]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- Alter existing table columns 
	ALTER TABLE [dbo].[policy_coverage]
		ALTER COLUMN  [modal_premium_amount]  [numeric]  NULL 
	
END
ELSE
	RAISERROR ('Error applying table changes: policy_coverage does not exist in catalog!', 16, 1)
GO

-- COUNT OF ALTERED COLUMNS IN TABLE [related_policies]: 3
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[related_policies]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- Alter existing table columns 
	ALTER TABLE [dbo].[related_policies]
		ALTER COLUMN  [decision]  [numeric]  NULL 
	ALTER TABLE [dbo].[related_policies]
		ALTER COLUMN  [reinsurance_amount]  [numeric]  NULL 
	ALTER TABLE [dbo].[related_policies]
		ALTER COLUMN  [flat_extra_amount]  [numeric]  NULL 
	
END
ELSE
	RAISERROR ('Error applying table changes: related_policies does not exist in catalog!', 16, 1)
GO

-- COUNT OF ALTERED COLUMNS IN TABLE [system_search_info]: 3
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[system_search_info]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- Alter existing table columns 
	ALTER TABLE [dbo].[system_search_info]
		ALTER COLUMN  [retained_amount]  [numeric]  NULL 
	ALTER TABLE [dbo].[system_search_info]
		ALTER COLUMN  [retro_amount]  [numeric]  NULL 
	ALTER TABLE [dbo].[system_search_info]
		ALTER COLUMN  [net_amount_at_risk]  [numeric]  NULL 
	
END
ELSE
	RAISERROR ('Error applying table changes: system_search_info does not exist in catalog!', 16, 1)
GO

-- drop original table check constraints
IF (SELECT OBJECT_ID(N'DF__tl_code__languag__6D0D32F4')) IS NOT NULL AND EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[tl_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tl_code]
	DROP CONSTRAINT [DF__tl_code__languag__6D0D32F4]
END
ELSE
	PRINT 'Check Constraint DF__tl_code__languag__6D0D32F4 or the table does not exist, so it cannot be removed'
GO
	
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
-- drop existing indexes to re-add later to prevent issues with dependant columns
		
	ALTER TABLE [dbo].[tl_code] 
	DROP CONSTRAINT [pk_code_valuelist]		

END
GO
		
-- COUNT OF ALTERED COLUMNS IN TABLE [tl_code]: 1
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tl_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- Alter existing table columns 
	ALTER TABLE [dbo].[tl_code]
		ALTER COLUMN  [language_code]  [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL 
--2nd pass thru after 'Alter' table columns to handle those columns having UDDTs 
	ALTER TABLE [dbo].[tl_code]
  
  ALTER COLUMN [language_code] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL
	
END
ELSE
	RAISERROR ('Error applying table changes: tl_code does not exist in catalog!', 16, 1)
GO

		
-- re-add dropped existing indexes previously dropped to prevent issues with dependant columns		
		
IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_code'), N'language_code', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_code'), N'code_type', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'tl_code'), N'code_id', 'AllowsNull')) IS NOT NULL   ) AND EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[tl_code]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[tl_code] ADD 
	CONSTRAINT [pk_code_valuelist] PRIMARY KEY CLUSTERED 
	(
		[language_code], [code_type], [code_id]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): language_code, code_type, code_id do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
-- drop original table check constraints
IF (SELECT OBJECT_ID(N'DF__tpa__tpa_short_n__76619304')) IS NOT NULL AND EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[tpa]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[tpa]
	DROP CONSTRAINT [DF__tpa__tpa_short_n__76619304]
END
ELSE
	PRINT 'Check Constraint DF__tpa__tpa_short_n__76619304 or the table does not exist, so it cannot be removed'
GO
	
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tpa]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
-- drop existing indexes to re-add later to prevent issues with dependant columns
		
	DROP INDEX [tpa].[IX_tpa_acronym] 

END
GO
		
-- COUNT OF ALTERED COLUMNS IN TABLE [tpa]: 1
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[tpa]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	
	-- Alter existing table columns 
	ALTER TABLE [dbo].[tpa]
		ALTER COLUMN  [tpa_short_name]  [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL 
--2nd pass thru after 'Alter' table columns to handle those columns having UDDTs 
	ALTER TABLE [dbo].[tpa]
  
  ALTER COLUMN [tpa_short_name] [char]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL
	
END
ELSE
	RAISERROR ('Error applying table changes: tpa does not exist in catalog!', 16, 1)
GO

		
-- re-add dropped existing indexes previously dropped to prevent issues with dependant columns		
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[tpa]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN		
	CREATE UNIQUE INDEX [IX_tpa_acronym] ON [dbo].[tpa]([tpa_short_name]) ON [PRIMARY]
END	
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[agency_proxy_view] as
select
	person.person_id
	,person.last_name
	,person.first_name
	,person.middle_name
	,person.title
	,person.suffix
	,person.tax_id
	,person.tax_type_id
	,person.birth_date
	,person.sex
	,person.person_type_id
	,person.preferred_language_code
	,person.email_address
	,person.marital_status
	,person.client_id
	,person.party_id
	,person.alt_email_address
	,person.birth_name
	,person.preferred_contact_mode
	,person.class_type
	,person.field1
	,person.field2
	,person.field3
	,person.field4
	,person.field5
	,agency.agency_number
	,agency.routing_number
	,agency.update_date
from
	person INNER JOIN agency ON person.person_id = agency.person_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[agency_view] as
select
policy_person.policy_person_id
,policy_person.policy_id
,policy_person.role_id
,policy_person.sub_role_id
,agency.agency_number
,agency.routing_number
,agency.update_date
,person.person_id
,person.last_name
,person.first_name
,person.middle_name
,person.title
,person.suffix
,person.tax_id
,person.tax_type_id
,person.birth_date
,person.sex
,person.person_type_id
,person.preferred_language_code
,person.email_address
,person.marital_status
,person.client_id
,person.party_id
,person.alt_email_address
,person.birth_name
,person.preferred_contact_mode
,person.class_type
,person.field1
,person.field2
,person.field3
,person.field4
,person.field5
FROM
agency 
INNER JOIN person ON person.person_id = agency.person_id
INNER JOIN policy_person ON policy_person.person_id = person.person_id 
WHERE
policy_person.role_id = 'agency' 

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			--C01 BEGIN
ALTER VIEW agent_policy_proxy_view AS
SELECT DISTINCT
	pa.agent_number
	,p.policy_id
	,p.team_id
	,p.policy_number
	,p.policy_status_code
	,p.policy_status_date
	,p.company_code
	,p.priority
	,p.underwriter_id
	,uw.login_id as underwriter_login_id
	,p.case_group_id
	,p.service_associate_id
	,sa.login_id as service_associate_login_id
	,p.alternate_case_id
	,primaryplan.plan_code_id as primary_plan_code
    ,ppi.policy_person_id
	,ppi.applicant_status as applicant_status_short
	,ppi.applicant_status_date
	,ppi.underwriting_amount as insured_underwriting_amount
	,i.last_name as insured_last_name
	,i.middle_name as insured_middle_name
	,i.first_name as insured_first_name
	,i.tax_id as insured_tax_id
	,i.client_id as insured_client_id
	,ppi.primary_insured_flag
	,p.receive_date
	,p.added_date
	,p.application_number
	,p.source_info
	,p.distributor_code
FROM
policy p
INNER JOIN policy_person pp ON pp.policy_id = p.policy_id
INNER JOIN policy_person_insured ppi ON ppi.policy_person_id = pp.policy_person_id
INNER JOIN person i ON i.person_id = pp.person_id 
INNER JOIN policy_person ppa ON ppa.policy_id = p.policy_id
INNER JOIN policy_person_agent pa ON pa.policy_person_id = ppa.policy_person_id 
RIGHT OUTER JOIN  (SELECT  pc.plan_code_id
                   ,cp.person_id 
                    FROM  policy_coverage AS pc 
                    INNER JOIN coverage_person AS cp ON pc.policy_coverage_id = cp.policy_coverage_id) primaryplan 
                    ON primaryplan.person_id = pp.person_id
RIGHT OUTER JOIN (select login_id,user_id from aus_user ) uw ON uw.user_id = p.underwriter_id
RIGHT OUTER JOIN (select login_id,user_id from aus_user ) sa ON sa.user_id = p.service_associate_id
WHERE
    pa.agent_number is not null
--C01 END

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[agent_proxy_view] as
select
	person.person_id
	,person.last_name
	,person.first_name
	,person.middle_name
	,person.title
	,person.suffix
	,person.tax_id
	,person.tax_type_id
	,person.birth_date
	,person.sex
	,person.person_type_id
	,person.preferred_language_code
	,person.email_address
	,person.marital_status
	,person.client_id
	,person.party_id
	,person.alt_email_address
	,person.birth_name
	,person.preferred_contact_mode
	,person.class_type
	,person.field1
	,person.field2
	,person.field3
	,person.field4
	,person.field5
	,agent.agent_number
	,agent.routing_number
	,agent.company_code
	,agent.descriptor
from
	person INNER JOIN agent ON person.person_id = agent.person_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[agent_requirements_proxy_view]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[agent_requirements_proxy_view]
END
GO

			 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			create view [dbo].[agent_requirements_proxy_view] as
select
	pa.agent_number,
	rpv.*
from
	policy p,
	policy_person_agent pa,	
	policy_person ppa,
	requirement_proxy_view rpv
where
	pa.policy_person_id = ppa.policy_person_id and		
	ppa.policy_id = p.policy_id and
	p.policy_id = rpv.policy_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[agent_view] as
select
person.person_id
,person.last_name
,person.first_name
,person.middle_name
,person.title
,person.suffix
,person.tax_id
,person.tax_type_id
,person.birth_date
,person.sex
,person.person_type_id
,person.preferred_language_code
,person.email_address
,person.marital_status
,person.client_id
,person.party_id
,person.alt_email_address
,person.birth_name
,person.preferred_contact_mode
,person.class_type
,person.field1
,person.field2
,person.field3
,person.field4
,person.field5
,agent.agent_number
,agent.routing_number
,agent.company_code
,policy_person_agent.policy_person_id
,policy_person_agent.agency_id
,policy_person_agent.commission_split
,policy_person_agent.commission_option
,policy_person_agent.market_code
,policy_person_agent.firm_name
,policy_person_agent.level5_code
,policy_person.policy_id
,policy_person.role_id
,policy_person.sub_role_id
from
person
INNER JOIN policy_person ON policy_person.person_id = person.person_id
INNER JOIN agent ON policy_person.person_id = agent.person_id 
INNER JOIN policy_person_agent ON  policy_person_agent.policy_person_id = policy_person.policy_person_id 
where
(policy_person.role_id like 'agent%' or policy_person.role_id like 'Agent%') 

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[application_info_view] as
select
ri.create_date,
ri.match_method,
ri.status,
ri.vendor_id,
ri.manual_or_electronic_entry,
ri.expiration_date,
ri.requirement_type_id,
ri.requirement_request_id,
ri.lifespan_days,
ri.insured_requirement_id,
ai.*,
'' as last_name,
'' as middle_name,
'' as first_name
from
requirement_information ri, insured_application_info ai
where
ri.requirement_information_id = ai.requirement_information_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[association_plan_proxy_view] as
select
	ap.association_code,
	ap.plan_code_id,
	tpa_code,
	g_number,
	pc.line_of_business_code,
	mortality_max,
	billing_code,
	expiration_date
from
	association_plan ap INNER JOIN tl_plan_code pc ON pc.plan_code_id = ap.plan_code_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[aus_user_view] as
select
	person.person_id
	,person.last_name
	,person.first_name
	,person.middle_name
	,person.title
	,person.suffix
	,person.tax_id
	,person.tax_type_id
	,person.birth_date
	,person.sex
	,person.person_type_id
	,person.preferred_language_code
	,person.email_address
	,person.marital_status
	,person.client_id
	,person.party_id
	,person.alt_email_address
	,person.birth_name
	,person.preferred_contact_mode
	,person.class_type
	,person.field1
	,person.field2
	,person.field3
	,person.field4
	,person.field5
	,au.user_id
	,au.login_id
	,au.password
	,au.is_active
	,au.level_of_authority
	,au.is_underwriter
	,au.restrict_to_teams
	,au.role_id
	,au.is_service_associate
	,au.job_title
	,au.account_locked
	,au.account_locked_date
	,au.bad_login_attempt_count
	,au.last_bad_login_attempt_date
	,au.must_change_password
	,au.last_password_change_date
	,au.is_agent
	,au.agent_number
	,au.is_agency
	,au.agency_number
	,au.deleted
	,au.use_single_sign_on
FROM
	person INNER JOIN  aus_user au ON au.person_id = person.person_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[automation_event_view] as
select
	*
from
	aus_event
where
	aus_cmd >= 1100 and aus_cmd < 1200

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[benefit_party_dob_operand_view] as
select
	'getBenefitMaxPartyDOB(' + rtrim(name) + ')' as name,
	'date' as type,
	'Benefit ' + rtrim(name) + ' Max Party DOB' as display,
	'The birthdate of the youngest party on the ' + rtrim(name) + ' Benefit.'  as description,
	'' as value_list
from
	tl_benefit_type
union
select
	'getBenefitMinPartyDOB(' + rtrim(name) + ')' as name,
	'date' as type,
	'Benefit ' + rtrim(name) + ' Min Party DOB' as display,
	'The birthdate of the oldest party on the ' + rtrim(name) + ' Benefit.'  as description,
	'' as value_list
from
	tl_benefit_type

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[case_event_view] as
select
	*
from
	aus_event
where
	aus_cmd >= 100 and aus_cmd < 1000

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			-- create codes_view2 with new union
ALTER VIEW [dbo].[codes_view2] AS
select distinct 'en-us' as language_code, 'ppo_trust_state_' + lower(rtrim(t.company_code)) + '_' + lower(rtrim(pa.country_state_id)) as code_type,
cast(p.person_id as char(30)) as code_id, p.last_name as code_value, cast(c.expiration_date as char(30)) as external_code
from company c, person p, person_address pa, party_relation pr, company t where p.person_id = c.person_id and p.class_type = 'PPO' and
pa.person_id = p.person_id and pr.parent_id = p.person_id and t.person_id = pr.person_id and c.expiration_date = (select min(expiration_date)
from company, person_address where company_code = c.company_code and company.person_id = person_address.person_id and person_address.country_state_id = pa.country_state_id
and expiration_date > CURRENT_TIMESTAMP)
union
select distinct 'en-us' as language_code, 'trust_state_' + lower(rtrim(c.company_code)) as code_type, pa.country_state_id as code_id,
(select state_name from tl_country_state where country_state_id = pa.country_state_id) as code_value, '' as external_code
from company c, person p, person_address pa, party_relation pr,company ppo where p.person_id = c.person_id and
p.class_type = 'Trust' and pr.person_id = p.person_id and ppo.person_id = pr.parent_id and pa.person_id = ppo.person_id and
ppo.expiration_date > CURRENT_TIMESTAMP
union
select distinct 'en-us' as language_code, ('plan_gnum_' + SUBSTRING(ap.g_number,1,6) + '_' + SUBSTRING(ap.g_number,8,4)  + '_' + SUBSTRING(ap.g_number,13,4)) as code_type,
ap.plan_code_id as code_id, pc.description as code_value, pc.line_of_business_code as external_code from association_plan ap, tl_plan_code pc
where len(ap.g_number) >= 16 and ap.plan_code_id = pc.plan_code_id
UNION
SELECT DISTINCT
'en-us' AS language_code, 'case_request_nbr' AS code_type, plan_code_id AS code_id, code_prefix AS code_value, '' AS external_code
FROM     tl_plan_code
UNION
select 'en-us' as language_code, 'agent_number' as code_type, agent.agent_number as code_id, rtrim(agent.agent_number) as code_value, '' as external_code from agent, person where person.person_id = agent.person_id and person.last_name is null
union
select 'en-us' as language_code, 'agent_number' as code_type, agent.agent_number as code_id, rtrim(agent.agent_number) + ' - ' + rtrim(person.last_name) as code_value, '' as external_code from agent, person where person.person_id = agent.person_id and person.last_name is not null

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[company_view] as
select
	person.person_id
	,person.last_name
	,person.first_name
	,person.middle_name
	,person.title
	,person.suffix
	,person.tax_id
	,person.tax_type_id
	,person.birth_date
	,person.sex
	,person.person_type_id
	,person.preferred_language_code
	,person.email_address
	,person.marital_status
	,person.client_id
	,person.party_id
	,person.alt_email_address
	,person.birth_name
	,person.preferred_contact_mode
	,person.class_type
	,person.field1
	,person.field2
	,person.field3
	,person.field4
	,person.field5
	,company.company_code
	,company.allow_aus_approval_flag
	,company.correspondence_directory
	,company.full_time_employee_count
	,company.percent_eligible_employees
	,company.percent_eligible_dependants
	,company.current_cobra_indicator
	,company.expiration_date
from
	person INNER JOIN company ON company.person_id = person.person_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[correspondence_event_view] as
select
	*
from
	aus_event
where
	aus_cmd >= 1000 and aus_cmd < 1100

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[coverage_benefits_party_view] as
select
	bp.benefit_id 
	,bp.policy_coverage_id 
	,bp.height_inches
	,bp.weight_pounds
	,p.person_id
	,p.last_name
	,p.first_name
	,p.middle_name
	,p.title
	,p.suffix
	,p.tax_id
	,p.tax_type_id
	,p.birth_date
	,p.sex
	,p.person_type_id
	,p.preferred_language_code
	,p.email_address
	,p.marital_status
	,p.client_id
	,p.party_id
	,p.alt_email_address
	,p.birth_name
	,p.preferred_contact_mode
	,p.class_type
	,p.field1
	,p.field2
	,p.field3
	,p.field4
,p.field5
from
	person p INNER JOIN coverage_benefits_party bp  ON bp.person_id = p.person_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[coverage_subaccount_view] as
select
	coverage_subaccounts.policy_coverage_id,
	tl_subaccount.*,
	coverage_subaccounts.percentage
from
	coverage_subaccounts 
	INNER JOIN  tl_subaccount ON  tl_subaccount.subaccount_code = coverage_subaccounts.subaccount_code

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[customer_lab_report_view]
AS
select 
  r.lab_id_number,
  r.requirement_information_id,
  r.horl_code,
  c.[description],
  r.result_value,
  ISNULL((case when h.sex = 'm' then low_male else low_female end),'') as [low],
  ISNULL((case when h.sex = 'm' then high_male else high_female end),'') as [high],
  (case when 
	(case when h.sex = 'm' then low_male else low_female end) = 'negative' AND
	r.result_value <> 'NEG' AND 
        ((case when h.sex = 'm' then high_male else high_female end) IS NULL OR
	len(ltrim(rtrim((case when h.sex = 'm' then high_male else high_female end)))) = 0)
   then r.result_value else 
        case when
	   ISNUMERIC(r.result_value)=1 AND
	   ISNUMERIC(case when h.sex = 'm' then low_male else low_female end)=1 AND
	   ISNUMERIC(case when h.sex = 'm' then high_male else high_female end)=1 AND 
	   CONVERT(decimal(10,5), r.result_value) NOT BETWEEN 
	   CONVERT(decimal(10,5), (case when h.sex = 'm' then low_male else low_female end)) AND 
	   CONVERT(decimal(10,5), (case when h.sex = 'm' then high_male else high_female end))
        then r.result_value else 
	   case when
		r.result_value = 'NVG' OR (r.result_value <> 'NEG' AND
		(case when h.sex = 'm' then low_male else low_female end) IS NULL AND
		(case when h.sex = 'm' then high_male else high_female end) IS NULL)
	   then 'NVG' else 
              case when
	         NOT ISNUMERIC(r.result_value)=1 AND r.result_value <> 'NEG' AND
	         NOT ISNUMERIC(case when h.sex = 'm' then low_male else low_female end)=1 AND
	         (case when h.sex = 'm' then low_male else LOW_female end) = 'negative' AND
	         ISNUMERIC(case when h.sex = 'm' then high_male else high_female end)=1 
	      then r.result_value else 
	         case when
		    ISNUMERIC(r.result_value)=1 AND
		    NOT ISNUMERIC(case when h.sex = 'm' then low_male else low_female end)=1 AND
	      	    (case when h.sex = 'm' then low_male else LOW_female end) = 'negative' AND
		    ISNUMERIC(case when h.sex = 'm' then high_male else high_female end)=1 AND 
		    CONVERT(decimal(10,5), r.result_value) NOT BETWEEN 
		    0.0 AND 
		    CONVERT(decimal(10,5), (case when h.sex = 'm' then high_male else high_female end))
	         then r.result_value else
		    case when r.result_value <> 'NEG' AND r.result_value <> 'POS' AND NOT ISNUMERIC(r.result_value)=1
		    then 'N/A' else '' end
		 end
	      end
	   end
	end
   end) as [abnormal],
  (case when 
	(case when h.sex = 'm' then low_male else LOW_female end) = 'negative' AND
	r.result_value = 'NEG' AND 
        ((case when h.sex = 'm' then high_male else high_female end) IS NULL OR
	len(ltrim(rtrim((case when h.sex = 'm' then high_male else high_female end)))) = 0)
   then r.result_value else 
        case when
	   ISNUMERIC(r.result_value)=1 AND
	   ISNUMERIC(case when h.sex = 'm' then low_male else low_female end)=1 AND
	   ISNUMERIC(case when h.sex = 'm' then high_male else high_female end)=1 AND 
	   CONVERT(decimal(10,5), r.result_value) BETWEEN 
	   CONVERT(decimal(10,5), (case when h.sex = 'm' then low_male else low_female end)) AND 
	   CONVERT(decimal(10,5), (case when h.sex = 'm' then high_male else high_female end))
        then r.result_value else 
           case when
	      NOT ISNUMERIC(r.result_value)=1 AND r.result_value = 'NEG' AND
	      NOT ISNUMERIC(case when h.sex = 'm' then low_male else low_female end)=1 AND
	      (case when h.sex = 'm' then low_male else LOW_female end) = 'negative' AND
	      ISNUMERIC(case when h.sex = 'm' then high_male else high_female end)=1 
	   then r.result_value else 
	        case when
		   ISNUMERIC(r.result_value)=1 AND
		   NOT ISNUMERIC(case when h.sex = 'm' then low_male else low_female end)=1 AND
	      	   (case when h.sex = 'm' then low_male else LOW_female end) = 'negative' AND
		   ISNUMERIC(case when h.sex = 'm' then high_male else high_female end)=1 AND 
		   CONVERT(decimal(10,5), r.result_value) BETWEEN 
		   0.0 AND 
		   CONVERT(decimal(10,5), (case when h.sex = 'm' then high_male else high_female end))
	        then r.result_value
			else		
			case when
			r.result_value = 'NEG' AND
			(case when h.sex = 'm' then low_male else low_female end) IS NULL  AND
			(case when h.sex = 'm' then high_male else high_female end) IS NULL
			then r.result_Value else ''
			 end
		  end
       end
	end
  end) as [normal],
  ISNULL(r.range_text, '') AS range_text
from dbo.lab_result as r, dbo.lab_header as h, dbo.tl_ansi_code as c
where 
  r.lab_id_number = h.lab_id_number and 
  r.requirement_information_id = h.requirement_information_id and
  c.horl_code = r.horl_code

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[data_mart_address] as
select distinct
p.person_id,
(select pa.city from person_address pa
where (pa.address_type_code = 'RESIDENCE')
and pa.person_id = p.person_id) as residence_city,
(select pa.postal_code from person_address pa
where (pa.address_type_code = 'RESIDENCE')
and pa.person_id = p.person_id) as residence_postal_code,
(select pa.address_line1 from person_address pa
where (pa.address_type_code = 'RESIDENCE')
and pa.person_id = p.person_id) as residence_address_line1,
(select pa.address_line2 from person_address pa
where (pa.address_type_code = 'RESIDENCE')
and pa.person_id = p.person_id) as residence_address_line2,
(select pa.address_line3 from person_address pa
where (pa.address_type_code = 'RESIDENCE')
and pa.person_id = p.person_id) as residence_address_line3,
(select pa.country_id from person_address pa
where (pa.address_type_code = 'RESIDENCE')
and pa.person_id = p.person_id) as residence_country_code,
(select cs.state_name from person_address pa, tl_country_state cs
where (pa.address_type_code = 'RESIDENCE')
and pa.person_id = p.person_id
and cs.country_state_id = pa.country_state_id) as residence_state_name,
(select cs.state_code from person_address pa, tl_country_state cs
where (pa.address_type_code = 'RESIDENCE')
and pa.person_id = p.person_id
and cs.country_state_id = pa.country_state_id) as residence_state_code,
(select c.country_name from person_address pa, tl_country c
where (pa.address_type_code = 'RESIDENCE')
and pa.person_id = p.person_id
and c.country_id = pa.country_id) as residence_country_name,
(select pa.city from person_address pa
where (pa.address_type_code = 'BUSINESS')
and pa.person_id = p.person_id) as business_city,
(select pa.postal_code from person_address pa
where (pa.address_type_code = 'BUSINESS')
and pa.person_id = p.person_id) as business_postal_code,
(select pa.address_line1 from person_address pa
where (pa.address_type_code = 'BUSINESS')
and pa.person_id = p.person_id) as business_address_line1,
(select pa.address_line2 from person_address pa
where (pa.address_type_code = 'BUSINESS')
and pa.person_id = p.person_id) as business_address_line2,
(select pa.address_line3 from person_address pa
where (pa.address_type_code = 'BUSINESS')
and pa.person_id = p.person_id) as business_address_line3,
(select pa.country_id from person_address pa
where (pa.address_type_code = 'BUSINESS')
and pa.person_id = p.person_id) as business_country_code,
(select cs.state_name from person_address pa, tl_country_state cs
where (pa.address_type_code = 'BUSINESS')
and pa.person_id = p.person_id
and cs.country_state_id = pa.country_state_id) as business_state_name,
(select cs.state_code from person_address pa, tl_country_state cs
where (pa.address_type_code = 'BUSINESS')
and pa.person_id = p.person_id
and cs.country_state_id = pa.country_state_id) as business_state_code,
(select c.country_name from person_address pa, tl_country c
where (pa.address_type_code = 'BUSINESS')
and pa.person_id = p.person_id
and c.country_id = pa.country_id) as business_country_name,
(select pa.city from person_address pa
where (pa.address_type_code = 'BILLING')
and pa.person_id = p.person_id) as billing_city,
(select pa.postal_code from person_address pa
where (pa.address_type_code = 'BILLING')
and pa.person_id = p.person_id) as billing_postal_code,
(select pa.address_line1 from person_address pa
where (pa.address_type_code = 'BILLING')
and pa.person_id = p.person_id) as billing_address_line1,
(select pa.address_line2 from person_address pa
where (pa.address_type_code = 'BILLING')
and pa.person_id = p.person_id) as billing_address_line2,
(select pa.address_line3 from person_address pa
where (pa.address_type_code = 'BILLING')
and pa.person_id = p.person_id) as billing_address_line3,
(select pa.country_id from person_address pa
where (pa.address_type_code = 'BILLING')
and pa.person_id = p.person_id) as billing_country_code,
(select cs.state_name from person_address pa, tl_country_state cs
where (pa.address_type_code = 'BILLING')
and pa.person_id = p.person_id
and cs.country_state_id = pa.country_state_id) as billing_state_name,
(select cs.state_code from person_address pa, tl_country_state cs
where (pa.address_type_code = 'BILLING')
and pa.person_id = p.person_id
and cs.country_state_id = pa.country_state_id) as billing_state_code,
(select c.country_name from person_address pa, tl_country c
where (pa.address_type_code = 'BILLING')
and pa.person_id = p.person_id
and c.country_id = pa.country_id) as billing_country_name
from
person p

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[data_mart_case_log] as
select
policy_log_id as case_log_id,
policy_id as case_id,
log_text,
user_id,
log_date
from
policy_log

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[data_mart_evidence] as
select
ev.requirement_information_id,
ev.insured_requirement_id,
ev.create_date,
ev.match_method,
cast(lab.lab_id_number as int) as evidence_id,
'LAB' as requirement_type_id,
lab.last_name,
lab.first_name,
lab.ssn,
lab.birth_date
from
lab_header lab, requirement_information ev
where
lab.requirement_information_id = ev.requirement_information_id
union
select
ev.requirement_information_id,
ev.insured_requirement_id,
ev.create_date,
ev.match_method,
mvr.mvr_header_id as evidence_id,
'MVR' as requirement_type_id,
mvr.last_name,
mvr.first_name,
mvr.soc_sec_no as ssn,
mvr.birth_date
from
mvr_header mvr, requirement_information ev
where
mvr.requirement_information_id = ev.requirement_information_id
union
select
ev.requirement_information_id,
ev.insured_requirement_id,
ev.create_date,
ev.match_method,
mib.mib_header_id as evidence_id,
'MIB' as requirement_type_id,
mib.last_name,
mib.first_name,
'' as ssn,
mib.birth_date
from
mib_header mib INNER JOIN  requirement_information ev ON mib.requirement_information_id = ev.requirement_information_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[data_mart_impairment] as
select
coverage_person_impairment_id as impairment_id,
coverage_person_id as coverage_id,
impairment_restriction_code as impairment_code,
impairment_text
from
coverage_person_impairment

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[data_mart_lab_result] as
select
p.policy_number,
lh.lab_receive_date,
lh.last_name,
lh.first_name,
lh.birth_date,
lh.sex as gender,
lr.horl_code as ansi_code,
ac.description as test_name,
lr.result_value as test_result
from
lab_header lh,
lab_result lr,
insured_requirement ir,
tl_ansi_code ac,
policy_person pp,
policy p
where
lh.requirement_information_id = lr.requirement_information_id and
lr.horl_code = ac.horl_code and
lh.requirement_information_id = ir.requirement_information_id and
ir.policy_person_id = pp.policy_person_id and
pp.policy_id = p.policy_id
union
select
' ' as policy_number,
lh.lab_receive_date,
lh.last_name,
lh.first_name,
lh.birth_date,
lh.sex as gender,
lr.horl_code as ansi_code,
ac.description as test_name,
lr.result_value as test_result
from
lab_header lh,
lab_result lr,
tl_ansi_code ac
where
lh.requirement_information_id = lr.requirement_information_id and
lr.horl_code = ac.horl_code and
lh.requirement_information_id not in (select requirement_information_id from insured_requirement where requirement_information_id is not null)

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[data_mart_phone] as
select distinct
p.person_id,
(select ph.country_calling_code from person_phone ph
where ph.phone_type_code = 'HOME'
and ph.person_id = p.person_id) as home_phone_country_code,
(select ph.area_code from person_phone ph
where ph.phone_type_code = 'HOME'
and ph.person_id = p.person_id) as home_phone_area_code,
(select ph.prefix from person_phone ph
where ph.phone_type_code = 'HOME'
and ph.person_id = p.person_id) as home_phone_prefix,
(select ph.suffix from person_phone ph
where ph.phone_type_code = 'HOME'
and ph.person_id = p.person_id) as home_phone_suffix,
(select ph.extension from person_phone ph
where ph.phone_type_code = 'HOME'
and ph.person_id = p.person_id) as home_phone_extension,
(select ph.pin from person_phone ph
where ph.phone_type_code = 'HOME'
and ph.person_id = p.person_id) as home_phone_pin,
(select ph.country_calling_code from person_phone ph
where ph.phone_type_code = 'WORK'
and ph.person_id = p.person_id) as work_phone_country_code,
(select ph.area_code from person_phone ph
where ph.phone_type_code = 'WORK'
and ph.person_id = p.person_id) as work_phone_area_code,
(select ph.prefix from person_phone ph
where ph.phone_type_code = 'WORK'
and ph.person_id = p.person_id) as work_phone_prefix,
(select ph.suffix from person_phone ph
where ph.phone_type_code = 'WORK'
and ph.person_id = p.person_id) as work_phone_suffix,
(select ph.extension from person_phone ph
where ph.phone_type_code = 'WORK'
and ph.person_id = p.person_id) as work_phone_extension,
(select ph.pin from person_phone ph
where ph.phone_type_code = 'WORK'
and ph.person_id = p.person_id) as work_phone_pin,
(select ph.country_calling_code from person_phone ph
where ph.phone_type_code = 'FAX'
and ph.person_id = p.person_id) as fax_country_code,
(select ph.area_code from person_phone ph
where ph.phone_type_code = 'FAX'
and ph.person_id = p.person_id) as fax_area_code,
(select ph.prefix from person_phone ph
where ph.phone_type_code = 'FAX'
and ph.person_id = p.person_id) as fax_prefix,
(select ph.suffix from person_phone ph
where ph.phone_type_code = 'FAX'
and ph.person_id = p.person_id) as fax_suffix,
(select ph.extension from person_phone ph
where ph.phone_type_code = 'FAX'
and ph.person_id = p.person_id) as fax_extension,
(select ph.pin from person_phone ph
where ph.phone_type_code = 'FAX'
and ph.person_id = p.person_id) as fax_pin
from
person p

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[diary_activity_proxy_view] as
select
	n.author as user_id,
	nu.login_id as user_login_id,
	n.diary_date,
	p.policy_id,
	p.policy_number,
	i.title as insured_title,
	i.last_name as insured_last_name,
	i.middle_name as insured_middle_name,
	i.first_name as insured_first_name,
	i.suffix as insured_suffix,
	n.topic,
	p.team_id
from
	policy p
	INNER JOIN policy_person pp ON pp.policy_id = p.policy_id
	INNER JOIN policy_person_insured ppi ON ppi.policy_person_id = pp.policy_person_id
	INNER JOIN person i ON i.person_id = pp.person_id 
	INNER JOIN notes n ON pp.policy_person_id = n.policy_person_id
	RIGHT OUTER JOIN aus_user nu ON nu.user_id = n.author
where
	n.diary_date is not NULL and
	(n.note_type='Req' or n.note_type='Refer' or n.note_type='Review') 

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[evidence_status_view] as
SELECT     ri.requirement_information_id, ri.create_date, ri.match_method, ri.status, ri.vendor_id, ri.manual_or_electronic_entry, ri.expiration_date, ri.added_by, 
                      ri.requirement_type_id, ri.requirement_request_id, ri.lifespan_days, es.evidence_status_id, es.insured_requirement_id, es.status_id, es.code_source, 
                      es.code, es.message_text, es.status_date, '' AS last_name, '' AS middle_name, '' AS first_name
FROM         requirement_information AS ri INNER JOIN
                      evidence_status AS es ON ri.requirement_information_id = es.requirement_information_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[form_data_proxy_view] as
select
	fi.requirement_information_id,
	0 as team_id,
	fi.form_code,
	fi.case_number,
	fi.last_name,
	fi.first_name,
	fi.middle_name,
	fi.title,
	fi.suffix,
	fi.birthdate,
	fi.sex,
	fi.tax_id_no,
	fi.policy_person_id,
	fi.added_by,
	u.last_name as user_last_name,
	u.first_name as user_first_name,
	fi.updated_by,
	ri.create_date,
	ri.expiration_date,
	ri.requirement_type_id
from
	requirement_information ri 
	INNER JOIN form_instance fi ON  fi.requirement_information_id = ri.requirement_information_id 
	INNER JOIN aus_user au ON fi.added_by = au.user_id 
	INNER JOIN person u ON au.person_id = u.person_id
union select
	fi.requirement_information_id,
	tu.team_id,
	fi.form_code,
	fi.case_number,
	fi.last_name,
	fi.first_name,
	fi.middle_name,
	fi.title,
	fi.suffix,
	fi.birthdate,
	fi.sex,
	fi.tax_id_no,
	fi.policy_person_id,
	fi.added_by,
	u.last_name as user_last_name,
	u.first_name as user_first_name,
	fi.updated_by,
	ri.create_date,
	ri.expiration_date,
	ri.requirement_type_id
from
	requirement_information ri
	INNER JOIN form_instance fi ON fi.requirement_information_id = ri.requirement_information_id
	INNER JOIN aus_user au ON fi.added_by = au.user_id
	INNER JOIN person u ON au.person_id = u.person_id
	INNER JOIN tr_user_team tu ON tu.user_id = fi.added_by

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[form_data_view] as
select
	fi.requirement_information_id
	,fi.form_code
	,fi.case_number
	,fi.last_name
	,fi.first_name
	,fi.middle_name
	,fi.title
	,fi.suffix
	,fi.birthdate
	,fi.sex
	,fi.tax_id_no
	,fi.added_date
	,fi.added_by
	,fi.update_date
	,fi.updated_by
	,fi.policy_person_id
	,fi.form_data
	,fi.agent_number
	,fi.contact_id
	,ri.create_date
	,ri.match_method
	,ri.status
	,ri.vendor_id
	,ri.manual_or_electronic_entry
	,ri.expiration_date
	,ri.requirement_type_id
	,ri.requirement_request_id
	,ri.lifespan_days
	,ri.insured_requirement_id
from
	requirement_information ri 
	INNER JOIN  form_instance fi ON fi.requirement_information_id = ri.requirement_information_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[form_question_cmt_operand_view] as
select
	'getInsured.getFormQuestionComments(Form' + rtrim(form_code) + 'Question' + rtrim(question_label) + ')' as name,
	'str' as type,
	'Form ' + rtrim(form_code) + ' Question ' + rtrim(question_label) + ' (Comments)' as display,
	'Comment for Question ' + rtrim(question_label) + ': ' + rtrim(question_text) as description,
	'' as value_list
from
	form_question

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[form_question_operand_view] as
select
	'getInsured.getFormQuestionValue(Form' + rtrim(form_code) + 'Question' + rtrim(question_label) + ')' as name,
	'str' as type,
	'Form ' + rtrim(form_code) + ' Question ' + rtrim(question_label) as display,
	'Question ' + rtrim(question_label) + ': ' + rtrim(question_text) as description,
	'Answer Set ' + rtrim(answer_set_name) as value_list
from
	form_question

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[form_question_proxy_view] as
select
	grp.form_question_group_id,
	grp.form_code,
	grp.form_section_id,
	grp.display_sequence,
	grp.group_name,
	q.question_id,
	q.sequence_number,
	q.question_label,
	q.question_text,
	q.question_type,
	q.data_type,
	q.answer_set_name,
	q.min_size,
	q.max_size,
	q.external_question_number,
	q.alt_question_text
from
	form_question_group grp INNER JOIN  form_question q
	ON 
	grp.form_question_group_id = q.question_group_id and
	grp.form_code = q.form_code and
	grp.form_section_id = q.form_section_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[ins_open_post_issue_req_count] as
SELECT     ir.policy_person_id, COUNT(ir.insured_requirement_id) AS open_pi_req
FROM         insured_requirement AS ir INNER JOIN
                      tl_requirement AS t ON ir.requirement_code = t.requirement_code
WHERE     (ir.closed_disposition IS NULL OR
                      ir.closed_disposition IN ('O', 'OR', 'H', 'R')) AND (t.requirement_category = 0)
GROUP BY ir.policy_person_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[insured] as
select
policy_person.policy_id
,person.person_id
,person.last_name
,person.first_name
,person.middle_name
,person.title
,person.suffix
,person.tax_id
,person.tax_type_id
,person.birth_date
,person.sex
,person.person_type_id
,person.preferred_language_code
,person.email_address
,person.marital_status
,person.client_id
,person.party_id
,person.alt_email_address
,person.birth_name
,person.preferred_contact_mode
,person.class_type
,person.field1
,person.field2
,person.field3
,person.field4
,person.field5
,policy_person_insured.policy_person_id
,policy_person_insured.signed_state_id
,policy_person_insured.underwriting_amount
,policy_person_insured.primary_insured_flag
,policy_person_insured.aviation_exclusion
,policy_person_insured.add_uw_amt
,policy_person_insured.applicant_status
,policy_person_insured.applicant_status_date
,policy_person_insured.is_member
,policy_person_insured.allow_auto_approval
,policy_person_insured.adverse_history
,policy_person_insured.und_allow_auto_approval
,policy_person_insured.und_allow_jet_issue
,policy_person_insured.und_allow_auto_ordering
,policy_person_insured.added_date
,policy_person_insured.added_by
,policy_person_insured.reopen_date
,policy_person_insured.retro_type
,policy_person_insured.aviation_flag
,policy_person_insured.entertainer_flag
,policy_person_insured.sports_flag
,policy_person_insured.foreign_flag
,policy_person_insured.additional_in_force
,policy_person_insured.signed_country_id
,policy_person_insured.rx_threshold
,policy_person_insured.primary_reference_id
,policy_person_insured.medical_coverage_indicator
,policy_person_insured.dental_coverage_indicator
,policy_person_insured.vision_coverage_indicator
,policy_person.role_id
,policy_person.sub_role_id
,policy_person.relationship_to_insured
from
person 
INNER JOIN policy_person  ON policy_person.person_id = person.person_id
INNER JOIN policy_person_insured ON policy_person_insured.policy_person_id = policy_person.policy_person_id 
WHERE
policy_person.role_id = 'insured' 

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[insured_cov_beneficiary_view] as
select
	coverage_person.policy_coverage_id
	,coverage_person.role_id
	,coverage_person.relationship_to_insured_code
	,coverage_person_beneficiary.coverage_person_id
	,coverage_person_beneficiary.beneficiary_type
	,coverage_person_beneficiary.percentage
	,coverage_person_beneficiary.amount
	,coverage_person_beneficiary.irrevokable_indicator
	,coverage_person_beneficiary.age
	,coverage_person_beneficiary.benefit_type
	,person.person_id
	,person.last_name
	,person.first_name
	,person.middle_name
	,person.title
	,person.suffix
	,person.tax_id
	,person.tax_type_id
	,person.birth_date
	,person.sex
	,person.person_type_id
	,person.preferred_language_code
	,person.email_address
	,person.marital_status
	,person.client_id
	,person.party_id
	,person.alt_email_address
	,person.birth_name
	,person.preferred_contact_mode
	,person.class_type
	,person.field1
	,person.field2
	,person.field3
	,person.field4
	,person.field5
from
	person
	INNER JOIN coverage_person ON  person.person_id = coverage_person.person_id 
	INNER JOIN coverage_person_beneficiary ON coverage_person_beneficiary.coverage_person_id = coverage_person.coverage_person_id
where
	(coverage_person.role_id = 'primarybeneficiary' or
	coverage_person.role_id = 'contigbeneficiary') 

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[insured_coverages_view] as
select
pc.policy_coverage_id
,pc.policy_id
,pc.plan_code_id
,pc.death_benefit_option_code
,pc.purpose_of_coverage_id
,pc.coverage_type
,pc.indicator_code
,pc.amount
,pc.premium_mode
,pc.investment_objective
,pc.pref_date_of_withdrawl
,pc.planned_premium
,pc.initial_planned_premium
,pc.equivalent_age
,pc.can_take_final_action_flag
,pc.dividend_option
,pc.approved_amount
,pc.benefit_amount_basis
,pc.modal_premium_amount
,cp.person_id
,cp.role_id
,cp.relationship_to_insured_code
,cpi.policy_person_id
,cpi.coverage_person_id
,cpi.perm_flat_extra_amount
,cpi.temp_flat_extra_amount
,cpi.temp_flat_extra_period
,cpi.flat_extra_reason
,cpi.temp_table_rating
,cpi.temp_table_rating_reason
,cpi.rate_class_quoted
,cpi.rate_class_approved
,cpi.rate_class_issued
,cpi.aviation_exclusion
,cpi.perm_table_rating
,cpi.perm_table_rating_reason
,cpi.coverage_status
,cpi.reason_text
,cpi.is_smoker
,cpi.final_action_note
,cpi.business_ownership_percent
,cpi.final_action_by_id
,cpi.final_action_date
,cpi.elimination_days
,cpi.payout_frequency
,cpi.waiting_period
,cpi.g_number
,cpi.cola
,cpi.own_occ
,cpi.spo_amount
,cpi.web_quoted_class
,cpi.issued_times_standard
,cpi.jls_flag
,cpi.split_flag
,cpi.split_detail
,cpi.reinsurance_company_code
,cpi.reinsurance_amount
,cpi.rated_up_age
,cpi.paid_amount
,cpi.effective_date
,cpi.benefit_period
,cpi.elimination_period
,cpi.approved_benefit_period
,cpi.approved_elimination_period
,cpi.rate_class_prior_to_rx
,cpi.past_coverage_indicator
,cpi.reg60_indicator
,cpi.medical_load_percentage
,cpi.rx_load_percentage
,cpi.industry_load_percentage
,cpi.copay_amount
,cpi.deductable_amount
,cpi.coinsurance_limit
,cpi.max_out_pocket_amount
,cpi.hsa_indicator
,cpi.rx_drug_option
,cpi.joint_age
,cpi.approved_plan_code_id
,cpi.guarantee_period
,cpi.ppo_id
,cpi.coverage_duration
,cpi.do_not_offer_flag
,cpi.exchange_flag
,cpi.issue_age
FROM 
policy_coverage pc
INNER JOIN coverage_person cp ON cp.policy_coverage_id = pc.policy_coverage_id
INNER JOIN coverage_person_insured cpi ON cpi.coverage_person_id = cp.coverage_person_id 

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW lab_comment_operand_view as
SELECT   DISTINCT 
			   'getInsured.getLabCommentsById('+  RTRIM(remark_id) +  ')' AS name, 
               'str' AS type, 
               'Lab Comment:' + RTRIM(remark_id) AS display, 
               'Lab Comment Code:' + RTRIM(remark_id) AS description, 
               '' AS value_list
FROM     dbo.lab_comment

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[lab_proxy_view] as
select
	ev.requirement_information_id,
	ev.create_date,
	ev.expiration_date,
	ev.insured_requirement_id,
	lab.lab_id_number,
	lab.lab_type_id,
	lab.drawn_date,
	lab.test_date,
	lab.last_name,
	lab.first_name,
	lab.middle_name,
	lab.ssn,
	lab.birth_date,
	lab.sex,
	lab.lab_receive_date,
	lab.company_code
from
	lab_header lab
	INNER JOIN requirement_information ev ON lab.requirement_information_id = ev.requirement_information_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[lab_result_operand_view] as
select
	'getInsured.getLabResultValueById(' + rtrim(horl_code) + ')' as name,
	'dec' as type,
	'Lab Result ' + rtrim(horl_code) + ': ' + rtrim(description) as display,
	(rtrim(horl_code) + ' ' + rtrim(description) + ', Male: ' + rtrim(low_male) + ' - ' + rtrim(high_male) + ' ' + rtrim(unit) + ', Female: ' + rtrim(low_female) + ' - ' + rtrim(high_female) + ' ' + rtrim(unit)) as description,
	'' as value_list
from
	tl_ansi_code
where
	low_male is not null
union
select
	'getInsured.getLabResultValueById(' + rtrim(horl_code) + ')' as name,
	'dec' as type,
	'Lab Result ' + rtrim(horl_code) + ': ' + rtrim(description) as display,
	(rtrim(horl_code) + ' ' + rtrim(description)) as description,
	'' as value_list
from
	tl_ansi_code
where
	low_male is null

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[lab_result_text_operand_view] as
select
	'getInsured.getLabResultTextById(' + rtrim(horl_code) + ')' as name,
	'str' as type,
	'Lab Result ' + rtrim(horl_code) + ': ' + rtrim(description) + ' (Text)' as display,
	(rtrim(horl_code) + ' ' + rtrim(description) + ' (Text), Male: ' + rtrim(low_male) + ' - ' + rtrim(high_male) +
	' ' + rtrim(unit) + ', Female: ' + rtrim(low_female) + ' - ' + rtrim(high_female) + ' ' + rtrim(unit)) as description,
	'' as value_list
from
	tl_ansi_code
where
	low_male is not null
union
select
	'getInsured.getLabResultTextById(' + rtrim(horl_code) + ')' as name,
	'str' as type,
	'Lab Result ' + rtrim(horl_code) + ': ' + rtrim(description) + ' (Text)' as display,
	(rtrim(horl_code) + ' ' + rtrim(description)) + '(Text)' as description,
	'' as value_list
from
	tl_ansi_code
where
	low_male is null

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[lab_specimen_match_view] as
select
	lab_specimin_id as lab_specimen_id
from
	tl_lab_specimen
where
	can_match is not null and
	can_match <> 0

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[lab_view] as
SELECT DISTINCT 
                      req.policy_person_id, ev.create_date, ev.match_method, ev.status, ev.vendor_id, ev.manual_or_electronic_entry, ev.expiration_date, ev.added_by, 
                      ev.requirement_type_id, ev.requirement_request_id, ev.lifespan_days, ev.insured_requirement_id, lab.lab_id_number, 
                      lab.requirement_information_id, lab.lab_type_id, lab.drawn_date, lab.last_food, lab.last_food_time, lab.last_food_num, lab.agency_id, 
                      lab.special_conditions, lab.examiner, lab.city, lab.state, lab.process_type, lab.underwriter_code, lab.test_date, lab.barcode_number, lab.last_name, 
                      lab.first_name, lab.middle_name, lab.ssn, lab.birth_date, lab.sex, lab.lab_transmit_date, lab.lab_receive_date, lab.ticket_number, lab.company_code, 
                      lab.ins_type_life, lab.ins_type_health, lab.ins_type_disability, lab.ins_type_group, lab.ins_type_individual, lab.insurance_amount, 
                      lab.drawn_date_serum, lab.signature_present, lab.policy_number, lab.completed_date, lab.agent_name, lab.agent_city, lab.agent_state, lab.agent_zip, 
                      lab.examiner_company_code, lab.examiner_state, lab.special_status_indicator, lab.applicant_address, lab.applicant_zip, lab.state_agent, 
                      lab.time_collected, lab.referrence_number
FROM         insured_requirement AS req INNER JOIN
                      requirement_information AS ev ON req.requirement_information_id = ev.requirement_information_id INNER JOIN
                      lab_header AS lab ON ev.requirement_information_id = lab.requirement_information_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[log_event_view] as
select
	*
from
	aus_event
where
	aus_cmd >= 20 and aus_cmd < 30

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[ls_system_search_view] as
select p.policy_number as policy_number,
       per.last_name,
       per.first_name ,
       per.birth_date,
       per.tax_id,
      (select per2.last_name from company c, person per2 where  p.cedent_company_code = c.company_code and c.person_id = per2.person_id) as cedent_company,
         pc.approved_amount as decision_amount,
       cpi.coverage_status as action,
       cpi.perm_table_rating as rating,
      (select 'yes'from coverage_person_insured cpi2 where cpi.policy_person_id = cpi2.policy_person_id and cpi.coverage_person_id = cpi2.coverage_person_id and cpi.is_smoker = -1
       union select 'no'from coverage_person_insured cpi2 where cpi.policy_person_id = cpi2.policy_person_id and cpi.coverage_person_id = cpi2.coverage_person_id and cpi.is_smoker = 0
       )  as smoker,
       cpi.final_action_date as action_date,
       p.updated_date as policy_date,
       p.policy_status
from policy p, policy_person pp, person per, coverage_person_insured cpi, policy_coverage pc, coverage_person cp
where p.policy_id = pp.policy_id
and p.policy_id = pc.policy_id
and pp.role_id = 'insured'
and pp.person_id = per.person_id
and pc.policy_coverage_id = cp.policy_coverage_id
and cpi.coverage_person_id = cp.coverage_person_id
and pp.policy_person_id = cpi.policy_person_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[mib_proxy_view] as
select
	mib.*,
	ev.expiration_date,
	ev.create_date,
	ev.person_id,
	ev.match_method,
	ev.status,
	ev.vendor_id,
	ev.manual_or_electronic_entry,
	ev.added_by,
	ev.requirement_type_id,
	ev.requirement_request_id,
	ev.lifespan_days,
	ev.insured_requirement_id
from
	mib_header mib
	INNER JOIN requirement_information ev ON mib.requirement_information_id = ev.requirement_information_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[mib_view] as
select distinct
	req.policy_person_id
	,ev.create_date
	,ev.match_method
	,ev.status
	,ev.vendor_id
	,ev.manual_or_electronic_entry
	,ev.expiration_date
	,ev.added_by
	,ev.requirement_type_id
	,ev.requirement_request_id
	,ev.lifespan_days
	,ev.insured_requirement_id
	,mib.mib_header_id
	,mib.requirement_information_id
	,mib.policy_number
	,mib.birth_date
	,mib.place_of_birth
	,mib.application_prefix
	,mib.error_msg_text
	,mib.rec_type
	,mib.csy
	,mib.dcode
	,mib.batch_number
	,mib.inq_number
	,mib.inq_type
	,mib.reply_type
	,mib.last_name
	,mib.first_name
	,mib.middle_name
	,mib.inquiry_date
	,mib.modify_datetime
	,mib.occupation
from
	insured_requirement req
	INNER JOIN requirement_information ev ON req.insured_requirement_id = ev.insured_requirement_id 
	INNER JOIN mib_header mib ON ev.requirement_information_id = mib.requirement_information_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[mvr_proxy_view] as
select
	mvr.*,
	ev.expiration_date,
	ev.create_date,
	ev.insured_requirement_id
from
	mvr_header mvr
	INNER JOIN requirement_information ev ON mvr.requirement_information_id = ev.requirement_information_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[mvr_view] as
select distinct
	req.policy_person_id
	,ev.create_date
	,ev.match_method
	,ev.status
	,ev.vendor_id
	,ev.manual_or_electronic_entry
	,ev.expiration_date
	,ev.added_by
	,ev.requirement_type_id
	,ev.requirement_request_id
	,ev.lifespan_days
	,ev.insured_requirement_id
	,mvr.mvr_header_id
	,mvr.requirement_information_id
	,mvr.report_date
	,mvr.state
	,mvr.license_number
	,mvr.birth_date
	,mvr.soc_sec_no
	,mvr.license_status
	,mvr.license_class
	,mvr.issue_date
	,mvr.expire_date
	,mvr.restrictions
	,mvr.driver_information
	,mvr.last_name
	,mvr.first_name
	,mvr.middle_name
	,mvr.license_address
	,mvr.license_city_state
	,mvr.batch_number
	,mvr.batch_sequence
	,mvr.modify_datetime
	,mvr.report_status
from
	insured_requirement req
	INNER JOIN requirement_information ev ON req.requirement_information_id = ev.requirement_information_id
	INNER JOIN mvr_header mvr ON ev.requirement_information_id = mvr.requirement_information_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[owner_view] as
select
policy_person.policy_id
,policy_person.policy_person_id
,policy_person.relationship_to_insured
,policy_person.role_id
,policy_person.sub_role_id
,person.person_id
,person.last_name
,person.first_name
,person.middle_name
,person.title
,person.suffix
,person.tax_id
,person.tax_type_id
,person.birth_date
,person.sex
,person.person_type_id
,person.preferred_language_code
,person.email_address
,person.marital_status
,person.client_id
,person.party_id
,person.alt_email_address
,person.birth_name
,person.preferred_contact_mode
,person.class_type
,person.field1
,person.field2
,person.field3
,person.field4
,person.field5
from
person INNER JOIN policy_person  ON policy_person.person_id = person.person_id 
where
policy_person.role_id = 'owner'

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[paramed_view] as
select
	p.requirement_information_id
	,p.barcode_number
	,p.birthdate
	,p.sex
	,p.last_name
	,p.first_name
	,p.middle_name
	,p.title
	,p.suffix
	,p.tax_id_no
	,p.agency_number
	,p.agency_name
	,p.agent_number
	,p.agent_name
	,p.extract_date
	,p.extract_file_name
	,p.import_date
	,p.added_date
	,p.added_by
	,p.update_date
	,p.updated_by
	,p.policy_person_id
	,p.doctor_name
	,p.doctor_addr
	,p.doctor_city
	,p.doctor_state
	,p.doctor_zip
	,p.last_visit_date
	,p.visit_reason
	,p.findings
	,p.treatments
	,p.still_under_treatment_flag
	,p.prior_consultations_flag
	,p.prior_consultation_detail
	,p.manual_entry_flag
	,p.height_inches
	,p.did_you_weigh_flag
	,p.did_you_measure_flag
	,p.weight_pounds
	,p.weight_loss_gain
	,p.weight_change_reason
	,p.waist_size
	,p.chest_exhale
	,p.chest_inhale
	,p.systolic
	,p.diastolic
	,p.pulse
	,p.exam_company_number
	,p.exam_company_name
	,p.examiner_number
	,p.examiner_name
	,p.are_you_a_doctor_flag
	,p.any_answered_yes
	,p.any_additional_information
	,p.any_unanswered_questions
	,p.any_underlined_words
	,ri.create_date
	,ri.match_method
	,ri.status
	,ri.vendor_id
	,ri.manual_or_electronic_entry
	,ri.expiration_date
	,ri.requirement_type_id
	,ri.requirement_request_id
	,ri.lifespan_days
	,ri.insured_requirement_id
from
	requirement_information ri INNER JOIN paramed p ON p.requirement_information_id = ri.requirement_information_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[party_proxy_person_view] as
select
  '' as case_party_id
  ,'' as case_id
  ,'' as party_type
  ,'' as relation
  ,'' as case_group_id
	,person.person_id
	,person.last_name
	,person.first_name
	,person.middle_name
	,person.title
	,person.suffix
	,person.tax_id
	,person.tax_type_id
	,person.birth_date
	,person.sex
	,person.person_type_id
	,person.preferred_language_code
	,person.email_address
	,person.marital_status
	,person.client_id
	,person.party_id
	,person.alt_email_address
	,person.birth_name
	,person.preferred_contact_mode
	,person.class_type
	,person.field1
	,person.field2
	,person.field3
	,person.field4
	,person.field5
from
  person
where
  (person_type_id is null or person_type_id <> 'Company')

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[party_proxy_view] as
SELECT pp.policy_person_id AS case_party_id
      , pp.policy_id AS case_id
      , pp.role_id AS party_type
      , pp.relationship_to_insured AS relation
      , p.case_group_id
      , per.person_id
      , per.party_id
      , per.last_name
      , per.first_name
      , per.middle_name
      , per.birth_name
      , per.title
      , per.suffix
      , per.tax_id
      , per.tax_type_id
      , per.birth_date
      , per.sex
      , per.person_type_id
      , per.preferred_language_code
      , per.email_address
      , per.marital_status
      , per.client_id
      , per.alt_email_address
      , per.preferred_contact_mode
      , per.class_type
      , per.field1
      , per.field2
      , per.field3
      , per.field4
      , per.field5
      ,ppi.primary_insured_flag AS primary_flag
FROM  policy p 
      INNER JOIN policy_person pp ON p.policy_id = pp.policy_id 
      INNER JOIN person per ON pp.person_id = per.person_id
      left outer join (SELECT primary_insured_flag, policy_person_id FROM policy_person_insured 
         ) ppi on  pp.policy_person_id = ppi.policy_person_id
WHERE     (per.person_type_id IS NULL) OR
                      (per.person_type_id <> 'Company')
UNION
SELECT cp.coverage_person_id AS case_party_id
      , pc.policy_id AS case_id
      , cp.role_id AS party_type
      , cp.relationship_to_insured_code AS relation
      , p.case_group_id
      , per.person_id
      , per.party_id
      , per.last_name
      , per.first_name
      , per.middle_name
      , per.birth_name
      , per.title
      , per.suffix
      , per.tax_id
      , per.tax_type_id
      , per.birth_date
      , per.sex
      , per.person_type_id
      , per.preferred_language_code
      , per.email_address
      , per.marital_status
      , per.client_id
      , per.alt_email_address
      , per.preferred_contact_mode
      , per.class_type
      , per.field1
      , per.field2
      , per.field3
      , per.field4
      , per.field5
      , 0 AS primary_flag
FROM  person per 
      INNER JOIN coverage_person cp ON per.person_id = cp.person_id 
      INNER JOIN policy_coverage pc ON cp.policy_coverage_id = pc.policy_coverage_id 
      INNER JOIN policy p ON pc.policy_id = p.policy_id
WHERE     (cp.role_id IS NULL OR
                      cp.role_id <> 'insured') AND (per.person_type_id IS NULL OR
                      per.person_type_id <> 'Company')

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[party_relation_view] as
select 
	pr.parent_id 
	,person.person_id
	,person.last_name
	,person.first_name
	,person.middle_name
	,person.title
	,person.suffix
	,person.tax_id
	,person.tax_type_id
	,person.birth_date
	,person.sex
	,person.person_type_id
	,person.preferred_language_code
	,person.email_address
	,person.marital_status
	,person.client_id
	,person.party_id
	,person.alt_email_address
	,person.birth_name
	,person.preferred_contact_mode
	,person.class_type
	,person.field1
	,person.field2
	,person.field3
	,person.field4
	,person.field5
FROM party_relation pr INNER JOIN  person ON pr.person_id = person.person_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[party_requirement_view] as
select
	p.party_id,
	ir.policy_person_id,
	ir.insured_requirement_id,
	ir.ordered_date,
	ir.manual_or_automatic_entry,
	ir.requirement_code,
	ir.provider,
	ir.evidence_type,
	ir.provider_order_id,
	'' as closed_date
from
	person p
	INNER JOIN policy_person pp ON p.person_id = pp.person_id 
	INNER JOIN insured_requirement ir ON ir.policy_person_id = pp.policy_person_id
where
	ir.provider_order_id is null
union
select
	p.party_id,
	ir.policy_person_id,
	ir.insured_requirement_id,
	ir.ordered_date,
	ir.manual_or_automatic_entry,
	ir.requirement_code,
	ir.provider,
	ir.evidence_type,
	ir.provider_order_id,
	po.closed_date
from
	person p
	INNER JOIN policy_person pp ON  p.person_id = pp.person_id 
	INNER JOIN insured_requirement ir ON ir.policy_person_id = pp.policy_person_id 
	INNER JOIN provider_order po ON po.provider_order_id = ir.provider_order_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[party_view] as
select * from person where class_type is not null

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[payor_view] as
select
policy_person.policy_id
,policy_person.policy_person_id
,policy_person.relationship_to_insured
,policy_person.role_id
,policy_person.sub_role_id
,person.person_id
,person.last_name
,person.first_name
,person.middle_name
,person.title
,person.suffix
,person.tax_id
,person.tax_type_id
,person.birth_date
,person.sex
,person.person_type_id
,person.preferred_language_code
,person.email_address
,person.marital_status
,person.client_id
,person.party_id
,person.alt_email_address
,person.birth_name
,person.preferred_contact_mode
,person.class_type
,person.field1
,person.field2
,person.field3
,person.field4
,person.field5
from
person INNER JOIN policy_person ON policy_person.person_id = person.person_id 
where
policy_person.role_id = 'payor'

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW person_role_view
AS
  SELECT person_id,
         role_id,
         'policy_person' AS table_name
  FROM   policy_person
  UNION ALL
  SELECT person_id,
         role_id,
         'coverage_person' AS table_name
  FROM   coverage_person
  WHERE  role_id <> 'insured'
  UNION ALL
  SELECT person_id,
         'benefitParty'            AS role_id,
         'coverage_benefits_party' AS table_name
  FROM   coverage_benefits_party
  UNION ALL
  SELECT person_id,
         'company' AS role_id,
         'company' AS table_name
  FROM   company
  UNION ALL
  SELECT person_id,
         'user'     AS role_id,
         'aus_user' AS table_name
  FROM   aus_user
  UNION ALL
  SELECT person_id,
         'agent'   AS role_id,
         'agent'   AS table_name
  FROM   agent
  UNION ALL
  SELECT person_id,
         'agency'  AS role_id,
         'agency'  AS table_name
  FROM   agency
  UNION ALL
  SELECT person_id,
         'tpa'     AS role_id,
         'tpa'     AS table_name
  FROM   tpa

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW policy_proxy_view AS
SELECT
	p.company_code
	,p.policy_id
	,p.policy_number
	,p.priority
	,p.policy_status_code
	,p.policy_status_date
	,p.case_group_id
	,p.association_code
	,ppi.applicant_status as applicant_status_short
	,ppi.applicant_status_date
	,primaryplan.plan_code_id as primary_plan_code
	,ppi.is_member
	,ppi.adverse_history
	,pp.policy_person_id
	,pp.relationship_to_insured
	,i.party_id
	,i.title as insured_title
	,i.last_name as insured_last_name
	,i.middle_name as insured_middle_name
	,i.first_name as insured_first_name
	,i.suffix as insured_suffix
	,i.tax_id as insured_tax_id
	,i.birth_date as insured_birth_date
	,i.client_id as insured_client_id
	,ppi.primary_insured_flag
	,ppi.underwriting_amount as insured_underwriting_amount
	,p.application_date
	,p.application_number
	,p.added_date
	,p.receive_date
	,ppi.reopen_date
	,p.underwriter_id
	,uw.login_id as underwriter_login_id
	,p.team_id
	,p.service_associate_id
	,sa.login_id as service_associate_login_id
	,p.tpa_code
	,p.cedent_policy_number
	,p.cedent_company_code
	,p.cedent_underwriter_id
	,p.cedent_contact_id
	,p.cedent_date_sent
	,p.international_or_domestic
	,p.idb_flag
	,p.currency_code
	,p.employer_id
	,p.alternate_case_id
	,p.source_info
	,p.distributor_code
FROM
policy p 
INNER JOIN policy_person pp ON pp.policy_id = p.policy_id
INNER JOIN policy_person_insured ppi ON ppi.policy_person_id = pp.policy_person_id
INNER JOIN person i ON i.person_id = pp.person_id 
RIGHT OUTER JOIN  (SELECT  TOP (1) pc.plan_code_id
                   ,cp.person_id 
                    FROM  policy_coverage AS pc 
                    INNER JOIN coverage_person AS cp ON pc.policy_coverage_id = cp.policy_coverage_id) primaryplan 
                    ON primaryplan.person_id = pp.person_id
RIGHT OUTER JOIN (select login_id,user_id from aus_user ) uw ON uw.user_id = p.underwriter_id
RIGHT OUTER JOIN (select login_id,user_id from aus_user ) sa ON sa.user_id = p.service_associate_id
where
	ppi.primary_reference_id is null
--C01 END	

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[portal_policy_proxy_view] as
select
	p.policy_id,
	p.policy_number,
	p.policy_status_code,
	p.policy_status_date,
	(select top 1 a.agent_number from agent a, policy_person pp2 where pp2.policy_id = p.policy_id and pp2.person_id = a.person_id and a.agent_number is not null) as agent_number,
	(select top 1 a.agency_number from agency a, policy_person pp2 where pp2.policy_id = p.policy_id and pp2.person_id = a.person_id and a.agency_number is not null) as agency_number,
	(select top 1 rtrim(b.last_name) from person b, agent c where b.person_id = c.person_id and c.agent_number in (select a.agent_number from agent a, policy_person pp2 where pp2.policy_id = p.policy_id and pp2.person_id = a.person_id and a.agent_number is not null)) as agent_lastname,
	(select top 1 rtrim(b.first_name) from person b, agent c where b.person_id = c.person_id and c.agent_number in (select a.agent_number from agent a, policy_person pp2 where pp2.policy_id = p.policy_id and pp2.person_id = a.person_id and a.agent_number is not null)) as agent_firstname,
	pp.policy_person_id,
	rtrim(i.last_name) as insured_last_name,
        rtrim(i.first_name) as insured_first_name,
	p.receive_date,
	p.application_number,
	p.underwriter_id,
	(select rtrim (u.last_name) from aus_user au, person u where au.user_id = p.underwriter_id and au.person_id = u.person_id) as underwriter_last_name,
	(select rtrim (u.first_name) from aus_user au, person u where au.user_id = p.underwriter_id and au.person_id = u.person_id) as underwriter_first_name,
	(select count(*) from insured_requirement ir, tl_requirement  tr
	 where pp.policy_person_id = ir.policy_person_id and (ir.requirement_code = tr.requirement_code and tr.requirement_category = 0))
	 as pi_req,
	(select count(*) from insured_requirement ir, tl_requirement  tr
	 where pp.policy_person_id = ir.policy_person_id and (ir.closed_disposition is null or ir.closed_disposition <> 'S' )
	 and (ir.requirement_code = tr.requirement_code and tr.requirement_category = 0))
	 as open_pi_req
from
	policy p,
	policy_person pp,
	policy_person_insured ppi,
	person i
where
	pp.policy_id = p.policy_id and
	ppi.policy_person_id = pp.policy_person_id and
	i.person_id = pp.person_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[product_assoc_gnum_lob_view] as
select distinct 'product_' + rtrim(ap.association_code) + '_' + rtrim(ap.g_number) + '_' + lb.line_of_business_code as code_type,
	pc.plan_code_id as code_id,
	rtrim( pc.plan_code_id ) + '-' + pc.description as code_value, 1 as active_flag
	from association_plan ap, line_of_business lb, tl_plan_code pc
	where (ap.expiration_date > CURRENT_TIMESTAMP or ap.expiration_date is NULL) and
	pc.plan_code_id = ap.plan_code_id and
	lb.line_of_business_code = pc.line_of_business_code
union
select distinct 'product_' + rtrim(ap.association_code) + '_' + rtrim(ap.g_number) + '_' + lb.line_of_business_code as code_type,
	pc.plan_code_id as code_id,
	rtrim( pc.plan_code_id ) + '-' + 'Inactive' + pc.description as code_value, 0 as active_flag
	from association_plan ap, line_of_business lb, tl_plan_code pc
	where (ap.expiration_date > CURRENT_TIMESTAMP or ap.expiration_date is NULL) and
	pc.plan_code_id = ap.plan_code_id and
	lb.line_of_business_code = pc.line_of_business_code

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[recent_cases_proxy_view] as
select
	p.company_code
	,p.policy_id
	,p.policy_number
	,p.priority
	,p.policy_status_code
	,p.policy_status_date
	,p.case_group_id
	,p.association_code
	,ppi.applicant_status as applicant_status_short
	,ppi.applicant_status_date
	,primaryplan.plan_code_id as primary_plan_code
	,ppi.is_member
	,ppi.adverse_history
	,pp.policy_person_id
	,pp.relationship_to_insured
	,i.title as insured_title
	,i.last_name as insured_last_name
	,i.middle_name as insured_middle_name
	,i.first_name as insured_first_name
	,i.suffix as insured_suffix
	,i.tax_id as insured_tax_id
	,i.birth_date as insured_birth_date
	,i.client_id as insured_client_id
	,ppi.underwriting_amount as insured_underwriting_amount
	,p.application_date
	,p.application_number
	,p.added_date
	,p.receive_date
	,p.underwriter_id
	,uw.login_id as underwriter_login_id
	,p.team_id
	,p.service_associate_id
	,sa.login_id as service_associate_login_id
	,p.tpa_code
	,rc.user_id
	,rcu.login_id as user_login_id
	,rc.date_time as access_date_time
	,p.cedent_policy_number
	,p.cedent_company_code
	,p.cedent_underwriter_id
	,p.cedent_contact_id
	,p.cedent_date_sent
	,p.international_or_domestic
	,p.idb_flag
	,p.currency_code
from
	policy p 
	INNER JOIN policy_person pp ON pp.policy_id = p.policy_id
	INNER JOIN policy_person_insured ppi ON ppi.policy_person_id = pp.policy_person_id
	INNER JOIN person i ON i.person_id = pp.person_id 
	INNER JOIN aus_user_recent_files rc ON rc.policy_id = p.policy_id
	RIGHT OUTER JOIN  (SELECT  TOP (1) pc.plan_code_id
	                   ,cp.person_id 
	                    FROM  policy_coverage AS pc 
	                    INNER JOIN coverage_person AS cp ON pc.policy_coverage_id = cp.policy_coverage_id) primaryplan 
	                    ON primaryplan.person_id = pp.person_id
	RIGHT OUTER JOIN (select login_id,user_id from aus_user ) uw ON uw.user_id = p.underwriter_id
	RIGHT OUTER JOIN (select login_id,user_id from aus_user ) sa ON sa.user_id = p.service_associate_id
	RIGHT OUTER JOIN (select login_id,user_id from aus_user ) rcu ON rcu.user_id = rc.user_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[recommended_requirements_view] as
select
	te_rulebook.rulebook_id,
	tr_plan_code_rulebook.plan_code_id,
	ta_face_amount_band.face_amount_from,
	ta_face_amount_band.face_amount_to,
	ta_age_band.age_from,
	ta_age_band.age_to,
	tl_requirement.*
from
	te_rulebook,
	tr_plan_code_rulebook,
	ta_face_amount_band,
	ta_age_band,
	tr_age_face_amount_requirement,
	tr_group_requirements,
	tl_requirement,
	tl_requirement_group
where
	tr_plan_code_rulebook.rulebook_id = te_rulebook.rulebook_id and
	ta_face_amount_band.rulebook_id = te_rulebook.rulebook_id and
	ta_age_band.rulebook_id = te_rulebook.rulebook_id and
	tr_age_face_amount_requirement.rulebook_id = te_rulebook.rulebook_id and
	tr_age_face_amount_requirement.age_band_seq_no = ta_age_band.age_band_seq_no and
	tr_age_face_amount_requirement.face_amount_seq_no = ta_face_amount_band.face_amount_seq_no and
	tr_group_requirements.requirement_group_id = tr_age_face_amount_requirement.requirement_group_id and
	tl_requirement.requirement_code = tr_group_requirements.requirement_code and
	tl_requirement_group.requirement_group_id = tr_group_requirements.requirement_group_id and
	tl_requirement_group.is_active is not null and
	tl_requirement_group.is_active <> 0 and
	tl_requirement.is_active is not null and
	tl_requirement.is_active <> 0

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[referral_proxy_view] as
select
	n.note_id,
	n.diary_date,
	p.policy_id,
	p.policy_number,
	i.title as insured_title,
	i.last_name as insured_last_name,
	i.middle_name as insured_middle_name,
	i.first_name as insured_first_name,
	i.suffix as insured_suffix,
	n.author as author_id,
	nu.login_id as author_login_id,
	n.refer_to_user_id as referred_to_id,
	nrf.login_id as referred_to_login_id,
	n.topic,
	p.team_id
from
policy p
INNER JOIN policy_person pp ON pp.policy_id = p.policy_id
INNER JOIN policy_person_insured ppi ON ppi.policy_person_id = pp.policy_person_id
INNER JOIN person i ON i.person_id = pp.person_id 
INNER JOIN notes n ON pp.policy_person_id = n.policy_person_id
RIGHT OUTER JOIN aus_user nu ON nu.user_id = n.author
RIGHT OUTER JOIN aus_user nrf ON nu.user_id = n.refer_to_user_id
where
	n.refer_to_user_id > 0 and
	n.diary_date is not null

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[req_exists_operand_view] as
select
	'getInsured.requirementExists(' + rtrim(requirement_code) + ')' as name,
	'bool' as type,
	'Requirement ' + rtrim(requirement_code) + ' Exists' as display,
	'Determines if ' + rtrim(requirement_name) + ' Requirement exists on the Applicant.'  as description,
	'Boolean' as value_list
from
	tl_requirement

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[req_status_operand_view] as
select
	'getInsured.requirementStatus(' + rtrim(requirement_code) + ')' as name,
	'string' as type,
	'Requirement ' + rtrim(requirement_code) + ' Status' as display,
	'Status of ' + rtrim(requirement_name) + ' Requirement on the Applicant.'  as description,
	'RequirementStatus' as value_list
from
	tl_requirement

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[requirement_group_requirements] as
select
	tl_requirement_group.requirement_group_id,
	tl_requirement_group.name as requirement_group_name,
	tl_requirement.*
from
	tl_requirement,
	tr_group_requirements,
	tl_requirement_group
where
	tr_group_requirements.requirement_code = tl_requirement.requirement_code and
	tl_requirement_group.requirement_group_id = tr_group_requirements.requirement_group_id and
	tl_requirement.is_active is not null and tl_requirement.is_active <> 0 and
	tl_requirement_group.is_active is not null and tl_requirement_group.is_active <> 0

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[requirement_open_operand_view] as
select
	'getInsured.requirementIsOpen(' + rtrim(requirement_code) + ')' as name,
	'bool' as type,
	'Requirement ' + rtrim(requirement_code) + ' Is Open' as display,
	'Determines if ' + rtrim(requirement_name) + ' Requirement is open on the Applicant.'  as description,
	'Boolean' as value_list
from
	tl_requirement

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[requirement_proxy_view] as
select
	t.requirement_name,
	t.alt_lang,
	t.alt_name,
	t.default_ordered_by,
	ir.requirement_code,
	t.requirement_type_id,
	t.requirement_category,
	ir.followup_date,
	ir.closed_date,
	ir.received_date,
	ir.ordered_date,
	ir.ordered_by,
	p.policy_id,
	p.policy_number,
	p.policy_status_code,
	p.underwriter_id,
	(select login_id from aus_user where user_id = p.underwriter_id) as underwriter_login_id,
	p.service_associate_id,
	(select login_id from aus_user where user_id = p.service_associate_id) as service_associate_login_id,
	ir.insured_requirement_id,
	ir.closed_disposition,
	ir.requirement_information_id,
	ir.last_followup_date,
	ir.provider,
	ir.evidence_type,
	pp.policy_person_id,
	i.party_id,
	i.title as insured_title,
	i.last_name as insured_last_name,
	i.middle_name as insured_middle_name,
	i.first_name as insured_first_name,
	i.suffix as insured_suffix,
	i.birth_date,
	i.tax_id,
	p.team_id,
	ir.manual_or_automatic_entry,
	ir.new_business_until_closed,
	ir.provider_order_id,
	ir.create_comment
from
	policy p,
	policy_person pp,
	person i,
	insured_requirement ir,
	tl_requirement t
where
	p.policy_id = pp.policy_id AND
	pp.person_id = i.person_id AND
	pp.policy_person_id = ir.policy_person_id AND
	ir.requirement_code = t.requirement_code

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[requirement_view] as
select
insured_requirement.*
from
insured_requirement

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[review_message_proxy_view] as
select
	p.policy_id,
	p.policy_number,
	rtrim(per.last_name) as applicant_last_name,
	rtrim(per.first_name) as applicant_first_name,
	rm.message_type,
	rm.origin_code,
	SUBSTRING(rm.message, 1, 50) as review_message_text,
	p.service_associate_id,
	sa.login_id as service_associate_login_id,
	rm.user_role_type
from
	policy p
	INNER JOIN review_message rm ON p.policy_id = rm.policy_id
	INNER JOIN policy_person pp ON  pp.policy_person_id = rm.policy_person_id
	INNER JOIN person per ON pp.person_id = per.person_id
	RIGHT OUTER JOIN aus_user sa ON sa.user_id = p.service_associate_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[role_privilege_view] as
select
	arp.role_id,
	arp.restriction_level,
	asp.privilege_id,
	asp.name,
	asp.description,
	asp.is_active,
	asp.subsystem_name
from
	aus_role_privilege arp INNER JOIN  aus_security_privilege asp ON arp.privilege_id = asp.privilege_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[role_view] as
select
	aus_security_roles.*
from
	aus_security_roles
where
	role_id > -1 and
	(deleted is null or deleted = 0)

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[rp_admin_all_applicants]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[rp_admin_all_applicants]
END
GO

			 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			create view [dbo].[rp_admin_all_applicants] as
SELECT     p.company_code, p.policy_number AS case_number, p.alternate_case_id AS alternate_case_number, p.receive_date, p.service_associate_id, 
                      i.last_name AS applicant_last_name, i.first_name AS applicant_first_name, i.sex AS gender, ppi.applicant_status AS applicant_status_code,
                          (SELECT     code_value
                            FROM          tl_code
                            WHERE      (language_code = 'en-us') AND (code_type = 'applicant_status') AND (code_id = ppi.applicant_status)) AS applicant_status, 
                      ppi.applicant_status_date, pc.amount AS amount_applied_for, i.birth_date,
                          (SELECT     address_line1
                            FROM          person_address AS pa
                            WHERE      (address_type_code = 'RESIDENCE') AND (person_id = i.person_id)) AS residence_address_line1,
                          (SELECT     address_line2
                            FROM          person_address AS pa
                            WHERE      (address_type_code = 'RESIDENCE') AND (person_id = i.person_id)) AS residence_address_line2,
                          (SELECT     address_line3
                            FROM          person_address AS pa
                            WHERE      (address_type_code = 'RESIDENCE') AND (person_id = i.person_id)) AS residence_address_line3,
                          (SELECT     city
                            FROM          person_address AS pa
                            WHERE      (address_type_code = 'RESIDENCE') AND (person_id = i.person_id)) AS residence_city,
                          (SELECT     LTRIM(RTRIM(cs.state_name)) + ' (' + LTRIM(RTRIM(cs.state_code)) + ')' AS Expr1
                            FROM          person_address AS pa INNER JOIN
                                                   tl_country_state AS cs ON pa.country_state_id = cs.country_state_id
                            WHERE      (pa.address_type_code = 'RESIDENCE') AND (pa.person_id = i.person_id)) AS residence_state,
                          (SELECT     postal_code
                            FROM          person_address AS pa
                            WHERE      (address_type_code = 'RESIDENCE') AND (person_id = i.person_id)) AS residence_postal_code,
                          (SELECT     area_code
                            FROM          person_phone AS ph
                            WHERE      (phone_type_code = 'HOME') AND (person_id = i.person_id)) AS home_phone_area_code,
                          (SELECT     prefix
                            FROM          person_phone AS ph
                            WHERE      (phone_type_code = 'HOME') AND (person_id = i.person_id)) AS home_phone_prefix,
                          (SELECT     suffix
                            FROM          person_phone AS ph
                            WHERE      (phone_type_code = 'HOME') AND (person_id = i.person_id)) AS home_phone_suffix,
                          (SELECT     area_code
                            FROM          person_phone AS ph
                            WHERE      (phone_type_code = 'WORK') AND (person_id = i.person_id)) AS work_phone_area_code,
                          (SELECT     prefix
                            FROM          person_phone AS ph
                            WHERE      (phone_type_code = 'WORK') AND (person_id = i.person_id)) AS work_phone_prefix,
                          (SELECT     suffix
                            FROM          person_phone AS ph
                            WHERE      (phone_type_code = 'WORK') AND (person_id = i.person_id)) AS work_phone_suffix,
                          (SELECT     area_code
                            FROM          person_phone AS ph
                            WHERE      (phone_type_code = 'CELL') AND (person_id = i.person_id)) AS cell_phone_area_code,
                          (SELECT     prefix
                            FROM          person_phone AS ph
                            WHERE      (phone_type_code = 'CELL') AND (person_id = i.person_id)) AS cell_phone_prefix,
                          (SELECT     suffix
                            FROM          person_phone AS ph
                            WHERE      (phone_type_code = 'CELL') AND (person_id = i.person_id)) AS cell_phone_suffix, i.email_address, cpi.final_action_date,
                          (SELECT     RTRIM(ps.last_name) + ', ' + RTRIM(ps.first_name) AS Expr1
                            FROM          person AS ps INNER JOIN
                                                   aus_user AS u ON ps.person_id = u.person_id
                            WHERE      (u.user_id = cpi.final_action_by_id)) AS final_action_by, cpi.reason_text AS final_action_reason,
                          (SELECT     reason_code
                            FROM          tl_final_action_reason
                            WHERE      (reason_status =
                                                       (SELECT     code_value
                                                         FROM          tl_code AS tl_code_1
                                                         WHERE      (language_code = 'en-us') AND (code_type = 'applicant_status') AND (code_id = cpi.coverage_status))) AND 
                                                   (reason_text = cpi.reason_text)) AS reason_code, assoc.association_name, pc.plan_code_id,
                          (SELECT     description
                            FROM          tl_plan_code
                            WHERE      (plan_code_id = pc.plan_code_id)) AS plan_code_description, cpi.g_number, pc.planned_premium,
                          (SELECT     code_value
                            FROM          tl_acord_codes
                            WHERE      (code_type = 'Payment Mode') AND (code_id = p.payment_mode_code)) AS premium_mode, cpi.web_quoted_class,
                          (SELECT     description
                            FROM          ta_rate_table_class
                            WHERE      (rulebook_id =
                                                       (SELECT     TOP (1) rulebook_id
                                                         FROM          rulebook_view
                                                         WHERE      (plan_code_id = pc.plan_code_id) AND (association_code = p.association_code) AND (type = 0 OR
                                                                                type IS NULL) OR
                                                                                (plan_code_id = pc.plan_code_id) AND (type = 0 OR
                                                                                type IS NULL) AND (p.association_code IS NULL))) AND (sequence_no = cpi.rate_class_quoted)) AS applied_for_rate_class,
                          (SELECT     description
                            FROM          ta_rate_table_class AS ta_rate_table_class_2
                            WHERE      (rulebook_id =
                                                       (SELECT     TOP (1) rulebook_id
                                                         FROM          rulebook_view AS rulebook_view_2
                                                         WHERE      (plan_code_id = pc.plan_code_id) AND (association_code = p.association_code) AND (type = 0 OR
                                                                                type IS NULL) OR
                                                                                (plan_code_id = pc.plan_code_id) AND (type = 0 OR
                                                                                type IS NULL) AND (p.association_code IS NULL))) AND (sequence_no = cpi.rate_class_approved)) 
                      AS system_recommended_rate_class,
                          (SELECT     description
                            FROM          ta_rate_table_class AS ta_rate_table_class_1
                            WHERE      (rulebook_id =
                                                       (SELECT     TOP (1) rulebook_id
                                                         FROM          rulebook_view AS rulebook_view_1
                                                         WHERE      (plan_code_id = pc.plan_code_id) AND (association_code = p.association_code) AND (type = 0 OR
                                                                                type IS NULL) OR
                                                                                (plan_code_id = pc.plan_code_id) AND (type = 0 OR
                                                                                type IS NULL) AND (p.association_code IS NULL))) AND (sequence_no = cpi.rate_class_issued)) AS rate_class_approved, 
                      pc.approved_amount AS issued_amount, pc.perm_table_rating AS table_rating, pc.perm_flat_extra_amount AS flat_extra_amount, p.cwa_amount, 
                      ap.income,
                          (SELECT     tobacco_use_id
                            FROM          tobacco
                            WHERE      (requirement_information_id = ap.requirement_information_id)) AS smoker_status, ap.occupation, 
                      p.lead_number_id AS aggregator_lead_number, p.source_info,
                          (SELECT     partner_id
                            FROM          tl_source_info
                            WHERE      (source_info = p.source_info)) AS partner_id, p.distributor_code, p.underwriter_id,
                          (SELECT     RTRIM(last_name) + ', ' + RTRIM(first_name) AS Expr1
                            FROM          aus_user_view AS uw
                            WHERE      (user_id = p.underwriter_id)) AS underwriter_name,
                          (SELECT     RTRIM(last_name) + ', ' + RTRIM(first_name) AS Expr1
                            FROM          aus_user_view AS sa
                            WHERE      (user_id = p.service_associate_id)) AS service_associate_name,
                          (SELECT     team_name
                            FROM          team AS tm
                            WHERE      (team_id = p.team_id)) AS team_name,
                          (SELECT     TOP (1) agent_number
                            FROM          agent_view
                            WHERE      (policy_id = p.policy_id)) AS agent_1_number,
                          (SELECT     TOP (1) agent_number
                            FROM          agent_view AS agent_view_2
                            WHERE      (policy_id = p.policy_id) AND (agent_number NOT IN
                                                       (SELECT     agent_number
                                                         FROM          agent_view AS agent_view_1
                                                         WHERE      (policy_id = p.policy_id)))) AS agent_2_number,
                          (SELECT     TOP (1) agency_number
                            FROM          agency_view
                            WHERE      (policy_id = p.policy_id)) AS bga_agency_number, p.team_id
FROM         policy_person_insured AS ppi INNER JOIN
                      coverage_person AS cp INNER JOIN
                      coverage_person_insured AS cpi ON cp.coverage_person_id = cpi.coverage_person_id INNER JOIN
                      policy_coverage AS pc ON cp.policy_coverage_id = pc.policy_coverage_id INNER JOIN
                      person AS i ON cp.person_id = i.person_id INNER JOIN
                      policy AS p LEFT OUTER JOIN
                          (SELECT     association_code, name AS association_name
                            FROM          association
                            UNION
    SELECT     c.company_code AS association_code, per.last_name AS association_name
                            FROM         company AS c INNER JOIN
                                                  person AS per ON c.person_id = per.person_id
                            WHERE     (per.class_type = 'ASSN') OR
                                                  (per.class_type = 'GRP')) AS assoc ON assoc.association_code = p.association_code ON pc.policy_id = p.policy_id ON 
                      ppi.policy_person_id = cpi.policy_person_id INNER JOIN
                      insured_application_info AS ap ON ppi.policy_person_id = ap.policy_person_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[rp_age_amount_matrix]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[rp_age_amount_matrix]
END
GO

			 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			create view [dbo].[rp_age_amount_matrix] as
select
p.company_code,
p.underwriter_id,
p.service_associate_id,
p.receive_date,
p.distributor_code,
p.source_info,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 18 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 41 and i.underwriting_amount >= 100000 and i.underwriting_amount < 151000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_a_amount_a,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 41 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 51 and i.underwriting_amount >= 100000 and i.underwriting_amount < 151000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_b_amount_a,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 51 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 56 and i.underwriting_amount >= 100000 and i.underwriting_amount < 151000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_c_amount_a,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 56 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 61 and i.underwriting_amount >= 100000 and i.underwriting_amount < 151000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_d_amount_a,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 61 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 66 and i.underwriting_amount >= 100000 and i.underwriting_amount < 151000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_e_amount_a,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 66 and i.underwriting_amount >= 100000 and i.underwriting_amount < 151000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_f_amount_a,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 18 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 41 and i.underwriting_amount >= 151000 and i.underwriting_amount < 251000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_a_amount_b,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 41 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 51 and i.underwriting_amount >= 151000 and i.underwriting_amount < 251000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_b_amount_b,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 51 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 56 and i.underwriting_amount >= 151000 and i.underwriting_amount < 251000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_c_amount_b,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 56 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 61 and i.underwriting_amount >= 151000 and i.underwriting_amount < 251000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_d_amount_b,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 61 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 66 and i.underwriting_amount >= 151000 and i.underwriting_amount < 251000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_e_amount_b,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 66 and i.underwriting_amount >= 151000 and i.underwriting_amount < 251000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_f_amount_b,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 18 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 41 and i.underwriting_amount >= 251000 and i.underwriting_amount < 501000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_a_amount_c,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 41 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 51 and i.underwriting_amount >= 251000 and i.underwriting_amount < 501000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_b_amount_c,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 51 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 56 and i.underwriting_amount >= 251000 and i.underwriting_amount < 501000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_c_amount_c,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 56 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 61 and i.underwriting_amount >= 251000 and i.underwriting_amount < 501000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_d_amount_c,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 61 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 66 and i.underwriting_amount >= 251000 and i.underwriting_amount < 501000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_e_amount_c,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 66 and i.underwriting_amount >= 251000 and i.underwriting_amount < 501000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_f_amount_c,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 18 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 41 and i.underwriting_amount >= 501000 and i.underwriting_amount < 1001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_a_amount_d,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 41 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 51 and i.underwriting_amount >= 501000 and i.underwriting_amount < 1001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_b_amount_d,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 51 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 56 and i.underwriting_amount >= 501000 and i.underwriting_amount < 1001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_c_amount_d,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 56 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 61 and i.underwriting_amount >= 501000 and i.underwriting_amount < 1001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_d_amount_d,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 61 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 66 and i.underwriting_amount >= 501000 and i.underwriting_amount < 1001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_e_amount_d,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 66 and i.underwriting_amount >= 501000 and i.underwriting_amount < 1001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_f_amount_d,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 18 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 41 and i.underwriting_amount >= 1001000 and i.underwriting_amount < 2001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_a_amount_e,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 41 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 51 and i.underwriting_amount >= 1001000 and i.underwriting_amount < 2001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_b_amount_e,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 51 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 56 and i.underwriting_amount >= 1001000 and i.underwriting_amount < 2001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_c_amount_e,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 56 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 61 and i.underwriting_amount >= 1001000 and i.underwriting_amount < 2001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_d_amount_e,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 61 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 66 and i.underwriting_amount >= 1001000 and i.underwriting_amount < 2001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_e_amount_e,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 66 and i.underwriting_amount >= 1001000 and i.underwriting_amount < 2001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_f_amount_e,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 18 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 41 and i.underwriting_amount >= 2001000 and i.underwriting_amount < 3001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_a_amount_f,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 41 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 51 and i.underwriting_amount >= 2001000 and i.underwriting_amount < 3001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_b_amount_f,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 51 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 56 and i.underwriting_amount >= 2001000 and i.underwriting_amount < 3001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_c_amount_f,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 56 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 61 and i.underwriting_amount >= 2001000 and i.underwriting_amount < 3001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_d_amount_f,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 61 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 66 and i.underwriting_amount >= 2001000 and i.underwriting_amount < 3001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_e_amount_f,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 66 and i.underwriting_amount >= 2001000 and i.underwriting_amount < 3001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_f_amount_f,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 18 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 41 and i.underwriting_amount >= 3001000 and i.underwriting_amount < 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_a_amount_g,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 41 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 51 and i.underwriting_amount >= 3001000 and i.underwriting_amount < 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_b_amount_g,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 51 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 56 and i.underwriting_amount >= 3001000 and i.underwriting_amount < 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_c_amount_g,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 56 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 61 and i.underwriting_amount >= 3001000 and i.underwriting_amount < 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_d_amount_g,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 61 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 66 and i.underwriting_amount >= 3001000 and i.underwriting_amount < 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_e_amount_g,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 66 and i.underwriting_amount >= 3001000 and i.underwriting_amount < 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_f_amount_g,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 18 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 41 and i.underwriting_amount >= 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_a_amount_h,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 41 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 51 and i.underwriting_amount >= 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_b_amount_h,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 51 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 56 and i.underwriting_amount >= 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_c_amount_h,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 56 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 61 and i.underwriting_amount >= 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_d_amount_h,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 61 and (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) < 66 and i.underwriting_amount >= 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_e_amount_h,
(select count(*) from insured i, (select * from tl_code where code_type = 'applicant_status') st where (cast(CURRENT_TIMESTAMP - i.birth_date as int)/365) >= 66 and i.underwriting_amount >= 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> 'CN') as age_f_amount_h,
p.team_id
from
policy p

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[rp_all_applicants]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[rp_all_applicants]
END
GO

			 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			create view [dbo].[rp_all_applicants] as
select distinct
	p.company_code,
	p.policy_number as case_number,
	p.alternate_case_id as alternate_case_number,
	p.receive_date,
	i.sex as gender,
	ppi.applicant_status as applicant_status_code,
   appStatus.code_value as applicant_status,
	ppi.applicant_status_date,
	pc.amount as amount_applied_for,
	i.birth_date,
   resState.stateName as residence_state,
	cpi.final_action_date,
   faUser.name  as final_action_by,
	cpi.reason_text as final_action_reason,
   reasonCode.reason_code as reason_code,
	assoc.association_name,
	pc.plan_code_id,
   tpc.description as plan_code_description,
	cpi.g_number,
	pc.planned_premium,
   payMode.code_value as premium_mode,
	cpi.web_quoted_class,
   afrc.description as applied_for_rate_class,
   srrc.description as system_recommended_rate_class,
   rca.description as rate_class_approved,
	pc.approved_amount as issued_amount,
	pc.perm_table_rating as table_rating,
	pc.perm_flat_extra_amount as flat_extra_amount,
	p.cwa_amount,
	ap.income,
   tob.tobacco_use_id as smoker_status,
	ap.occupation,
	p.lead_number_id as aggregator_lead_number,
	p.source_info,
   tsi.partner_id,
	p.distributor_code,
   uwName.name as underwriter_name,
   usaName.name as service_associate_name,
   tm.team_name as team_name,
   agent.agent_number as agent_1_number,
   agent2.agent_number as agent_2_number,
   agency.agency_number  as bga_agency_number,
   resState.country_state_id as residence_state_id,
	p.underwriter_id,
	p.service_associate_id,
	p.team_id
from
	insured_application_info ap 
INNER JOIN policy_person_insured ppi ON ap.policy_person_id = ppi.policy_person_id
INNER JOIN coverage_person_insured cpi ON ppi.policy_person_id = cpi.policy_person_id
INNER JOIN coverage_person cp ON cpi.coverage_person_id = cp.coverage_person_id
INNER JOIN policy_coverage pc ON cp.policy_coverage_id = pc.policy_coverage_id 
INNER JOIN policy p ON pc.policy_id = p.policy_id
INNER JOIN person i ON cp.person_id = i.person_id 
left outer join tl_plan_code tpc on pc.plan_code_id = tpc.plan_code_id
LEFT OUTER JOIN person_address pa ON i.person_id = pa.person_id 
left outer join tobacco tob on ap.requirement_information_id = tob.requirement_information_id
left outer join tl_source_info tsi on p.source_info = tsi.source_info
left outer join team tm on p.team_id = tm.team_id
left outer join (select distinct code_value, code_id from tl_code 
      where language_code = 'en-us' and code_type = 'applicant_status') appStatus on ppi.applicant_status = appStatus.code_id
left outer join (select distinct rtrim(cs.state_name) + ' (' + rtrim(cs.state_code) + ')' as stateName, cs.country_state_id, pa.person_id 
      from person_address pa inner join tl_country_state cs on pa.country_state_id = cs.country_state_id 
      where pa.address_type_code = 'MAIL') resState on i.person_id = resState.person_id
left outer join ( select distinct far.reason_code, far.reason_text from tl_final_action_reason far
      inner join tl_code tc on far.reason_status = tc.code_value
      where tc.language_code = 'en-us' and tc.code_type = 'applicant_status' 
      )reasonCode on cpi.reason_text = reasonCode.reason_text
left outer join (SELECT distinct code_value, code_id FROM tl_acord_codes 
      WHERE code_type = 'Payment Mode') payMode on p.payment_mode_code = payMode.code_id
left outer join (select distinct rtrim(i.last_name) + ', ' + rtrim(i.first_name) as name, au.user_id
      from person i inner join aus_user au on i.person_id = au.person_id) faUser on cpi.final_action_by_id = faUser.user_id
LEFT OUTER JOIN(select association_code, name as association_name 
         from association
		 union
		 select c.company_code as association_code, per.last_name as association_name 
         from company c, person per where c.person_id = per.person_id and (per.class_type = 'ASSN' or per.class_type = 'GRP')
      ) assoc ON p.association_code = assoc.association_code
left outer join (select distinct rtc.description , rtc.sequence_no , rb.association_code
      from ta_rate_table_class rtc
      inner join rulebook_view rb on rtc.rulebook_id = rb.rulebook_id
      where isNull(type, 0) = 0 and rb.association_code is not null
      ) afrc on p.association_code = afrc.association_code and cpi.rate_class_quoted = afrc.sequence_no 
left outer join (select distinct rtc.description , rtc.sequence_no , rb.association_code
      from ta_rate_table_class rtc
      inner join rulebook_view rb on rtc.rulebook_id = rb.rulebook_id
      where isNull(type, 0) = 0 and rb.association_code is not null
      ) srrc on (p.association_code = srrc.association_code or srrc.association_code is null) and cpi.rate_class_approved = srrc.sequence_no 
left outer join (select distinct rtc.description , rtc.sequence_no , rb.association_code
      from ta_rate_table_class rtc
      inner join rulebook_view rb on rtc.rulebook_id = rb.rulebook_id
      where isNull(type, 0) = 0 and rb.association_code is not null
      ) rca on p.association_code = rca.association_code and cpi.rate_class_issued = rca.sequence_no 
left outer join (select distinct rtrim(i.last_name) + ', ' + rtrim(i.first_name) as name, au.user_id
      from person i inner join aus_user au on i.person_id = au.person_id ) uwName on p.underwriter_id = uwName.user_id
left outer join (select distinct rtrim(i.last_name) + ', ' + rtrim(i.first_name) as name, au.user_id
      from person i inner join aus_user au on i.person_id = au.person_id ) usaName on p.service_associate_id = usaName.user_id
left outer join (
      select distinct a.agent_number, pp.policy_id
      from agent a 
      inner join policy_person pp on a.person_id = pp.person_id
      where pp.role_id = 'agent' and isNull(a.descriptor, '') != ''
      ) agent on p.policy_id = agent.policy_id
left outer join (select distinct a.agent_number, pp.policy_id from agent a inner join policy_person pp on a.person_id = pp.person_id
      where pp.role_id = 'agent' ) agent2 on p.policy_id = agent2.policy_id and agent2.agent_number != (select top 1 agent.agent_number)
left outer join (SELECT distinct a.agency_number, pp.policy_id FROM agency a INNER JOIN policy_person pp ON a.person_id = pp.person_id
      WHERE pp.role_id = 'agency') agency on p.policy_id = agency.policy_id
where	pa.address_type_code = 'MAIL'

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[rp_applicants_by_underwriter]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[rp_applicants_by_underwriter]
END
GO

			 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			create view [dbo].[rp_applicants_by_underwriter] as
select
p.company_code,
p.underwriter_id,
p.service_associate_id,
i.applicant_status_date,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = p.underwriter_id
) as underwriter_name,
i.applicant_status,
p.team_id
from
policy p,
insured i
where
i.policy_id = p.policy_id and
p.underwriter_id is not null and
i.applicant_status not in (select code_id from tl_code where code_type = 'applicant_status' and external_code = 'CN')

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[rp_final_action_status]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[rp_final_action_status]
END
GO

			 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			create view [dbo].[rp_final_action_status] as
select
p.company_code,
p.underwriter_id,
p.service_associate_id,
p.distributor_code,
p.source_info,
p.policy_number as case_number,
p.alternate_case_id as alternate_case_number,
(select code_value from tl_code where language_code = 'en-us' and code_type = 'applicant_status' and code_id = i.applicant_status) as applicant_status,
(select top 1 final_action_date from insured_coverages_view where policy_person_id = i.policy_person_id) as final_action_date,
p.team_id
from
policy p,
insured i
where
i.policy_id = p.policy_id and
i.applicant_status in (select code_id from tl_code where code_type = 'applicant_status' and external_code in ('AP', 'DE', 'RC', 'WI'))

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[rp_final_disposition]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[rp_final_disposition]
END
GO

			 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			create view [dbo].[rp_final_disposition] as
select
p.company_code,
p.underwriter_id,
p.service_associate_id,
i.applicant_status_date,
p.distributor_code,
p.source_info,
(select external_code from tl_code where code_type = 'applicant_status' and code_id = i.applicant_status) as applicant_status,
i.underwriting_amount,
cast(i.applicant_status_date - p.receive_date as int) as days_open,
p.team_id
from
policy p,
insured i
where
i.policy_id = p.policy_id and
i.applicant_status in (select code_id from tl_code where code_type = 'applicant_status' and external_code in ('AP', 'DE', 'RC', 'WI'))

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[rp_nb_requirement_productivity]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[rp_nb_requirement_productivity]
END
GO

			 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			create view [dbo].[rp_nb_requirement_productivity] as
select
es.added_by as user_id,
p.team_id,
p.underwriter_id,
p.service_associate_id,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = es.added_by
) as user_name,
p.policy_number,
ir.requirement_code,
(select tlr.requirement_name from tl_requirement tlr where tlr.requirement_code = ir.requirement_code) as requirement_name,
es.code as status,
es.status_date
from
policy p,
policy_person pp,
insured_requirement ir,
evidence_status_view es
where
pp.policy_id = p.policy_id and
pp.policy_person_id = ir.policy_person_id and
ir.insured_requirement_id = es.insured_requirement_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[rp_nb_work_type_productivity]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[rp_nb_work_type_productivity]
END
GO

			 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			create view [dbo].[rp_nb_work_type_productivity] as
select
es.added_by as user_id,
p.team_id,
p.underwriter_id,
p.service_associate_id,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = es.added_by
) as user_name,
p.policy_number,
'Requirement' as work_type,
tlr.requirement_name as work_type_name,
'Satisfied' as status,
es.status_date
from
policy p,
insured i,
insured_requirement ir,
tl_requirement tlr,
evidence_status_view es
where
i.policy_id = p.policy_id and
i.policy_person_id = ir.policy_person_id and
ir.insured_requirement_id = es.insured_requirement_id and
ir.requirement_code = tlr.requirement_code and
es.code = 'Satisfied'
union
select
es.added_by as user_id,
p.team_id,
p.underwriter_id,
p.service_associate_id,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = es.added_by
) as user_name,
p.policy_number,
'Requirement' as work_type,
tlr.requirement_name as work_type_name,
'Added' as status,
es.status_date
from
policy p,
insured i,
insured_requirement ir,
tl_requirement tlr,
evidence_status_view es
where
i.policy_id = p.policy_id and
i.policy_person_id = ir.policy_person_id and
ir.insured_requirement_id = es.insured_requirement_id and
ir.requirement_code = tlr.requirement_code and
es.code = 'Open'
union
select
n.author as user_id,
p.team_id,
p.underwriter_id,
p.service_associate_id,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = n.author
) as user_name,
p.policy_number,
'Referral' as work_type,
'Referral' as work_type_name,
'Added' as status,
n.added_date as status_date
from
policy p,
insured i,
notes n
where
i.policy_id = p.policy_id and
i.policy_person_id = n.policy_person_id and
n.note_type = 'Refer' and
n.reviewed_by is null
union
select
n.reviewed_by as user_id,
p.team_id,
p.underwriter_id,
p.service_associate_id,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = n.reviewed_by
) as user_name,
p.policy_number,
'Referral' as work_type,
'Referral' as work_type_name,
'Closed' as status,
n.reviewed_date as status_date
from
policy p,
insured i,
notes n
where
i.policy_id = p.policy_id and
i.policy_person_id = n.policy_person_id and
n.note_type = 'Refer' and
n.reviewed_by is not null
union
select
rm.checked_off_by as user_id,
p.team_id,
p.underwriter_id,
p.service_associate_id,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = rm.checked_off_by
) as user_name,
p.policy_number,
'Review Message' as work_type,
'Review Message' as work_type_name,
'Satisfied' as status,
rm.check_off_date as status_date
from
policy p,
review_message rm
where
rm.policy_id = p.policy_id and
rm.checkoff_flag is not null and
rm.checkoff_flag <> 0 and
rm.checked_off_by is not null

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[rp_policy_requirements]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[rp_policy_requirements]
END
GO

			 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			create view [dbo].[rp_policy_requirements] as
select
p.company_code,
p.underwriter_id,
p.service_associate_id,
p.distributor_code,
p.source_info,
p.policy_number as case_number,
tlr.requirement_name,
tc.code_value as requirement_status,
rv.ordered_date as ordered_open_date,
rv.schedule_date,
rv.complete_date,
rv.closed_date as final_status_date,
p.team_id
from
policy p,
policy_person pp,
requirement_view rv,
tl_requirement tlr,
tl_code tc
where
pp.policy_id = p.policy_id and
rv.policy_person_id = pp.policy_person_id and
tlr.requirement_code = rv.requirement_code and
(rv.closed_disposition is null or
rv.closed_disposition<> 'D') and
rv.ordered_date is not null and
tc.language_code = 'en-us' and
tc.code_type = 'RequirementStatus' and
((rv.closed_disposition is null and tc.code_id = 'O') or
tc.code_id = rv.closed_disposition)
union
select
p.company_code,
p.underwriter_id,
p.service_associate_id,
p.distributor_code,
p.source_info,
p.policy_number as case_number,
tlr.requirement_name,
tc.code_value as requirement_status,
rv.added_date as ordered_open_date,
rv.schedule_date,
rv.complete_date,
rv.closed_date as final_status_date,
p.team_id
from
policy p,
policy_person pp,
requirement_view rv,
tl_requirement tlr,
tl_code tc
where
pp.policy_id = p.policy_id and
rv.policy_person_id = pp.policy_person_id and
tlr.requirement_code = rv.requirement_code and
(rv.closed_disposition is null or
rv.closed_disposition<> 'D') and
rv.ordered_date is null and
tc.language_code = 'en-us' and
tc.code_type = 'RequirementStatus' and
((rv.closed_disposition is null and tc.code_id = 'O') or
tc.code_id = rv.closed_disposition)

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[rp_requirement_aging]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[rp_requirement_aging]
END
GO

			 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			create view [dbo].[rp_requirement_aging] as
select
p.underwriter_id,
p.service_associate_id,
p.team_id,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = p.underwriter_id
) as underwriter_name,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = p.service_associate_id
) as case_manager_name,
(select team_name from team where team_id = p.team_id) as team_name,
p.policy_number,
ir.requirement_code,
(select requirement_name from tl_requirement where requirement_code = ir.requirement_code) as requirement_name,
ir.added_date,
(select
tc.code_value
from
tl_code tc
where
tc.code_type = 'RequirementStatus' and
tc.code_id = ir.closed_disposition or
(ir.closed_disposition is null and tc.code_id = 'O')
) as requirement_status,
(cast(CURRENT_TIMESTAMP - ir.added_date as int)) as days_aging
from
policy p,
insured i,
insured_requirement ir
where
i.policy_id = p.policy_id and
i.policy_person_id = ir.policy_person_id and
(ir.closed_disposition is null or ir.closed_disposition not in ('S', 'C', 'W'))

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[rp_unmatched_labs]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[rp_unmatched_labs]
END
GO

			 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			create view [dbo].[rp_unmatched_labs] as
select
first_name,
last_name,
birth_date,
referrence_number,
ticket_number,
drawn_date,
lab_receive_date,
-1 as team_id,
-1 as underwriter_id,
-1 as service_associate_id
from
lab_header
where
requirement_information_id not in (
select
requirement_information_id
from
insured_requirement
where
requirement_information_id is not null)

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[rp_uw_case_productivity]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[rp_uw_case_productivity]
END
GO

			 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			create view [dbo].[rp_uw_case_productivity] as
select
p.underwriter_id as user_id,
p.team_id,
p.underwriter_id,
p.service_associate_id,
p.receive_date,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = underwriter_id
) as user_name,
p.policy_number,
(select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = 'NB') as new_business_date,
(select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = 'FA') as final_action_date,
(select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = 'CLOSED' and log_date >= (select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = 'FA')) as closed_date,
cast((select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = 'FA') - (select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = 'NB') as int) as days_nb_to_fa,
cast((select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = 'CLOSED' and log_date >= (select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = 'FA')) - (select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = 'FA') as int) as days_fa_to_closed
from
policy p

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[rp_uw_referal_rvw_productivity]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[rp_uw_referal_rvw_productivity]
END
GO

			 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			create view [dbo].[rp_uw_referal_rvw_productivity] as
select
ir.closed_by as user_id,
p.team_id,
p.underwriter_id,
p.service_associate_id,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = ir.closed_by
) as user_name,
p.policy_number,
(select requirement_name from tl_requirement where requirement_code = ir.requirement_code) as work_type,
(select
tc.code_value
from
tl_code tc
where
tc.code_type = 'RequirementStatus' and
tc.code_id = ir.closed_disposition or
(ir.closed_disposition is null and tc.code_id = 'O')
) as status,
ir.added_date,
ir.closed_date
from
policy p,
insured i,
insured_requirement ir
where
i.policy_id = p.policy_id and
i.policy_person_id = ir.policy_person_id and
ir.requirement_code = 'UWINITRVW' and
ir.closed_disposition = 'S'
union
select
n.author as user_id,
p.team_id,
p.underwriter_id,
p.service_associate_id,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = n.author
) as user_name,
p.policy_number,
'Referral' as work_type,
'Added' as status,
n.added_date,
n.reviewed_date as closed_date
from
policy p,
insured i,
notes n
where
i.policy_id = p.policy_id and
i.policy_person_id = n.policy_person_id and
n.note_type = 'Refer' and
n.reviewed_by is null
union
select
n.reviewed_by as user_id,
p.team_id,
p.underwriter_id,
p.service_associate_id,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = n.reviewed_by
) as user_name,
p.policy_number,
'Referral' as work_type,
'Checked-off' as status,
n.added_date,
n.reviewed_date as closed_date
from
policy p,
insured i,
notes n
where
i.policy_id = p.policy_id and
i.policy_person_id = n.policy_person_id and
n.note_type = 'Refer' and
n.reviewed_by is not null

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[rp_uw_review_msg_productivity]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[rp_uw_review_msg_productivity]
END
GO

			 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			create view [dbo].[rp_uw_review_msg_productivity] as
select
rm.checked_off_by as user_id,
p.team_id,
p.underwriter_id,
p.service_associate_id,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = rm.checked_off_by
) as user_name,
p.policy_number,
'Checkable Review Message' as work_type,
rm.message,
'Closed' as status,
rm.check_off_date
from
policy p,
review_message rm
where
rm.policy_id = p.policy_id and
rm.checkoff_flag is not null and
rm.checkoff_flag <> 0 and
rm.checked_off_by is not null

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[rulebook_item_view] as
	select
		'' as plan_code_id,
		rb.*
	from
		te_rulebook rb

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[rulebook_proxy_view] as
	select
		rb.association_code,
		rb.effective_date,
		rb.rulebook_id,
		rb.rulebook_name,
		rb.description,
		rb.is_active,
		rb.added_date,
		rb.added_by,
		rb.update_date,
		rb.updated_by,
		rb.type
	from
		te_rulebook rb

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[rulebook_rate_class] as
select distinct
	'smok_rate_class_' + rb.rulebook_name as code_type,
	cast(rc.sequence_no as char(30)) as code_id,
	rc.description as code_value,
	'' as external_code
from
	te_rulebook rb,
	ta_rate_table_class rc
where
	rb.rulebook_id = rc.rulebook_id and
	rc.smoking_class is not null and rc.smoking_class <> '0'
union
select distinct
	'rate_class_' + rb.rulebook_name as code_type,
	cast(rc.sequence_no as char(30)) as code_id,
	rc.description as code_value,
	'' as external_code
from
	te_rulebook rb,
	ta_rate_table_class rc
where
	rb.rulebook_id = rc.rulebook_id and
	(rc.smoking_class is null or rc.smoking_class = '0')

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[rulebook_view] as
	select
		pc.plan_code_id,
		rb.*
	from
		te_rulebook rb,
		tr_plan_code_rulebook pc
	where
		rb.rulebook_id = pc.rulebook_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[service_associate_alpha_range] as
select
  from_string,
  to_string as up_to_string,
  service_associate_login_id as item_id
from
  service_associate_range

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[team_view] as
select
	team.*
from
	team
where
	(deleted is null or deleted = 0)

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[teams_users_view] as
select
	tr_user_team.team_id
	,tr_user_team.auto_assign
	,aus_user.user_id
	,aus_user.person_id
	,aus_user.login_id
	,aus_user.password
	,aus_user.is_active
	,aus_user.level_of_authority
	,aus_user.email_address
	,aus_user.is_underwriter
	,aus_user.restrict_to_teams
	,aus_user.role_id
	,aus_user.is_service_associate
	,aus_user.job_title
	,aus_user.account_locked
	,aus_user.account_locked_date
	,aus_user.bad_login_attempt_count
	,aus_user.last_bad_login_attempt_date
	,aus_user.must_change_password
	,aus_user.last_password_change_date
	,aus_user.is_agent
	,aus_user.agent_number
	,aus_user.is_agency
	,aus_user.agency_number
	,aus_user.deleted
	,aus_user.use_single_sign_on
from
	tr_user_team INNER JOIN aus_user ON tr_user_team.user_id = aus_user.user_id 
where (aus_user.deleted is null or aus_user.deleted = 0)

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[tpa_view] as
select
	t.tpa_code
	,t.tpa_short_name
	,t.contact_last_name
	,t.contact_first_name
	,t.auto_closure_days
	,t.expiration_date
	,person.person_id
	,person.last_name
	,person.first_name
	,person.middle_name
	,person.title
	,person.suffix
	,person.tax_id
	,person.tax_type_id
	,person.birth_date
	,person.sex
	,person.person_type_id
	,person.preferred_language_code
	,person.email_address
	,person.marital_status
	,person.client_id
	,person.party_id
	,person.alt_email_address
	,person.birth_name
	,person.preferred_contact_mode
	,person.class_type
	,person.field1
	,person.field2
	,person.field3
	,person.field4
	,person.field5
from
	tpa t INNER JOIN person ON t.person_id = person.person_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[unchecked_rvw_msg_count] as
select
 rm.policy_person_id,
 count(rm.review_message_id) as unchk_rvw_count
from
 review_message rm
where
 rm.message_type = '0' and
 (rm.user_role_type is null or rm.user_role_type != 'CM')
group by
 rm.policy_person_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[user_teams_view] as
select
	tr_user_team.user_id
	,tr_user_team.auto_assign
	,team.team_id
	,team.team_name
	,team.description
	,team.is_active
	,team.deleted
from
	tr_user_team INNER JOIN  team ON tr_user_team.team_id = team.team_id 
where
	(team.deleted is null or team.deleted = 0)

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[data_mart_association_plan] as
select
a.name as association_name,
ap.association_code,
ap.plan_code_id,
(select
tv.tpa_short_name
from
tpa_view tv
where
tv.tpa_code = ap.tpa_code
) as tpa_code,
ap.g_number,
ap.mortality_max,
ap.auto_approve_requires_member,
ap.underwrite_child,
ap.spouse_can_exceed_member,
ap.allow_jet_issue,
ap.billing_code,
ap.expiration_date
from
association_plan ap,
association a
where
a.association_code = ap.association_code

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[reviewer_proxy_view] as
select
	p.company_code,
	p.policy_id,
	p.policy_number,
	p.priority,
	p.policy_status_code,
	p.policy_status_date,
	p.case_group_id,
	p.association_code,
	ppi.applicant_status as applicant_status_short,
	ppi.applicant_status_date,
	(select top 1 pc.plan_code_id from policy_coverage pc, coverage_person cp where pc.policy_coverage_id = cp.policy_coverage_id and cp.person_id = pp.person_id) as primary_plan_code,
	ppi.is_member,
	ppi.adverse_history,
	pp.policy_person_id,
	pp.relationship_to_insured,
	i.title as insured_title,
	i.last_name as insured_last_name,
	i.middle_name as insured_middle_name,
	i.first_name as insured_first_name,
	i.suffix as insured_suffix,
	i.tax_id as insured_tax_id,
	i.birth_date as insured_birth_date,
	i.client_id as insured_client_id,
	ppi.underwriting_amount as insured_underwriting_amount,
	p.application_date,
	p.application_number,
	p.added_date,
	p.receive_date,
	ppi.reopen_date,
	(select top 1 final_action_date from insured_coverages_view where policy_person_id = ppi.policy_person_id) as final_disposition_date,
	p.underwriter_id,
	(select login_id from aus_user where user_id = p.underwriter_id) as underwriter_login_id,
	p.team_id,
	p.service_associate_id,
	(select login_id from aus_user where user_id = p.service_associate_id) as service_associate_login_id,
	p.tpa_code,
	p.cedent_policy_number,
	p.cedent_company_code,
	p.cedent_underwriter_id,
	p.cedent_contact_id,
	p.cedent_date_sent,
	p.international_or_domestic,
	p.idb_flag,
	p.currency_code
from
	policy p,
	policy_person pp,
	policy_person_insured ppi,
	person i,
	team t
where
	pp.policy_id = p.policy_id and
	ppi.policy_person_id = pp.policy_person_id and
	i.person_id = pp.person_id and
	ppi.primary_reference_id is null and
	ppi.policy_person_id in (select policy_person_id from insured_requirement where policy_person_id = ppi.policy_person_id and requirement_code = 'TBRVWD' and (closed_disposition is null or closed_disposition in ('O', 'OR', 'H')))

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[codes_view] as
select 'en-us' as language_code, 'mib_country' as code_type, country_id as code_id, country_name as code_value, mib_country as external_code from tl_country
union
select lang.code_value as language_code, 'mib_country' as code_type, country_id as code_id, alt_country_name as code_value, mib_country as external_code from tl_country, (select * from tl_code where code_type = 'System' and code_id = 'AltLanguage') lang where lang.code_value is not null and alt_country_name is not null and rtrim(alt_country_name) <> ''
union
select 'en-us' as language_code, 'policy_type' as code_type, rtrim(tpa_code) + '_' + rtrim(line_of_business_code) + '_' + rtrim(g_number) as code_id, policy_type as code_value, '' as external_code from billing_code where g_number is not null
union
select 'en-us' as language_code, 'policy_type' AS code_type, rtrim(tpa_code) + '_' + rtrim(line_of_business_code) as code_id, policy_type as code_value, '' as external_code from billing_code where g_number is null
union
select 'en-us' as language_code, 'billing_code' as code_type, rtrim(tpa_code) + '_' + rtrim(line_of_business_code) + '_' + rtrim(g_number) as code_id, us_billing_code as code_value, non_us_billing_code as external_code from billing_code where g_number is not null and g_number != ''
union
select 'en-us' as language_code, 'billing_code' AS code_type, rtrim(tpa_code) + '_' + rtrim(line_of_business_code) as code_id, us_billing_code as code_value, non_us_billing_code as external_code from billing_code where g_number is null or g_number = ''
union
select 'en-us' as language_code, 'country' as code_type, country_id as code_id, country_name as code_value, country_code as external_code from tl_country
union
select lang.code_value as language_code, 'country' as code_type, country_id as code_id, alt_country_name as code_value, country_code as external_code from tl_country, (select * from tl_code where code_type = 'System' and code_id = 'AltLanguage') lang where lang.code_value is not null and alt_country_name is not null and rtrim(alt_country_name) <> ''
union
select 'en-us' as language_code, 'lab_request' as code_type, request_code as code_id, description as code_value, '' as external_code from tl_lab_request
union
select 'en-us' as language_code, 'lab_specimen' as code_type, lab_specimin_id as code_id, description as code_value, '' as external_code from tl_lab_specimen
union
select 'en-us' as language_code, 'plan_code' as code_type, plan_code_id as code_id, plan_code_id + ' - ' + description as code_value, line_of_business_code as external_code from tl_plan_code
union
select alt_lang as language_code, 'plan_code' as code_type, plan_code_id as code_id, plan_code_id + ' - ' + alt_description as code_value, line_of_business_code as external_code from tl_plan_code where alt_lang is not null and alt_lang <> 'en-us'
union
select 'en-us' as language_code, 'requirement_group' as code_type, cast(requirement_group_id as char(30)) as code_id, name as code_value, '' as external_code from tl_requirement_group
union
select 'en-us' as language_code, 'subaccount' as code_type, subaccount_code as code_id, full_name as code_value, '' as external_code from tl_subaccount
union
select 'en-us' as language_code, 'country_state' as code_type, country_state_id as code_id, state_name as code_value, state_code as external_code from tl_country_state
union
select lang.code_value as language_code, 'country_state' as code_type, country_state_id as code_id, alt_state_name as code_value, state_code as external_code from tl_country_state, (select * from tl_code where code_type = 'System' and code_id = 'AltLanguage') lang where lang.code_value is not null and alt_state_name is not null and rtrim(alt_state_name) <> ''
union
select 'en-us' as language_code, 'country_state_usa' as code_type, country_state_id as code_id, state_name as code_value, state_code as external_code from tl_country_state where country_id = 'USA'
union
select lang.code_value as language_code, 'country_state_usa' as code_type, country_state_id as code_id, alt_state_name as code_value, state_code as external_code from tl_country_state, (select * from tl_code where code_type = 'System' and code_id = 'AltLanguage') lang where lang.code_value is not null and country_id = 'USA' and alt_state_name is not null and rtrim(alt_state_name) <> ''
union
select 'en-us' as language_code, 'country_state_canada' as code_type, country_state_id as code_id, state_name as code_value, state_code as external_code from tl_country_state where country_id = 'CANADA'
union
select lang.code_value as language_code, 'country_state_canada' as code_type, country_state_id as code_id, alt_state_name as code_value, state_code as external_code from tl_country_state, (select * from tl_code where code_type = 'System' and code_id = 'AltLanguage') lang where lang.code_value is not null and country_id = 'CANADA' and alt_state_name is not null and rtrim(alt_state_name) <> ''
union
select 'en-us' as language_code, 'ansi_code' as code_type, horl_code as code_id, description as code_value, ansi as external_code from tl_ansi_code
union
select 'en-us' as language_code, 'agency' as code_type, cast(agency.person_id as char(30)) as code_id, person.last_name as code_value, agency.agency_number as external_code from agency, person where person.person_id = agency.person_id
union
select 'en-us' as language_code, 'agent' as code_type, cast(agent.person_id as char(30)) as code_id, person.last_name as code_value, agent.agent_number as external_code from agent, person where person.person_id = agent.person_id
union
select 'en-us' as language_code, 'agent_name' as code_type, (rtrim(agent_number) + '_' + cast(person.person_id as char(12))) as code_id, person.last_name as code_value, person.first_name as external_code from agent, person where agent_number is not null and person.person_id = agent.person_id
union
select 'en-us' as language_code, 'company' as code_type, company.company_code as code_id, company.company_code  + CHAR(4) + person.last_name as code_value, person.tax_id as external_code from company, person where person.person_id = company.person_id and (class_type is null or class_type = 'Carrier')
union
select 'en-us' as language_code, 'company_name' as code_type, person.last_name as code_id, company.company_code  + CHAR(4) + person.last_name as code_value, person.tax_id as external_code from company, person where person.person_id = company.person_id and (class_type is null or class_type = 'Carrier')
union
select alt_lang as language_code, 'requirement' as code_type, requirement_code as code_id, alt_name as code_value, external_requirement_code as external_code from tl_requirement where alt_lang is not null
union
select 'en-us' as language_code, 'requirement' as code_type, requirement_code as code_id, requirement_name as code_value, external_requirement_code as external_code from tl_requirement where alt_lang is null or alt_lang <> 'en-us'
union
select alt_lang as language_code, 'post_issue_requirement' as code_type, requirement_code as code_id, alt_name as code_value, external_requirement_code as external_code from tl_requirement where alt_lang is not null and requirement_category = 0
union
select 'en-us' as language_code, 'post_issue_requirement' as code_type, requirement_code as code_id, requirement_name as code_value, external_requirement_code as external_code from tl_requirement where (alt_lang is null or alt_lang <> 'en-us') and requirement_category = 0
union
select 'en-us' as language_code, code_type as code_type, cast(code_id as char(30)) as code_id, code_value as code_value, external_code as external_code from tl_acord_codes where code_type <> 'AUS Gender Type' and code_type <> 'ALFA Gender Type'
union
select 'en-us' as language_code, code_type as code_type, cast(external_code as char(30)) as code_id, code_value as code_value, cast(code_id as char(30)) as external_code from tl_acord_codes where code_type = 'AUS Gender Type'
union
SELECT     'en-us' AS language_code, code_type, CAST(external_code AS char(30)) AS code_id, code_value, CAST(code_id AS char(30)) AS external_code
FROM         tl_acord_codes
WHERE     (code_type = 'ALFA Gender Type')
union
select distinct 'en-us' as language_code, 'final_action_disposition' as code_type, reason_status as code_id, reason_status as code_value, reason_status as external_code from tl_final_action_reason
union
select distinct lang.code_value as language_code, 'final_action_disposition' as code_type, reason_status as code_id, reason_status as code_value, reason_status as external_code from tl_final_action_reason, (select * from tl_code where code_type = 'System' and code_id = 'AltLanguage') lang where (lang.code_value is not null and lang.code_value <> '')
union
select distinct 'en-us' as language_code, lower( 'final_action_reason_' + (select code_id from tl_code where code_type = 'applicant_status' and code_value = reason_status) ) as code_type, reason_text as code_id, reason_text as code_value, reason_code as external_code from tl_final_action_reason where (select code_id from tl_code where code_type = 'applicant_status' and code_value = reason_status) is not null
union
select distinct lang.code_value as language_code, lower( 'final_action_reason_' + (select code_id from tl_code where code_type = 'applicant_status' and code_value = reason_status) ) as code_type, reason_text as code_id, alt_reason_text as code_value, reason_code as external_code from tl_final_action_reason, (select * from tl_code where code_type = 'System' and code_id = 'AltLanguage') lang where lang.code_value is not null and alt_reason_text is not null and (select code_id from tl_code where code_type = 'applicant_status' and code_value = reason_status) is not null
union
select distinct 'en-us' as language_code, lower( 'final_action_reason_' + reason_status ) as code_type, reason_text as code_id, reason_text as code_value, reason_code as external_code from tl_final_action_reason
union
select distinct lang.code_value as language_code, lower( 'final_action_reason_' + reason_status ) as code_type, reason_text as code_id, alt_reason_text as code_value, reason_code as external_code from tl_final_action_reason, (select * from tl_code where code_type = 'System' and code_id = 'AltLanguage') lang where lang.code_value is not null and alt_reason_text is not null
union
select distinct 'en-us' as language_code, 'final_action_reason' as code_type, reason_text as code_id, reason_status as code_value, reason_code as external_code from tl_final_action_reason where reason_code is not null
union
select distinct lang.code_value as language_code, 'final_action_reason' as code_type, alt_reason_text  as code_id, reason_status as code_value, reason_code as external_code from tl_final_action_reason, (select * from tl_code where code_type = 'System' and code_id = 'AltLanguage') lang where lang.code_value is not null and reason_code is not null and alt_reason_text is not null
union
select language_code, code_type, code_id, code_value, external_code from tl_code where code_type <> 'CaseOne'
union
select language_code, code_type, upper(code_id), code_value, external_code from tl_code where code_type = 'CaseOne'
union
select 'en-us' as language_code, 'tpa' as code_type, t.tpa_code as code_id, p.last_name as code_value, cast(p.person_id as char(30)) as external_code from tpa t, person p where t.person_id = p.person_id
union
select 'en-us' as language_code, 'active_tpa' as code_type, t.tpa_code as code_id, p.last_name as code_value, cast(p.person_id as char(30)) as external_code from tpa t, person p
where t.person_id = p.person_id and (t.expiration_date > CURRENT_TIMESTAMP or t.expiration_date is NULL)
union
select 'en-us' as language_code, 'line_of_business' as code_type, line_of_business_code as code_id, name as code_value, line_of_business_code as external_code from line_of_business
union
select 'en-us' as language_code, 'association_code' as code_type, association_code as code_id, association_code as code_value, cast(expiration_date as char(30)) as external_code from association
union
select 'en-us' as language_code, 'active_association' as code_type, association_code as code_id, name as code_value, cast(expiration_date as char(30)) as external_code from association
where (expiration_date > CURRENT_TIMESTAMP or expiration_date is NULL) and association_code not in (select c.company_code from company c, person p where c.person_id = p.person_id and (p.class_type = 'ASSN' or p.class_type = 'GRP'))
union
select 'en-us' as language_code, 'active_association' as code_type, c.company_code as code_id, p.last_name as code_value, p.field1 as external_code from company c, person p
where c.person_id = p.person_id and (p.field1 > CURRENT_TIMESTAMP or p.field1 is NULL) and (p.class_type = 'ASSN' or p.class_type = 'GRP')
union
select 'en-us' as language_code, 'association' as code_type, association_code as code_id, name as code_value, cast(expiration_date as char(30)) as external_code from association
where association_code not in (select c.company_code from company c, person p where c.person_id = p.person_id and (p.class_type = 'ASSN' or p.class_type = 'GRP'))
union
select 'en-us' as language_code, 'association' as code_type, c.company_code as code_id, p.last_name as code_value, p.field1 as external_code from company c, person p
where c.person_id = p.person_id and (p.class_type = 'ASSN' or p.class_type = 'GRP')
union
select distinct 'en-us' as language_code, 'active_association_' + lower(ap.tpa_code) as code_type, a.association_code as code_id, a.name as code_value, cast(a.expiration_date as char(30)) as external_code
from association a, association_plan ap where (a.expiration_date > CURRENT_TIMESTAMP or a.expiration_date is NULL) and
a.association_code = ap.association_code and a.association_code not in (select c.company_code from company c, person p where c.person_id = p.person_id and (p.class_type = 'ASSN' or p.class_type = 'GRP'))
union
select distinct 'en-us' as language_code, 'active_association_' + lower(ap.tpa_code) as code_type, c.company_code as code_id, p.last_name as code_value, p.field1 as external_code
from company c, person p, association_plan ap where (p.field1 > CURRENT_TIMESTAMP or p.field1 is NULL) and
c.company_code = ap.association_code and c.person_id = p.person_id and (p.class_type = 'ASSN' or p.class_type = 'GRP')
union
select distinct 'en-us' as language_code, 'association_' + lower(ap.tpa_code) as code_type, a.association_code as code_id, a.name as code_value, cast(a.expiration_date as char(30)) as external_code
from association a, association_plan ap where a.association_code = ap.association_code and a.association_code not in (select c.company_code from company c, person p where c.person_id = p.person_id and (p.class_type = 'ASSN' or p.class_type = 'GRP'))
union
select distinct 'en-us' as language_code, 'association_' + lower(ap.tpa_code) as code_type, c.company_code as code_id, p.last_name as code_value, p.field1 as external_code
from company c, person p, association_plan ap where c.company_code = ap.association_code and c.person_id = p.person_id and (p.class_type = 'ASSN' or p.class_type = 'GRP')
union
select distinct 'en-us' as language_code, 'active_plan_code_' + lower(ap.association_code) as code_type, pc.plan_code_id as code_id, rtrim(pc.plan_code_id) + ' - ' + pc.description as code_value, pc.line_of_business_code as external_code
from tl_plan_code pc, association_plan ap where (ap.expiration_date > CURRENT_TIMESTAMP or ap.expiration_date is NULL) and
pc.plan_code_id = ap.plan_code_id
union
select distinct 'en-us' as language_code, 'plan_code_' + lower(ap.association_code) as code_type, pc.plan_code_id as code_id, rtrim(pc.plan_code_id) + ' - ' + pc.description as code_value, pc.line_of_business_code as external_code
from tl_plan_code pc, association_plan ap where pc.plan_code_id = ap.plan_code_id
union
select distinct 'en-us' as language_code, 'active_plan_gnum_' + lower(ap.association_code) as code_type, rtrim(pc.plan_code_id) + '_' + ap.g_number as code_id,
rtrim(pc.plan_code_id) + '/' + rtrim(ap.g_number) + ' - ' + pc.description as code_value, pc.plan_code_id as external_code
from tl_plan_code pc, association_plan ap where (ap.expiration_date > CURRENT_TIMESTAMP or
ap.expiration_date is NULL) and pc.plan_code_id = ap.plan_code_id
union
select distinct 'en-us' as language_code, 'plan_gnum_' + lower(ap.association_code) as code_type, rtrim(pc.plan_code_id) + '_' + ap.g_number as code_id,
rtrim(pc.plan_code_id) + '/' + rtrim(ap.g_number) + ' - ' + pc.description as code_value, pc.line_of_business_code as external_code
from tl_plan_code pc, association_plan ap where pc.plan_code_id = ap.plan_code_id
union
select distinct 'en-us' as language_code, 'active_plan_gnum_' + lower(rtrim(lb.line_of_business_code) + '_' + ap.association_code) as code_type, rtrim(pc.plan_code_id) + '_' + ap.g_number as code_id,
rtrim(pc.plan_code_id) + '/' + rtrim(ap.g_number) + ' - ' + pc.description as code_value, pc.line_of_business_code as external_code
from line_of_business lb, tl_plan_code pc, association_plan ap where (ap.expiration_date > CURRENT_TIMESTAMP or
ap.expiration_date is NULL) and pc.plan_code_id = ap.plan_code_id and lb.line_of_business_code = pc.line_of_business_code
union
select distinct 'en-us' as language_code, 'plan_gnum_' + lower(rtrim(lb.line_of_business_code) + '_' + ap.association_code) as code_type, rtrim(pc.plan_code_id) + '_' + ap.g_number as code_id,
rtrim(pc.plan_code_id) + '/' + rtrim(ap.g_number) + ' - ' + pc.description as code_value, pc.line_of_business_code as external_code
from line_of_business lb, tl_plan_code pc, association_plan ap where pc.plan_code_id = ap.plan_code_id and lb.line_of_business_code = pc.line_of_business_code
union
select distinct 'en-us' as language_code, 'active_plan_gnum_' +  lower(rtrim(ltrim(ap.association_code))) + '_' +  lower(rtrim(lb.line_of_business_code) ) as code_type, rtrim(pc.plan_code_id) + '_' + ap.g_number as code_id,
rtrim(pc.plan_code_id) + '/' + rtrim(ap.g_number) + ' - ' + pc.description as code_value, pc.plan_code_id as external_code
from line_of_business lb, tl_plan_code pc, association_plan ap where (ap.expiration_date > CURRENT_TIMESTAMP or
ap.expiration_date is NULL) and pc.plan_code_id = ap.plan_code_id and lb.line_of_business_code = pc.line_of_business_code
union
select 'en-us' as language_code, 'lifesuite_version' as code_type, 'version' as code_id, lifesuite_version as code_value, '' as external_code from lifesuite_version
union
select 'en-us' as language_code, 'impairment_restriction' as code_type, impairment_restriction_code as code_id, impairment_text as code_value, '' as external_code from impairment_restriction
union
select lang.code_value as language_code, 'impairment_restriction' as code_type, impairment_restriction_code as code_id, alt_impairment_text as code_value, '' as external_code from impairment_restriction, (select * from tl_code where code_type = 'System' and code_id = 'AltLanguage') lang where lang.code_value is not null and alt_impairment_text is not null and rtrim(alt_impairment_text) <> ''
union
select 'en-us' as language_code, 'provider' as code_type, rtrim(provider) + '_' + rtrim(evidence_type) as code_id, us_vendor as code_value, non_us_vendor as external_code from provider
union
select distinct 'en-us' as language_code, 'g_number' as code_type, g_number as code_id, g_number as code_value, '' as external_code from association_plan
union
select distinct 'en-us' as language_code, 'active_product_' + lower(rtrim(ap.association_code) + '_' + rtrim(ap.g_number) + '_' + lb.line_of_business_code) as code_type, pc.plan_code_id as code_id, rtrim( pc.plan_code_id ) + '-' + pc.description as code_value, '' as external_code
from association_plan ap, line_of_business lb, tl_plan_code pc where (ap.expiration_date > CURRENT_TIMESTAMP or ap.expiration_date is NULL) and pc.plan_code_id = ap.plan_code_id and lb.line_of_business_code = pc.line_of_business_code and ap.g_number is not null
union
select distinct 'en-us' as language_code, 'active_product_' + lower(rtrim(ap.association_code) + '__' + lb.line_of_business_code) as code_type, pc.plan_code_id as code_id, rtrim( pc.plan_code_id ) + '-' + pc.description as code_value, '' as external_codefrom association_plan ap, line_of_business lb, tl_plan_code pc where (ap.expiration_date > CURRENT_TIMESTAMP or ap.expiration_date is NULL) and pc.plan_code_id = ap.plan_code_id and lb.line_of_business_code = pc.line_of_business_code
union
select 'en-us' as language_code, 'agency_number' as code_type, agency.agency_number as code_id, rtrim(agency.agency_number) + CHAR(4) + rtrim(person.last_name) as code_value, '' as external_code from agency, person where person.person_id = agency.person_id
union
select 'en-us' as language_code, 'Answer Set ' + rtrim(tl_answer_set_answers.answer_set_name) as code_type, rtrim(cast(tl_answer_set_answers.sequence_number as char(30))) as code_id,
rtrim(tl_answer_set_answers.answer_text) as code_value, rtrim(tl_answer_set_answers.alt_answer_text) as external_code from tl_answer_set_answers
union
select 'en-us' as language_code, 'rulebook' as code_type, cast(rulebook_id as char(30)) as code_id, rulebook_name, description as external_code from rulebook_proxy_view where type is null or type = 0
union
select 'en-us' as language_code, lower(code_type), code_id, code_value, external_code from rulebook_rate_class
union
select 'en-us' as language_code, 'source_partner_codes' as code_type, external_code as code_id, code_id as code_value, '' as external_code from tl_code where code_type = 'source_info_codes' and external_code is not null and rtrim(external_code) <> ''
union
select 'en-us' as language_code, 'CedentCompany' as code_type, company_code as code_id, last_name as code_value, '' as external_code from company c, person p where c.person_id = p.person_id and p.class_type = 'CedentCompany'
union
select 'en-us' as language_code, 'CedentUnderwriter_' + lower(company_code) as code_type, cast(p2.person_id as char(30)) as code_id, rtrim (p2.last_name) + ',' + rtrim (p2.first_name) as code_value, '' as external_code from company c, person p, party_relation pr, person p2 where c.person_id = p.person_id and p.class_type = 'CedentCompany' and p.person_id = pr.parent_id and pr.person_id = p2.person_id and p2.class_type = 'CedentUnderwriter'
union
select 'en-us' as language_code, 'CedentContact_' + lower(company_code) as code_type, cast(p2.person_id as char(30)) as code_id, rtrim (p2.last_name) + ',' + rtrim (p2.first_name) as code_value, '' as external_code from company c, person p, party_relation pr, person p2 where c.person_id = p.person_id and p.class_type = 'CedentCompany' and p.person_id = pr.parent_id and pr.person_id = p2.person_id and p2.class_type = 'CedentContact'
union
select 'en-us' as language_code, 'Reinsurer' as code_type, company_code as code_id, last_name as code_value, '' as external_code from company c, person p where c.person_id = p.person_id and p.class_type = 'Reinsurer'
union
select 'en-us' as language_code, 'active_retro_company_ob' as code_type, company_code as code_id, last_name as code_value, '' as external_code from company c, person p where c.person_id = p.person_id and p.class_type = 'RetroOBCompany'
union
select 'en-us' as language_code, 'active_retro_company_retro' as code_type, company_code as code_id, last_name as code_value, '' as external_code from company c, person p where c.person_id = p.person_id and p.class_type = 'RetroCompany'
union
select 'en-us' as language_code, 'cedent_fax' as code_type, company_code as code_id, area_code + prefix + ph.suffix as code_value, extension as external_code from company c, person p, person_phone ph where c.person_id = p.person_id and p.person_id = ph.person_id and p.class_type = 'CedentCompany' and lower(ph.phone_type_code) = 'fax'
union
select 'en-us' as language_code, 'coverage_indicator' as code_type, indicator_code as code_id, description as code_value, external_code from tl_coverage_indicator_code
union
select 'en-us' as language_code, 'address_type' as code_type, address_type_code as code_id, external_code as code_value, external_code from tl_address_type
union
select 'en-us' as language_code, 'benefit_type' as code_type, cast(benefit_id as char(30)) as code_id, name as code_value, '' as external_code from tl_benefit_type
union
select 'en-us' as language_code, 'reinsurance_vendor' as code_type, reinsurance_vendor_code as code_id, name as code_value, external_code from reinsurance_vendor
union
select 'en-us' as language_code, 'coverage_type' as code_type, coverage_type as code_id, description as code_value, external_code from tl_coverage_type
union
select 'en-us' as language_code, 'death_benefit_option' as code_type, death_benefit_option_code as code_id, external_code as code_value, external_code from tl_death_benefit_option
union
select 'en-us' as language_code, 'death_benefit_option_description' as code_type, death_benefit_option_code as code_id, description as code_value, '' as external_code from tl_death_benefit_option_desc
union
select 'en-us' as language_code, 'extended_property' as code_type, property_name as code_id, description as code_value, '' as external_code from tl_extended_property
union
select 'en-us' as language_code, 'language' as code_type, language_code as code_id, description as code_value, external_code from tl_language
union
select 'en-us' as language_code, 'marital_status' as code_type, marital_status_code as code_id, description as code_value, external_code from tl_marital_status
union
select 'en-us' as language_code, 'person_type' as code_type, person_type_id as code_id, description as code_value, '' as external_code from tl_person_type
union
select 'en-us' as language_code, 'policy_status' as code_type, short_code as code_id, policy_status_code as code_value, '' as external_code from tl_policy_status
union
select 'en-us' as language_code, 'requirement_type' as code_type, requirement_type_id as code_id, description as code_value, '' as external_code from tl_requirement_type
union
select 'en-us' as language_code, 'tax_type' as code_type, tax_type_id as code_id, description as code_value, '' as external_code from tl_tax_type
union
select 'en-us' as language_code, 'tobacco_type' as code_type, tobacco_type_id as code_id, external_code as code_value, external_code from tl_tobacco_type
union
select 'en-us' as language_code, 'tobacco_use' as code_type, tobacco_use_id as code_id, external_code as code_value, external_code from tl_tobacco_use
union
select 'en-us' as language_code, 'address_type_description' as code_type, address_type_code as code_id, description as code_value, '' as external_code from tl_address_type_description
union
select 'en-us' as language_code, 'beneficiary_type' as code_type, beneficiary_type as code_id, description as code_value, '' as external_code from tl_beneficiary_type_desc
union
select 'en-us' as language_code, 'benefit_type_description' as code_type, cast(benefit_id as char(30)) as code_id, description as code_value, '' as external_code from tl_benefit_type_description
union
select 'en-us' as language_code, 'note_type' as code_type, note_type as code_id, description as code_value, '' as external_code from tl_note_type_description
union
select 'en-us' as language_code, 'phone_type' as code_type, phone_type_code as code_id, description as code_value, '' as external_code from tl_phone_type_description
union
select 'en-us' as language_code, 'policy_role' as code_type, code as code_id, description as code_value, '' as external_code from tl_policy_role_description
union
select 'en-us' as language_code, 'purpose_of_coverage' as code_type, purpose_of_coverage_id as code_id, description as code_value, '' as external_code from tl_purpose_of_coverage_desc
union
select 'en-us' as language_code, 'tobacco_type_description' as code_type, tobacco_type_id as code_id, description as code_value, '' as external_code from tl_tobacco_type_description
union
select 'en-us' as language_code, 'tobacco_use_description' as code_type, tobacco_use_id as code_id, description as code_value, '' as external_code from tl_tobacco_use_description
union
select 'en-us' as language_code, 'family_history_relationship' as code_type, famhist_relationship_code as code_id, famhist_relationship_code as code_value, famhist_relationship_code as external_code from tl_family_history_relationship
union
select 'en-us' as language_code, 'occupation' as code_type, occupation as code_id, occupation as code_value, occupation_code as external_code from occupation
union
select 'en-us' as language_code, 'source_info_codes' as code_type, source_info as code_id, source_description as code_value, partner_id as external_code from tl_source_info
union
select 'en-us' as language_code, 'distributor_codes' as code_type, distributor_code as code_id, distributor_description as code_value, '' as external_code from tl_distributor_codes
union
select 'en-us' as language_code, 'source_partner_codes' as code_type, partner_id as code_id, source_info as code_value, '' as external_code from tl_source_info where partner_id is not null and rtrim(partner_id) <> ''
union
select 'en-us' as language_code, 'PurposeOfCoverage' as code_type, description as code_id, purpose_of_coverage_id as code_value, '' as external_code from tl_purpose_of_coverage_desc
union
select 'en-us' as language_code, 'policy_status' as code_type, short_code as code_id, policy_status_code as code_value, '' as external_code from tl_policy_status
union
select 'en-us' as language_code, 'PolicyStatus' as code_type, policy_status_code as code_id, description as code_value, '' as external_code from tl_policy_status_description
union
select distinct 'en-us' as language_code, 'table_rating_reason' as code_type, reason_text as code_id, reason_text as code_value, reason_code as external_code from tl_final_action_reason where reason_status = 'Table Rating'
union
select distinct lang.code_value as language_code, 'table_rating_reason' as code_type, reason_text as code_id, alt_reason_text as code_value, reason_code as external_code from tl_final_action_reason, (select * from tl_code where code_type = 'System' and code_id = 'AltLanguage') lang where reason_status = 'Table Rating'and lang.code_value is not null and alt_reason_text is not null
union
select 'en-us' as language_code, 'tpa_name' as code_type, t.tpa_code as code_id, p.last_name as code_value, t.tpa_short_name as external_code from tpa t, person p where t.person_id = p.person_id
union
select 'en-us' as language_code, 'active_aus_users' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value, rtrim(aus_user.login_id) as external_code from aus_user, person where aus_user.is_active<>0 and aus_user.person_id = person.person_id and (aus_user.deleted is null or aus_user.deleted = 0)
union
select 'en-us' as language_code, 'aus_users' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value, rtrim(aus_user.login_id) as external_code from aus_user, person where  aus_user.person_id = person.person_id
union
select 'en-us' as language_code, 'aus_users_basic' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value, rtrim(aus_user.login_id) as external_code from aus_user, person where aus_user.is_active<>0 and aus_user.person_id = person.person_id and (aus_user.deleted is null or aus_user.deleted = 0) and (aus_user.is_agent is null or aus_user.is_agent = 0) and (aus_user.is_agency is null or aus_user.is_agency = 0)
union
select 'en-us' as language_code, 'active_underwriter' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value, rtrim(aus_user.login_id) as external_code from aus_user, person where aus_user.is_underwriter<>0 and aus_user.is_active<>0 and aus_user.person_id = person.person_id and (aus_user.deleted is null or aus_user.deleted = 0)
union
select 'en-us' as language_code, 'underwriter' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) + ' (D)' as code_value, rtrim(aus_user.login_id) as external_code from aus_user, person where aus_user.is_underwriter<>0 and aus_user.person_id = person.person_id and (aus_user.deleted is not null and aus_user.deleted <> 0)
union
select 'en-us' as language_code, 'underwriter' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) + ' (I)' as code_value, rtrim(aus_user.login_id) as external_code from aus_user, person where aus_user.is_underwriter<>0 and aus_user.person_id = person.person_id and (aus_user.deleted is null or aus_user.deleted = 0) and (aus_user.is_active is null or aus_user.is_active = 0)
union
select 'en-us' as language_code, 'underwriter' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value, rtrim(aus_user.login_id) as external_code from aus_user, person where aus_user.is_underwriter<>0 and aus_user.person_id = person.person_id and (aus_user.deleted is null or aus_user.deleted = 0) and (aus_user.is_active is not null and aus_user.is_active <> 0)
union
select 'en-us' as language_code, 'active_service_associate' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value,
rtrim(aus_user.login_id) as external_code from aus_user, person where (aus_user.is_active is not null and aus_user.is_active <> 0) and
(aus_user.is_service_associate is not null and aus_user.is_service_associate <> 0) and aus_user.person_id = person.person_id and (aus_user.deleted is null or aus_user.deleted = 0)
union
select 'en-us' as language_code, 'service_associate' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) + ' (D)' as code_value,
rtrim(aus_user.login_id) as external_code from aus_user, person where (aus_user.is_service_associate is not null and aus_user.is_service_associate <> 0) and
aus_user.person_id = person.person_id and (aus_user.deleted is not null and aus_user.deleted <> 0)
union
select 'en-us' as language_code, 'service_associate' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) + ' (I)' as code_value,
rtrim(aus_user.login_id) as external_code from aus_user, person where (aus_user.is_service_associate is not null and aus_user.is_service_associate <> 0) and
aus_user.person_id = person.person_id and (aus_user.deleted is null or aus_user.deleted = 0) and (aus_user.is_active is null or aus_user.is_active = 0)
union
select 'en-us' as language_code, 'service_associate' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value,
rtrim(aus_user.login_id) as external_code from aus_user, person where (aus_user.is_service_associate is not null and aus_user.is_service_associate <> 0) and
aus_user.person_id = person.person_id and (aus_user.deleted is null or aus_user.deleted = 0) and (aus_user.is_active is not null and aus_user.is_active <> 0)
union
select 'en-us' as language_code, 'underwriter_and_service_associate' as code_type, cast(aus_user.user_id as char(30)) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value,
rtrim(aus_user.login_id) as external_code from aus_user, person where ((aus_user.is_service_associate is not null and aus_user.is_service_associate <> 0) or
(aus_user.is_underwriter is not null and aus_user.is_underwriter <> 0)) and aus_user.person_id = person.person_id and (aus_user.deleted is null or aus_user.deleted = 0)
union
select 'en-us' as language_code, 'active_team' as code_type, cast(team_id as char(30)) as code_id, team_name as code_value, '' as external_code from team where (is_active is not null and is_active <> 0)
union
select 'en-us' as language_code, 'team' as code_type, cast(team_id as char(30)) as code_id, rtrim(team_name) + ' (D)' as code_value, '' as external_code from team where (deleted is not null and deleted <> 0)
union
select 'en-us' as language_code, 'team' as code_type, cast(team_id as char(30)) as code_id, rtrim(team_name) + ' (I)' as code_value, '' as external_code from team where (deleted is null or deleted = 0) and (is_active is null or is_active = 0)
union
select 'en-us' as language_code, 'team' as code_type, cast(team_id as char(30)) as code_id, rtrim(team_name) as code_value, '' as external_code from team where (deleted is null or deleted = 0) and (is_active is not null and is_active <> 0)
union
select language_code, 'benefit_' + lower(rtrim(ltrim(plan_code_id))) as code_type, cast(benefit_id as char(30)) as code_id, name as code_value, '' as external_code from plan_benefit where g_number is null
union
select language_code, 'benefit_' + lower(rtrim(ltrim(plan_code_id))) + '_' + lower(rtrim(ltrim(g_number))) as code_type, cast(benefit_id as char(30)) as code_id, name as code_value, '' as external_code from plan_benefit where g_number is not null
union
select language_code, 'benefitperiod_' + lower(rtrim(ltrim(plan_code_id))) as code_type, period_id as code_id, period as code_value, '' as external_code from benefit_period where g_number is null
union
select language_code, 'benefitperiod_' + lower(rtrim(ltrim(plan_code_id))) + '_' + lower(rtrim(ltrim(g_number))) as code_type, period_id as code_id, period as code_value, '' as external_code from benefit_period where g_number is not null
union
select language_code, 'eliminationperiod_' + lower(rtrim(ltrim(plan_code_id))) as code_type, period_id as code_id, period as code_value, '' as external_code from elimination_period where g_number is null
union
select language_code, 'eliminationperiod_' + lower(rtrim(ltrim(plan_code_id))) + '_' + lower(rtrim(ltrim(g_number))) as code_type, period_id as code_id, period as code_value, '' as external_code from elimination_period where g_number is not null
union
select language_code, 'benefit_' + lower(rtrim(ltrim(g_number))) + '_' + lower(rtrim(ltrim(plan_code_id)))  as code_type, cast(benefit_id as char(30)) as code_id, name as code_value, '' as external_code from plan_benefit where g_number is not null
union
select language_code, 'benefitperiod_' +  lower(rtrim(ltrim(g_number))) + '_' + lower(rtrim(ltrim(plan_code_id)))  as code_type, period_id as code_id, period as code_value, '' as external_code from benefit_period where g_number is not null
union
select language_code, 'eliminationperiod_' + lower(rtrim(ltrim(g_number))) + '_' + lower(rtrim(ltrim(plan_code_id)))  as code_type, period_id as code_id, period as code_value, '' as external_code from elimination_period where g_number is not null
union
select distinct 'en-us' as language_code, 'g_number_' + lower(rtrim(association_code)) as code_type, g_number as code_id, g_number as code_value, '' as external_code from association_plan where g_number is not null
union
select 'en-us' as language_code, 'active_login_cm' as code_type, rtrim(aus_user.login_id) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value,
cast(aus_user.user_id as char(30)) as external_code from aus_user, person where (aus_user.deleted is null or aus_user.deleted = 0) and (aus_user.is_active is not null and aus_user.is_active <> 0) and
(aus_user.is_service_associate is not null and aus_user.is_service_associate <> 0) and aus_user.person_id = person.person_id
union
select 'en-us' as language_code, 'active_login_uw' as code_type, rtrim(aus_user.login_id) as code_id, rtrim(person.last_name) + ', ' + rtrim(person.first_name) as code_value,
cast(aus_user.user_id as char(30)) as external_code from aus_user, person where (aus_user.deleted is null or aus_user.deleted = 0) and (aus_user.is_active is not null and aus_user.is_active <> 0) and
(aus_user.is_underwriter is not null and aus_user.is_underwriter <> 0) and aus_user.person_id = person.person_id
union
select language_code, 'issue_request_' + code_type as code_type, code_id, code_value, external_code from tl_code where code_type in (select code_id from tl_code where language_code = 'en-us' and code_type = 'AmendmentType')
union
select 'en-us' as language_code, 'employer' as code_type, company.company_code as code_id, person.last_name as code_value, cast(company.person_id as char(30)) as external_code from company, person where person.person_id = company.person_id and (class_type = 'Employer')
union
select 'en-us' as language_code, 'agent_users' as code_type, cast(aus_user.user_id as char(30)) as code_id, aus_user.agent_number as code_value, rtrim(aus_user.login_id) as external_code from aus_user where aus_user.is_active<>0 and (aus_user.deleted is null or aus_user.deleted = 0) and (aus_user.is_agent is not null and aus_user.is_agent <> 0)
union
select 'en-us' as language_code, 'agency_users' as code_type, cast(aus_user.user_id as char(30)) as code_id, aus_user.agency_number as code_value, rtrim(aus_user.login_id) as external_code from aus_user where aus_user.is_active<>0 and (aus_user.deleted is null or aus_user.deleted = 0) and (aus_user.is_agency is not null and aus_user.is_agency <> 0)
union
select language_code, ('plan_' + rtrim(option_type) + '_' + rtrim(plan_code_id)) as code_type, cast(sequence_number as char(30)) as code_id, description as code_value, '' as external_code from tl_plan_option
union
select 'en-us' as language_code, 'trust' as code_type, company.company_code as code_id, person.last_name as code_value, cast(company.person_id as char(30)) as external_code from company, person where person.person_id = company.person_id and (class_type = 'Trust')
union
select 'en-us' as language_code, 'ppo' as code_type, cast(company.person_id as char(30)) as code_id, person.last_name as code_value, cast(company.expiration_date as char(30)) as external_code from company, person where person.person_id = company.person_id and (class_type = 'PPO')

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[benefit_amount_operand_view]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[benefit_amount_operand_view]
END
GO

			if ( OBJECT_ID(N'codes_view') IS NULL OR OBJECT_ID(N'codes_view') IS NULL OR OBJECT_ID(N'codes_view') IS NULL  )
	BEGIN
		RAISERROR ('Required view object dependency is missing, unable to create view', 16, 1)
	END

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			create view [dbo].[benefit_amount_operand_view] as
select
	'getBenefitAmount(' + rtrim(code_value) + ')' as name,
	'dec' as type,
	'Benefit ' + rtrim(code_value) + ' Amount' as display,
	'The amount of the ' + rtrim(code_value) + ' Benefit on the coverage.'  as description,
	'' as value_list
from
	codes_view
where
	code_type = 'benefit_type' and
	language_code = 'en-us'

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[benefit_exists_operand_view]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[benefit_exists_operand_view]
END
GO

			if ( OBJECT_ID(N'codes_view') IS NULL OR OBJECT_ID(N'codes_view') IS NULL OR OBJECT_ID(N'codes_view') IS NULL  )
	BEGIN
		RAISERROR ('Required view object dependency is missing, unable to create view', 16, 1)
	END

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			create view [dbo].[benefit_exists_operand_view] as
select
	'getBenefitExists(' + rtrim(code_value) + ')' as name,
	'bool' as type,
	'Benefit ' + rtrim(code_value) + ' Exists' as display,
	'Determines if ' + rtrim(code_value) + ' Benefit exists on the coverage.'  as description,
	'Boolean' as value_list
from
	codes_view
where
	code_type = 'benefit_type' and
	language_code = 'en-us'

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ratable_occupations_view]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[ratable_occupations_view]
END
GO

			if ( OBJECT_ID(N'codes_view') IS NULL OR OBJECT_ID(N'codes_view') IS NULL OR OBJECT_ID(N'codes_view') IS NULL  )
	BEGIN
		RAISERROR ('Required view object dependency is missing, unable to create view', 16, 1)
	END

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			create view [dbo].[ratable_occupations_view] as
select
	code_value
from
	codes_view
where
	code_type = 'occupation' and
	external_code is not null and
	external_code <> '0'

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[cases_to_issue_view] AS
SELECT p.company_code
       ,p.policy_id
       ,p.policy_number
       ,p.priority
       ,p.policy_status_code
       ,p.policy_status_date
       ,p.case_group_id
       ,p.association_code
       ,ppi.applicant_status        AS applicant_status_short
       ,ppi.applicant_status_date
	   ,primaryplan.plan_code_id as primary_plan_code
       ,ppi.is_member
       ,ppi.adverse_history
       ,pp.policy_person_id
       ,pp.relationship_to_insured
       ,i.party_id
       ,i.title                     AS insured_title
       ,i.last_name                 AS insured_last_name
       ,i.middle_name               AS insured_middle_name
       ,i.first_name                AS insured_first_name
       ,i.suffix                    AS insured_suffix
       ,i.tax_id                    AS insured_tax_id
       ,i.birth_date                AS insured_birth_date
       ,i.client_id                 AS insured_client_id
       ,ppi.primary_insured_flag
       ,ppi.underwriting_amount     AS insured_underwriting_amount
       ,p.application_date
       ,p.application_number
       ,p.added_date
       ,p.receive_date
       ,ppi.reopen_date
       ,p.underwriter_id
	   ,uw.login_id as underwriter_login_id
       ,p.team_id
       ,p.service_associate_id
	   ,sa.login_id as service_associate_login_id
       ,p.tpa_code
       ,p.cedent_policy_number
       ,p.cedent_company_code
       ,p.cedent_underwriter_id
       ,p.cedent_contact_id
       ,p.cedent_date_sent
       ,p.international_or_domestic
       ,p.idb_flag
       ,p.currency_code
       ,p.employer_id
       ,ir.open_pi_req
	   ,urmc.unchk_rvw_count AS uw_rm_count
FROM   ins_open_post_issue_req_count AS ir
       INNER JOIN policy_person AS pp
         ON ir.policy_person_id = pp.policy_person_id
       INNER JOIN policy AS p
         ON pp.policy_id = p.policy_id
       INNER JOIN policy_person_insured AS ppi
         ON pp.policy_person_id = ppi.policy_person_id
       INNER JOIN person AS i
         ON pp.person_id = i.person_id
RIGHT OUTER JOIN  (SELECT  pc.plan_code_id
                   ,cp.person_id 
                    FROM  policy_coverage AS pc 
                    INNER JOIN coverage_person AS cp ON pc.policy_coverage_id = cp.policy_coverage_id) primaryplan 
                    ON primaryplan.person_id = pp.person_id
RIGHT OUTER JOIN (select login_id,user_id from aus_user ) uw ON uw.user_id = p.underwriter_id
RIGHT OUTER JOIN (select login_id,user_id from aus_user ) sa ON sa.user_id = p.service_associate_id
RIGHT OUTER JOIN (SELECT unchk_rvw_count,policy_person_id FROM   unchecked_rvw_msg_count) urmc
                 ON urmc.policy_person_id = pp.policy_person_id
WHERE  (p.policy_status_code = 'Closed')
       AND (ppi.applicant_status = 'AP')
-- C01 END

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[policy_by_product_proxy_view]
AS
  SELECT p.company_code,
         p.policy_id,
         p.policy_number,
         p.priority,
         p.policy_status_code,
         p.policy_status_date,
         p.case_group_id,
         p.association_code,
         ppi.applicant_status        AS applicant_status_short,
         ppi.applicant_status_date,
         pc.plan_code_id,
         cpi.g_number,
         ppi.is_member,
         ppi.adverse_history,
         pp.policy_person_id,
         pp.relationship_to_insured,
         i.party_id,
         i.title                     AS insured_title,
         i.last_name                 AS insured_last_name,
         i.middle_name               AS insured_middle_name,
         i.first_name                AS insured_first_name,
         i.suffix                    AS insured_suffix,
         i.tax_id                    AS insured_tax_id,
         i.birth_date                AS insured_birth_date,
         i.client_id                 AS insured_client_id,
         ppi.underwriting_amount     AS insured_underwriting_amount,
         p.application_date,
         p.application_number,
         p.added_date,
         p.receive_date,
         ppi.reopen_date,
         p.last_underwrite_date,
         p.agent_signed_date,
         p.requested_issue_date,
         cpi.final_action_date,
         p.underwriter_id,
         p.team_id,
         p.service_associate_id,
         p.tpa_code,
         p.cedent_policy_number,
         p.cedent_company_code,
         p.cedent_underwriter_id,
         p.cedent_contact_id,
         p.cedent_date_sent,
         p.international_or_domestic,
         p.idb_flag,
         p.currency_code,
         p.employer_id,
         p.alternate_case_id,
         p.source_info,
         p.distributor_code,
         agt.agent_number,
         agy.agency_number
  FROM   policy AS p
         INNER JOIN policy_person AS pp
           ON pp.policy_id = p.policy_id
         INNER JOIN policy_person_insured AS ppi
           ON ppi.policy_person_id = pp.policy_person_id
         INNER JOIN person AS i
           ON i.person_id = pp.person_id
         INNER JOIN coverage_person_insured AS cpi
           ON cpi.policy_person_id = ppi.policy_person_id
         INNER JOIN coverage_person AS cp
           ON cp.coverage_person_id = cpi.coverage_person_id
         INNER JOIN policy_coverage AS pc
           ON pc.policy_coverage_id = cp.policy_coverage_id
         LEFT OUTER JOIN agent_view AS agt
           ON p.policy_id = agt.policy_id
         LEFT OUTER JOIN agency_view AS agy
           ON p.policy_id = agy.policy_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[tpa_codes_view] as
select 'tpa' as code_type, tpa_code as code_id, last_name as code_value, cast(person_id as char(30)) as external_code, 1 as active_flag from tpa_view
	where expiration_date > CURRENT_TIMESTAMP or expiration_date is NULL
union
select 'tpa' as code_type, tpa_code as code_id, rtrim(last_name) + ' (Inactive)' as code_value, cast(person_id as char(30)) as external_code, 0 as active_flag from tpa_view
	where expiration_date <= CURRENT_TIMESTAMP and expiration_date is not NULL

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[data_mart_codes]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[data_mart_codes]
END
GO

			if ( OBJECT_ID(N'codes_view') IS NULL OR OBJECT_ID(N'codes_view') IS NULL OR OBJECT_ID(N'codes_view') IS NULL OR OBJECT_ID(N'codes_view') IS NULL OR OBJECT_ID(N'codes_view') IS NULL  )
	BEGIN
		RAISERROR ('Required view object dependency is missing, unable to create view', 16, 1)
	END

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			create view [dbo].[data_mart_codes] as
select
*
from
codes_view

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[data_mart_team] as
select
utv.user_id,
(select
ltrim(rtrim(p.first_name) + ' ' + rtrim(p.last_name))
from
aus_user u, person p
where
u.user_id = utv.user_id and
p.person_id = u.person_id
) as user_name,
utv.auto_assign,
utv.team_id,
utv.team_name,
utv.description,
utv.is_active
from
user_teams_view utv

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[data_mart_privilege] as
select
role_id,
restriction_level,
privilege_id,
name,
description,
is_active,
subsystem_name
from
role_privilege_view

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[data_mart_requirement] as
select
rv.insured_requirement_id as requirement_id,
rv.requirement_information_id,
rv.requirement_code,
rv.added_by,
(select
ltrim(rtrim(ps.first_name) + ' ' + rtrim(ps.last_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = rv.added_by
) as added_by_name,
rv.added_date,
rv.closed_by,
(select
ltrim(rtrim(ps.first_name) + ' ' + rtrim(ps.last_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = rv.closed_by
) as closed_by_name,
rv.closed_date,
(select
tc.code_id
from
tl_code tc
where
tc.language_code = 'en-us' and
tc.code_type = 'RequirementStatus' and
((tc.code_id = rv.closed_disposition) or
(rv.closed_disposition is null and tc.code_id = 'O'))
) as closed_disposition,
(select
tc.code_value
from
tl_code tc
where
tc.language_code = 'en-us' and
tc.code_type = 'RequirementStatus' and
((tc.code_id = rv.closed_disposition) or
(rv.closed_disposition is null and tc.code_id = 'O'))
) as requirement_status,
rv.needed_for_approval_flag,
rv.notify_when_satisfied,
rv.review_message_id,
rv.policy_person_id as applicant_id,
rv.followup_date,
rv.ordered_by,
rv.ordered_date,
rv.can_auto_approve,
rv.received_id,
rv.note_id,
rv.received_by,
(select
ltrim(rtrim(ps.first_name) + ' ' + rtrim(ps.last_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = rv.received_by
) as received_by_name,
rv.received_date,
rv.create_comment,
rv.provider,
rv.evidence_type,
rv.authorization_required,
rv.external_requirement_code,
rv.last_followup_date,
rv.manual_or_automatic_entry,
rv.new_business_until_closed,
rv.provider_order_id,
rv.schedule_date,
rv.complete_date,
rv.alt_create_comment,
tlr.requirement_name,
tlr.requirement_category,
tlr.expiration_days,
tlr.followup_days,
tlr.requirement_type_id,
tlr.notify_when_received,
tlr.is_active,
tlr.updated_by,
(select
ltrim(rtrim(ps.first_name) + ' ' + rtrim(ps.last_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = tlr.updated_by
) as updated_by_name,
tlr.update_date,
tlr.hippa_auth_required,
tlr.external_followup_days,
tlr.hierarchy,
tlr.alt_lang,
(select description from tl_language where language_code = tlr.alt_lang
union
select code_value from tl_code where code_type = 'language' and code_id = tlr.alt_lang) as alt_lang_description,
tlr.alt_name
from
requirement_view rv,
tl_requirement tlr
where
tlr.requirement_code = rv.requirement_code

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[data_mart_tpa] as
select
tv.person_id,
tv.party_id,
ltrim(rtrim(tv.first_name) + ' ' + rtrim(tv.last_name)) as full_name,
tv.last_name,
tv.first_name,
tv.middle_name,
tv.title,
tv.suffix,
tv.tax_id,
tv.tax_type_id,
tv.birth_date,
tv.sex,
tv.email_address,
tv.alt_email_address,
tv.marital_status,
tv.tpa_short_name as tpa_code,
ltrim(rtrim(tv.contact_first_name) + ' ' + rtrim(tv.contact_last_name)) as contact_full_name,
tv.contact_last_name,
tv.contact_first_name,
tv.auto_closure_days,
tv.expiration_date,
dma.business_city,
dma.business_postal_code,
dma.business_address_line1,
dma.business_address_line2,
dma.business_address_line3,
dma.business_country_code,
dma.business_state_name,
dma.business_state_code,
dma.business_country_name,
dmp.work_phone_country_code,
dmp.work_phone_area_code,
dmp.work_phone_prefix,
dmp.work_phone_suffix,
dmp.work_phone_extension,
dmp.work_phone_pin,
dmp.fax_country_code,
dmp.fax_area_code,
dmp.fax_prefix,
dmp.fax_suffix,
dmp.fax_extension,
dmp.fax_pin
from
tpa_view tv 
INNER JOIN data_mart_address dma ON dma.person_id = tv.person_id
INNER JOIN data_mart_phone dmp ON dmp.person_id = tv.person_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[data_mart_company] as
select
cv.company_code,
cv.last_name as company_name,
cv.person_id,
cv.party_id,
cv.tax_id,
cv.email_address,
cv.alt_email_address,
cv.class_type,
cv.preferred_contact_mode,
cv.allow_aus_approval_flag,
cv.correspondence_directory,
cv.field1,
cv.field2,
cv.field3,
cv.field4,
cv.field5,
dma.business_city,
dma.business_postal_code,
dma.business_address_line1,
dma.business_address_line2,
dma.business_address_line3,
dma.business_country_code,
dma.business_state_name,
dma.business_state_code,
dma.business_country_name,
dma.billing_city,
dma.billing_postal_code,
dma.billing_address_line1,
dma.billing_address_line2,
dma.billing_address_line3,
dma.billing_country_code,
dma.billing_state_name,
dma.billing_state_code,
dma.billing_country_name,
dmp.work_phone_country_code,
dmp.work_phone_area_code,
dmp.work_phone_prefix,
dmp.work_phone_suffix,
dmp.work_phone_extension,
dmp.work_phone_pin,
dmp.fax_country_code,
dmp.fax_area_code,
dmp.fax_prefix,
dmp.fax_suffix,
dmp.fax_extension,
dmp.fax_pin
FROM company_view cv
INNER JOIN data_mart_address dma ON dma.person_id = cv.person_id
INNER  JOIN data_mart_phone dmp ON dmp.person_id = cv.person_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[auto_closure_proxy_view] as
select
		*
from
		policy_proxy_view
where
	applicant_status_short in ('PE', 'PM', 'NB', 'FA') and
	policy_person_id in
		(select
			ir.policy_person_id
		 from
			insured_requirement ir
		 where
			((ir.closed_disposition is null or
	 		  ir.closed_disposition in('O', 'H')) and
			 ir.ordered_date is not null) or
			ir.closed_disposition = 'OR'
	 	)

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			--C01 BEGIN
ALTER VIEW policy_proxy_view_uw_rm_count as
SELECT
pp.company_code
,pp.policy_id
,pp.policy_number
,pp.priority
,pp.policy_status_code
,pp.policy_status_date
,pp.case_group_id
,pp.association_code
,pp.applicant_status_short
,pp.applicant_status_date
,pp.primary_plan_code
,pp.is_member
,pp.adverse_history
,pp.policy_person_id
,pp.relationship_to_insured
,pp.party_id
,pp.insured_title
,pp.insured_last_name
,pp.insured_middle_name
,pp.insured_first_name
,pp.insured_suffix
,pp.insured_tax_id
,pp.insured_birth_date
,pp.insured_client_id
,pp.primary_insured_flag
,pp.insured_underwriting_amount
,pp.application_date
,pp.application_number
,pp.added_date
,pp.receive_date
,pp.reopen_date
,pp.underwriter_id
,pp.underwriter_login_id
,pp.team_id
,pp.service_associate_id
,pp.service_associate_login_id
,pp.tpa_code
,pp.cedent_policy_number
,pp.cedent_company_code
,pp.cedent_underwriter_id
,pp.cedent_contact_id
,pp.cedent_date_sent
,pp.international_or_domestic
,pp.idb_flag
,pp.currency_code
,pp.employer_id
,pp.alternate_case_id
,pp.source_info
,pp.distributor_code
,rvw.unchk_rvw_count as uw_rm_count
FROM
	unchecked_rvw_msg_count as rvw 
    INNER JOIN policy_proxy_view as pp ON (rvw.policy_person_id = pp.policy_person_id)
--C01 END

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[data_mart_coverage] as
select
icv.policy_coverage_id,
icv.policy_id as case_id,
icv.plan_code_id,
plc.description as plan_code_name,
plc.line_of_business_code,
(select
lob.name
from
line_of_business lob
where
lob.line_of_business_code = plc.line_of_business_code
) as line_of_business_name,
icv.death_benefit_option_code,
icv.purpose_of_coverage_id,
(select
poc.code_value
from
tl_code poc
where
poc.code_type = 'purpose_of_coverage' and
poc.code_id = icv.purpose_of_coverage_id and
poc.language_code = 'en-us'
union
select
poc.description
from
tl_purpose_of_coverage_desc poc
where
poc.purpose_of_coverage_id = icv.purpose_of_coverage_id
) as purpose_of_coverage,
icv.coverage_type,
icv.amount,
icv.premium_mode,
icv.investment_objective,
icv.pref_date_of_withdrawl,
icv.planned_premium,
icv.initial_planned_premium,
icv.equivalent_age,
icv.can_take_final_action_flag,
icv.dividend_option,
(select
div.code_value
from
tl_code div
where
div.code_type = 'Dividend Type' and
div.code_id = icv.dividend_option and
div.language_code = 'en-us'
union
select
div.code_value
from
tl_acord_codes div
where
div.code_type = 'Dividend Type' and
div.code_id = icv.dividend_option
) as dividend_option_name,
icv.approved_amount,
icv.policy_person_id as applicant_id,
icv.coverage_person_id as coverage_id,
icv.perm_flat_extra_amount,
icv.temp_flat_extra_amount,
icv.temp_flat_extra_period,
icv.flat_extra_reason,
icv.temp_table_rating,
icv.temp_table_rating_reason,
icv.rate_class_quoted,
icv.rate_class_approved,
icv.rate_class_issued,
icv.aviation_exclusion,
icv.perm_table_rating,
icv.perm_table_rating_reason,
icv.coverage_status,
icv.reason_text,
icv.is_smoker,
icv.business_ownership_percent,
icv.final_action_by_id,
(select
ltrim(rtrim(ps.first_name) + ' ' + rtrim(ps.last_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = icv.final_action_by_id
) as final_action_by_name,
icv.final_action_date,
icv.final_action_note,
icv.elimination_days,
icv.payout_frequency,
icv.waiting_period,
icv.g_number,
icv.person_id,
icv.relationship_to_insured_code,
icv.web_quoted_class,
icv.modal_premium_amount,
icv.issued_times_standard,
icv.jls_flag,
icv.split_flag,
icv.reinsurance_amount,
icv.rated_up_age,
icv.issue_age,
icv.reinsurance_company_code,
(select cpv.last_name from company_view cpv where cpv.company_code = icv.reinsurance_company_code) as reinsurance_company_name
from
insured_coverages_view icv,
tl_plan_code plc
where
plc.plan_code_id = icv.plan_code_id and
icv.coverage_status is not null
union
select
icv.policy_coverage_id,
icv.policy_id as case_id,
icv.plan_code_id,
plc.description as plan_code_name,
plc.line_of_business_code,
(select
lob.name
from
line_of_business lob
where
lob.line_of_business_code = plc.line_of_business_code
) as line_of_business_name,
icv.death_benefit_option_code,
icv.purpose_of_coverage_id,
(select
poc.code_value
from
tl_code poc
where
poc.code_type = 'purpose_of_coverage' and
poc.code_id = icv.purpose_of_coverage_id and
poc.language_code = 'en-us'
union
select
poc.description
from
tl_purpose_of_coverage_desc poc
where
poc.purpose_of_coverage_id = icv.purpose_of_coverage_id
) as purpose_of_coverage,
icv.coverage_type,
icv.amount,
icv.premium_mode,
icv.investment_objective,
icv.pref_date_of_withdrawl,
icv.planned_premium,
icv.initial_planned_premium,
icv.equivalent_age,
icv.can_take_final_action_flag,
icv.dividend_option,
(select
div.code_value
from
tl_code div
where
div.code_type = 'Dividend Type' and
div.code_id = icv.dividend_option and
div.language_code = 'en-us'
union
select
div.code_value
from
tl_acord_codes div
where
div.code_type = 'Dividend Type' and
div.code_id = icv.dividend_option
) as dividend_option_name,
icv.approved_amount,
icv.policy_person_id as applicant_id,
icv.coverage_person_id as coverage_id,
icv.perm_flat_extra_amount,
icv.temp_flat_extra_amount,
icv.temp_flat_extra_period,
icv.flat_extra_reason,
icv.temp_table_rating,
icv.temp_table_rating_reason,
icv.rate_class_quoted,
icv.rate_class_approved,
icv.rate_class_issued,
icv.aviation_exclusion,
icv.perm_table_rating,
icv.perm_table_rating_reason,
'Pending' as coverage_status,
icv.reason_text,
icv.is_smoker,
icv.business_ownership_percent,
icv.final_action_by_id,
(select
ltrim(rtrim(ps.first_name) + ' ' + rtrim(ps.last_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = icv.final_action_by_id
) as final_action_by_name,
icv.final_action_date,
icv.final_action_note,
icv.elimination_days,
icv.payout_frequency,
icv.waiting_period,
icv.g_number,
icv.person_id,
icv.relationship_to_insured_code,
icv.web_quoted_class,
icv.modal_premium_amount,
icv.issued_times_standard,
icv.jls_flag,
icv.split_flag,
icv.reinsurance_amount,
icv.rated_up_age,
icv.issue_age,
icv.reinsurance_company_code,
(select cpv.last_name from company_view cpv where cpv.company_code = icv.reinsurance_company_code) as reinsurance_company_name
from
insured_coverages_view icv,
tl_plan_code plc
where
plc.plan_code_id = icv.plan_code_id and
icv.coverage_status is null

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[data_mart_user] as
select
uv.person_id,
uv.party_id,
ltrim(rtrim(uv.first_name) + ' ' + rtrim(uv.last_name)) as full_name,
uv.last_name,
uv.first_name,
uv.middle_name,
uv.title,
uv.suffix,
uv.tax_id,
uv.tax_type_id,
uv.birth_date,
uv.sex,
uv.email_address,
uv.alt_email_address,
uv.marital_status,
uv.user_id,
uv.login_id,
uv.password,
uv.is_active,
uv.preferred_language_code,
uv.level_of_authority,
uv.is_underwriter,
uv.is_service_associate,
uv.role_id,
uv.is_agent,
uv.agent_number,
uv.is_agency,
uv.agency_number,
asr.name as role_name,
uv.restrict_to_teams,
uv.job_title,
uv.account_locked,
uv.account_locked_date,
uv.bad_login_attempt_count,
uv.last_bad_login_attempt_date,
uv.must_change_password,
uv.last_password_change_date,
dma.business_city,
dma.business_postal_code,
dma.business_address_line1,
dma.business_address_line2,
dma.business_address_line3,
dma.business_country_code,
dma.business_state_name,
dma.business_state_code,
dma.business_country_name,
dmp.work_phone_country_code,
dmp.work_phone_area_code,
dmp.work_phone_prefix,
dmp.work_phone_suffix,
dmp.work_phone_extension,
dmp.work_phone_pin,
dmp.fax_country_code,
dmp.fax_area_code,
dmp.fax_prefix,
dmp.fax_suffix,
dmp.fax_extension,
dmp.fax_pin
from
aus_user_view uv 
INNER JOIN  aus_security_roles asr ON asr.role_id = uv.role_id
INNER JOIN data_mart_address dma ON dma.person_id = uv.person_id
INNER JOIN  data_mart_phone dmp ON dmp.person_id = uv.person_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[data_mart_party] as
select
ppv.case_party_id,
ppv.case_id,
ppv.party_type,
ppv.relation,
ppv.person_id,
ppv.party_id,
ltrim(rtrim(ppv.first_name) + ' ' + rtrim(ppv.last_name)) as full_name,
ppv.last_name,
ppv.first_name,
ppv.middle_name,
ppv.title,
ppv.suffix,
ppv.tax_id,
ppv.tax_type_id,
ppv.birth_date,
ppv.sex,
ppv.email_address,
ppv.alt_email_address,
ppv.marital_status,
ppv.client_id,
ppv.class_type,
ppv.preferred_contact_mode,
ppv.field1,
ppv.field2,
ppv.field3,
ppv.field4,
ppv.field5,
dma.residence_city,
dma.residence_postal_code,
dma.residence_address_line1,
dma.residence_address_line2,
dma.residence_address_line3,
dma.residence_country_code,
dma.residence_state_name,
dma.residence_state_code,
dma.residence_country_name,
dma.business_city,
dma.business_postal_code,
dma.business_address_line1,
dma.business_address_line2,
dma.business_address_line3,
dma.business_country_code,
dma.business_state_name,
dma.business_state_code,
dma.business_country_name,
dma.billing_city,
dma.billing_postal_code,
dma.billing_address_line1,
dma.billing_address_line2,
dma.billing_address_line3,
dma.billing_country_code,
dma.billing_state_name,
dma.billing_state_code,
dma.billing_country_name,
dmp.home_phone_country_code,
dmp.home_phone_area_code,
dmp.home_phone_prefix,
dmp.home_phone_suffix,
dmp.home_phone_extension,
dmp.home_phone_pin,
dmp.work_phone_country_code,
dmp.work_phone_area_code,
dmp.work_phone_prefix,
dmp.work_phone_suffix,
dmp.work_phone_extension,
dmp.work_phone_pin,
dmp.fax_country_code,
dmp.fax_area_code,
dmp.fax_prefix,
dmp.fax_suffix,
dmp.fax_extension,
dmp.fax_pin
from
party_proxy_view ppv 
INNER JOIN data_mart_address dma ON dma.person_id = ppv.person_id
INNER JOIN data_mart_phone dmp ON dmp.person_id = ppv.person_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER VIEW [dbo].[data_mart_applicant] as
select
p.policy_id as case_id,
p.company_code,
(select cpv.last_name from company_view cpv where cpv.company_code = p.company_code) as company_name,
p.policy_number as case_number,
p.application_number,
p.issue_date,
p.underwriter_id,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = p.underwriter_id
) as underwriter_name,
p.team_id,
(select
tm.team_name
from
team tm
where
tm.team_id = p.team_id
) as team_name,
p.application_date,
p.agent_signed_date,
p.policy_status_code as case_status,
p.policy_status_date as case_status_date,
p.receive_date,
p.payment_mode_code,
(select
pmod.code_value
from
tl_acord_codes pmod
where
pmod.code_type = 'PaymentMode' and
pmod.code_id = p.payment_mode_code
union
select
pmod.code_value
from
tl_acord_codes pmod
where
pmod.code_type = 'PaymentMode' and
pmod.code_id = p.payment_mode_code
) as payment_mode_name,
p.payment_method_code,
(select
pmeth.code_value
from
tl_acord_codes pmeth
where
pmeth.code_type = 'PaymentMethod' and
pmeth.code_id = p.payment_method_code
union
select
pmeth.code_value
from
tl_acord_codes pmeth
where
pmeth.code_type = 'PaymentMethod' and
pmeth.code_id = p.payment_method_code
) as payment_method_name,
p.last_underwrite_date,
p.allow_aus_approval,
(select top 1 final_action_by_id from insured_coverages_view where policy_person_id = i.policy_person_id) as final_action_by,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = (select top 1 final_action_by_id from insured_coverages_view where policy_person_id = i.policy_person_id)
) as final_action_by_name,
(select top 1 final_action_date from insured_coverages_view where policy_person_id = i.policy_person_id) as final_action_date,
(select top 1 final_action_note from insured_coverages_view where policy_person_id = i.policy_person_id) as final_action_note,
(select top 1 reason_text from insured_coverages_view where policy_person_id = i.policy_person_id) as reason_text,
p.reinsurance_indicator,
p.reinsurance_vendor_code,
(select
riv.name
from
reinsurance_vendor riv
where
riv.reinsurance_vendor_code = p.reinsurance_vendor_code
) as reinsurance_vendor_name,
p.updated_by as case_updated_by,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = p.updated_by
) as case_updated_by_name,
p.updated_date as case_updated_date,
p.added_by case_added_by,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = p.added_by
) as case_added_by_name,
p.added_date as case_added_date,
p.cwa_amount,
p.cwa_date,
p.priority,
p.bank_rounting_number as bank_routing_number,
p.bank_account_number,
p.credit_card_type,
(select
credit.code_value
from
tl_acord_codes credit
where
credit.code_type = 'Credit Card Type' and
credit.code_id = p.credit_card_type
union
select
credit.code_value
from
tl_acord_codes credit
where
credit.code_type = 'Credit Card Type' and
credit.code_id = p.credit_card_type
) as credit_card_type_name,
p.credit_card_number,
p.credit_card_expiration_year,
p.credit_card_expiration_month,
p.list_bill_location,
p.list_bill_employee_id,
p.bill_day,
p.marketing_code,
p.mode_premium,
p.requested_issue_date,
p.case_group_id as case_family_id,
(select
value
from
object_property
where
object_id = p.policy_id and name = 'TPAFamilyId'
) as tpa_family_id,
(select
value
from
object_property
where
object_id = i.policy_person_id and name = 'CurrentEpsilonKey'
) as current_epsilon_dbkey,
p.service_associate_id,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = p.service_associate_id
) as service_associate_name,
p.association_code,
(select
assoc.name
from
association assoc
where
assoc.association_code = p.association_code
) as association_name,
(select
tv.tpa_short_name
from
tpa_view tv
where
tv.tpa_code = p.tpa_code
) as tpa_code,
(select
ltrim(rtrim(tv.last_name))
from
tpa_view tv
where
tv.tpa_code = p.tpa_code
) as tpa_name,
p.amex_account,
p.performed_jet_issue_flag,
p.source_info,
(select source_description from tl_source_info where source_info = p.source_info
union
select code_value from tl_code where code_type = 'source_info' and code_id = p.source_info and language_code = 'en-us') as source_description,
(select partner_id from tl_source_info where source_info = p.source_info
union
select external_code from tl_code where code_type = 'source_info' and code_id = p.source_info and language_code = 'en-us') as partner_id,
p.lead_number_id,
p.distributor_code,
(select distributor_description from tl_distributor_codes where distributor_code = p.distributor_code
union
select code_value from tl_code where code_type = 'distributor_codes' and code_id = p.distributor_code and language_code = 'en-us') as distributor_description,
p.alternate_case_id,
(select top 1 agent_number from agent_view where policy_id = p.policy_id and agent_number is not null) as agent_number,
(select top 1 ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name)) from person ps, agent_view av where av.person_id = ps.person_id and av.policy_id = p.policy_id and av.agent_number is not null) as agent_name,
(select top 1 agency_number from agency_view where policy_id = p.policy_id) as agency_number,
(select top 1 routing_number from agency_view where policy_id = p.policy_id) as routing_number,
(select top 1 rtrim(ps.last_name) from person ps, agency_view av where av.person_id = ps.person_id and av.policy_id = p.policy_id) as agency_name,
p.cedent_policy_number,
p.cedent_company_code,
(select cpv.last_name from company_view cpv where cpv.company_code = p.cedent_company_code) as cedent_company_name,
p.cedent_fax_number,
p.cedent_underwriter_id,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps
where
p.cedent_underwriter_id = ps.person_id
) as cedent_underwriter_name,
p.cedent_contact_id,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps
where
p.cedent_contact_id = ps.person_id
) as cedent_contact_name,
p.cedent_date_sent,
p.international_or_domestic,
p.idb_flag,
p.currency_code,
(select code_value from tl_code where code_type = 'currency_code' and code_id = p.currency_code and language_code = 'en-us') as currency_description,
p.preferred_language_code,
(select description from tl_language where language_code = p.preferred_language_code
union
select code_value from tl_code where code_type = 'language' and code_id = p.preferred_language_code and language_code = 'en-us') as preferred_language_description,
i.person_id,
i.party_id,
i.policy_person_id as applicant_id,
rtrim(i.last_name) + ', ' + rtrim(i.first_name) as full_name,
i.last_name,
i.first_name,
i.middle_name,
i.title,
i.suffix,
i.tax_id,
i.tax_type_id,
i.birth_date,
i.sex,
i.email_address,
i.alt_email_address,
i.marital_status,
i.client_id,
i.signed_state_id,
(select
ssn.state_name
from
tl_country_state ssn
where
ssn.country_state_id = i.signed_state_id
) as signed_state_name,
i.underwriting_amount,
(select top 1 issue_age from insured_coverages_view where policy_person_id = i.policy_person_id) as issue_age,
i.primary_insured_flag,
i.aviation_exclusion,
i.add_uw_amt,
(select code_value from tl_code where code_type = 'applicant_status' and code_id = i.applicant_status and language_code = 'en-us') as applicant_status,
i.applicant_status as applicant_status_short,
i.applicant_status_date,
i.is_member,
i.allow_auto_approval,
i.adverse_history,
i.und_allow_auto_approval,
i.und_allow_jet_issue,
i.und_allow_auto_ordering,
i.added_date as applicant_added_date,
i.added_by as applicant_added_by,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = i.added_by
) as applicant_added_by_name,
i.reopen_date,
i.retro_type,
i.aviation_flag,
i.entertainer_flag,
i.sports_flag,
i.foreign_flag,
i.additional_in_force,
i.relationship_to_insured as relationship_to_insured_id,
(select code_value from tl_acord_codes where code_type = 'VPI Relation RoleCode' and cast(code_id as char(30)) = i.relationship_to_insured
union
select code_value from tl_code where code_type = 'VPI Relation RoleCode' and cast(code_id as char(30)) = i.relationship_to_insured and language_code = 'en-us') as relationship_to_insured,
(select top 1 plan_code_id from insured_coverages_view where policy_person_id = i.policy_person_id) as plan_code_id,
(select top 1 planned_premium from insured_coverages_view where policy_person_id = i.policy_person_id) as planned_premium,
(select top 1 web_quoted_class from insured_coverages_view where policy_person_id = i.policy_person_id) as web_quoted_class,
(select top 1 rate_class_quoted from insured_coverages_view where policy_person_id = i.policy_person_id) as rate_class_quoted,
(select top 1 rate_class_approved from insured_coverages_view where policy_person_id = i.policy_person_id) as rate_class_approved,
(select top 1 rate_class_issued from insured_coverages_view where policy_person_id = i.policy_person_id) as rate_class_issued,
(select top 1 amount from insured_coverages_view where policy_person_id = i.policy_person_id) as amount,
(select top 1 perm_table_rating from insured_coverages_view where policy_person_id = i.policy_person_id) as perm_table_rating,
(select top 1 perm_flat_extra_amount from insured_coverages_view where policy_person_id = i.policy_person_id) as perm_flat_extra_amount,
dma.residence_city,
dma.residence_postal_code,
dma.residence_address_line1,
dma.residence_address_line2,
dma.residence_address_line3,
dma.residence_country_code,
dma.residence_state_name,
dma.residence_state_code,
dma.residence_country_name,
dma.business_city,
dma.business_postal_code,
dma.business_address_line1,
dma.business_address_line2,
dma.business_address_line3,
dma.business_country_code,
dma.business_state_name,
dma.business_state_code,
dma.business_country_name,
dmp.home_phone_country_code,
dmp.home_phone_area_code,
dmp.home_phone_prefix,
dmp.home_phone_suffix,
dmp.home_phone_extension,
dmp.home_phone_pin,
dmp.work_phone_country_code,
dmp.work_phone_area_code,
dmp.work_phone_prefix,
dmp.work_phone_suffix,
dmp.work_phone_extension,
dmp.work_phone_pin,
dmp.fax_country_code,
dmp.fax_area_code,
dmp.fax_prefix,
dmp.fax_suffix,
dmp.fax_extension,
dmp.fax_pin,
ap.create_date,
ap.expiration_date,
ap.manual_entry_flag,
ap.income,
ap.net_worth,
ap.total_inforce,
ap.replacement_amount,
ap.replacement_date,
(select tobacco_use_id from tobacco where requirement_information_id = ap.requirement_information_id) as smoker_status,
ap.birth_country,
(select
bc.country_name
from
tl_country bc
where
bc.country_id = ap.birth_country
) as birth_country_name,
ap.birth_state,
(select
bsn.state_name
from
tl_country_state bsn
where
bsn.country_state_id = ap.birth_state
) as birth_state_name,
ap.drivers_license_number,
ap.drivers_license_country_id,
(select
drc.country_name
from
tl_country drc
where
drc.country_id = ap.drivers_license_country_id
) as drivers_license_country_name,
ap.drivers_license_state,
(select
drsn.state_name
from
tl_country_state drsn
where
drsn.country_state_id = ap.drivers_license_state
) as drivers_license_state_name,
ap.bankruptcy_disposition,
ap.bankruptcy_discharge_date,
ap.occupation,
ap.height_inches,
ap.weight_pounds,
ap.weght_previous_year,
ap.reason_for_weight_change,
ap.waist_inches,
ap.last_md_visit,
ap.last_md_result,
ap.added_by as application_added_by,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = ap.added_by
) as application_added_by_name,
ap.added_date as application_added_date,
ap.updated_by as application_updated_by,
(select
ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
from
person ps, aus_user u
where
u.person_id = ps.person_id and u.user_id = ap.updated_by
) as application_updated_by_name,
ap.update_date as application_updated_date,
ap.beneficiary_type,
ap.medical_authorization_flag,
ap.citizenship_country_id,
(select
cc.country_name
from
tl_country cc
where
cc.country_id = ap.citizenship_country_id
) as citizenship_country_name,
ap.doctor_name,
ap.doctor_addr,
ap.doctor_city,
ap.doctor_state,
(select
docsn.state_name
from
tl_country_state docsn
where
docsn.country_state_id = ap.doctor_state
) as doctor_state_name,
ap.doctor_zip,
ap.last_visit_date,
ap.visit_reason,
ap.findings,
ap.treatments,
ap.still_under_treatment_flag,
ap.prior_consultations_flag,
ap.prior_consultation_detail,
ap.unearned_income,
ap.employer,
ap.years_at_employer,
ap.employer_address,
ap.income_prev_year,
ap.visa_type,
ap.job_duties,
ap.hippa_authorization_flag,
ap.monthly_expense,
ap.last_blood_profile_date,
ap.best_day_to_call,
ap.best_time_to_call,
ap.systolic_bp_reading,
ap.diastolic_bp_reading,
ap.cholesterol_reading,
ap.issue_state,
ap.business_income,
ap.business_net_worth,
ap.book_value,
ap.market_value,
ap.inspection_income,
ap.inspection_net_worth,
ap.inspection_business_income,
ap.inspection_business_net_worth,
ap.inspection_book_value,
ap.inspection_market_value,
ap.statement_income,
ap.statement_net_worth,
ap.statement_business_income,
ap.statement_business_net_worth,
ap.statement_book_value,
ap.statement_market_value,
ap.other_income,
ap.other_net_worth,
ap.other_business_income,
ap.other_business_net_worth,
ap.other_book_value,
ap.other_market_value
from
policy p,
insured i,
application_info_view ap,
data_mart_address dma,
data_mart_phone dmp
where
i.policy_id = p.policy_id and
ap.policy_person_id = i.policy_person_id and
dma.person_id = i.person_id and
dmp.person_id = i.person_id

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER PROCEDURE uspGetAdminAllApplicants 
    @password nvarchar(255),
    @where_clause nvarchar(500)
AS
BEGIN
DECLARE @sql1 nvarchar(4000)
DECLARE @sql2 nvarchar(4000)
DECLARE @sql3 nvarchar(4000)
DECLARE @sql4 nvarchar(4000)
SET @sql1= N'SELECT wrap.* FROM (SELECT     p.company_code, p.policy_number AS case_number, p.alternate_case_id AS alternate_case_number, p.receive_date, p.service_associate_id, 
                      dbo.clrLSDecrypt(i.last_name, ''' + @password + ''') AS applicant_last_name, dbo.clrLSDecrypt(i.first_name, ''' + @password + ''') AS applicant_first_name, i.sex AS gender, ppi.applicant_status AS applicant_status_code,
                          (SELECT     code_value
                            FROM          tl_code
                            WHERE      (language_code = ''en-us'') AND (code_type = ''applicant_status'') AND (code_id = ppi.applicant_status)) AS applicant_status, 
                      ppi.applicant_status_date, pc.amount AS amount_applied_for, dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as birth_date,
                          (SELECT     address_line1
                            FROM          person_address AS pa
                            WHERE      (address_type_code = ''RESIDENCE'') AND (person_id = i.person_id)) AS residence_address_line1,
                          (SELECT     address_line2
                            FROM          person_address AS pa
                            WHERE      (address_type_code = ''RESIDENCE'') AND (person_id = i.person_id)) AS residence_address_line2,
                          (SELECT     address_line3
                            FROM          person_address AS pa
                            WHERE      (address_type_code = ''RESIDENCE'') AND (person_id = i.person_id)) AS residence_address_line3,
                          (SELECT     city
                            FROM          person_address AS pa
                            WHERE      (address_type_code = ''RESIDENCE'') AND (person_id = i.person_id)) AS residence_city,
                          (SELECT     LTRIM(RTRIM(cs.state_name)) + '' ('' + LTRIM(RTRIM(cs.state_code)) + '')'' AS Expr1
                            FROM          person_address AS pa INNER JOIN
                                                   tl_country_state AS cs ON pa.country_state_id = cs.country_state_id
                            WHERE      (pa.address_type_code = ''RESIDENCE'') AND (pa.person_id = i.person_id)) AS residence_state,
                          (SELECT     postal_code
                            FROM          person_address AS pa
                            WHERE      (address_type_code = ''RESIDENCE'') AND (person_id = i.person_id)) AS residence_postal_code,
                          (SELECT     area_code
                            FROM          person_phone AS ph
                            WHERE      (phone_type_code = ''HOME'') AND (person_id = i.person_id)) AS home_phone_area_code,
                          (SELECT     prefix
                            FROM          person_phone AS ph
                            WHERE      (phone_type_code = ''HOME'') AND (person_id = i.person_id)) AS home_phone_prefix,
                          (SELECT     suffix
                            FROM          person_phone AS ph
                            WHERE      (phone_type_code = ''HOME'') AND (person_id = i.person_id)) AS home_phone_suffix,'
SET @sql2= N'(SELECT     area_code
                            FROM          person_phone AS ph
                            WHERE      (phone_type_code = ''WORK'') AND (person_id = i.person_id)) AS work_phone_area_code,
                          (SELECT     prefix
                            FROM          person_phone AS ph
                            WHERE      (phone_type_code = ''WORK'') AND (person_id = i.person_id)) AS work_phone_prefix,
                          (SELECT     suffix
                            FROM          person_phone AS ph
                            WHERE      (phone_type_code = ''WORK'') AND (person_id = i.person_id)) AS work_phone_suffix,
                          (SELECT     area_code
                            FROM          person_phone AS ph
                            WHERE      (phone_type_code = ''CELL'') AND (person_id = i.person_id)) AS cell_phone_area_code,
                          (SELECT     prefix
                            FROM          person_phone AS ph
                            WHERE      (phone_type_code = ''CELL'') AND (person_id = i.person_id)) AS cell_phone_prefix,
                          (SELECT     suffix
                            FROM          person_phone AS ph
                            WHERE      (phone_type_code = ''CELL'') AND (person_id = i.person_id)) AS cell_phone_suffix, i.email_address, cpi.final_action_date,
                          (SELECT     RTRIM(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + RTRIM(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')) AS Expr1
                            FROM          person AS ps INNER JOIN
                                                   aus_user AS u ON ps.person_id = u.person_id
                            WHERE      (u.user_id = cpi.final_action_by_id)) AS final_action_by, cpi.reason_text AS final_action_reason,
                          (SELECT     reason_code
                            FROM          tl_final_action_reason
                            WHERE      (reason_status =
                                                       (SELECT     code_value
                                                         FROM          tl_code AS tl_code_1
                                                         WHERE      (language_code = ''en-us'') AND (code_type = ''applicant_status'') AND (code_id = cpi.coverage_status))) AND 
                                                   (reason_text = cpi.reason_text)) AS reason_code, assoc.association_name, pc.plan_code_id,
                          (SELECT     description
                            FROM          tl_plan_code
                            WHERE      (plan_code_id = pc.plan_code_id)) AS plan_code_description, cpi.g_number, pc.planned_premium,
                          (SELECT     code_value
                            FROM          tl_acord_codes
                            WHERE      (code_type = ''Payment Mode'') AND (code_id = p.payment_mode_code)) AS premium_mode, cpi.web_quoted_class,'
SET @sql3= N'(SELECT     description
                            FROM          ta_rate_table_class
                            WHERE      (rulebook_id =
                                                       (SELECT     TOP (1) rulebook_id
                                                         FROM          rulebook_view
                                                         WHERE      (plan_code_id = pc.plan_code_id) AND (association_code = p.association_code) AND (type = 0 OR
                                                                                type IS NULL) OR
                                                                                (plan_code_id = pc.plan_code_id) AND (type = 0 OR
                                                                                type IS NULL) AND (p.association_code IS NULL))) AND (sequence_no = cpi.rate_class_quoted)) AS applied_for_rate_class,
                          (SELECT     description
                            FROM          ta_rate_table_class AS ta_rate_table_class_2
                            WHERE      (rulebook_id =
                                                       (SELECT     TOP (1) rulebook_id
                                                         FROM          rulebook_view AS rulebook_view_2
                                                         WHERE      (plan_code_id = pc.plan_code_id) AND (association_code = p.association_code) AND (type = 0 OR
                                                                                type IS NULL) OR
                                                                                (plan_code_id = pc.plan_code_id) AND (type = 0 OR
                                                                                type IS NULL) AND (p.association_code IS NULL))) AND (sequence_no = cpi.rate_class_approved)) 
                      AS system_recommended_rate_class,
                          (SELECT     description
                            FROM          ta_rate_table_class AS ta_rate_table_class_1
                            WHERE      (rulebook_id =
                                                       (SELECT     TOP (1) rulebook_id
                                                         FROM          rulebook_view AS rulebook_view_1
                                                         WHERE      (plan_code_id = pc.plan_code_id) AND (association_code = p.association_code) AND (type = 0 OR
                                                                                type IS NULL) OR
                                                                                (plan_code_id = pc.plan_code_id) AND (type = 0 OR
                                                                                type IS NULL) AND (p.association_code IS NULL))) AND (sequence_no = cpi.rate_class_issued)) AS rate_class_approved, 
                      pc.approved_amount AS issued_amount, pc.perm_table_rating AS table_rating, pc.perm_flat_extra_amount AS flat_extra_amount, p.cwa_amount, 
                      ap.income,
                          (SELECT     tobacco_use_id
                            FROM          tobacco
                            WHERE      (requirement_information_id = ap.requirement_information_id)) AS smoker_status, ap.occupation, '
SET @sql4= N'p.lead_number_id AS aggregator_lead_number, p.source_info,
                          (SELECT     partner_id
                            FROM          tl_source_info
                            WHERE      (source_info = p.source_info)) AS partner_id, p.distributor_code, p.underwriter_id,
                          (SELECT     RTRIM(dbo.clrLSDecrypt(last_name, ''' + @password + ''')) + '', '' + RTRIM(dbo.clrLSDecrypt(first_name, ''' + @password + ''')) AS Expr1
                            FROM          aus_user_view AS uw
                            WHERE      (user_id = p.underwriter_id)) AS underwriter_name,
                          (SELECT     RTRIM(dbo.clrLSDecrypt(last_name, ''' + @password + ''')) + '', '' + RTRIM(dbo.clrLSDecrypt(first_name, ''' + @password + ''')) AS Expr1
                            FROM          aus_user_view AS sa
                            WHERE      (user_id = p.service_associate_id)) AS service_associate_name,
                          (SELECT     team_name
                            FROM          team AS tm
                            WHERE      (team_id = p.team_id)) AS team_name,
                          (SELECT     TOP (1) agent_number
                            FROM          agent_view
                            WHERE      (policy_id = p.policy_id)) AS agent_1_number,
                          (SELECT     TOP (1) agent_number
                            FROM          agent_view AS agent_view_2
                            WHERE      (policy_id = p.policy_id) AND (agent_number NOT IN
                                                       (SELECT     agent_number
                                                         FROM          agent_view AS agent_view_1
                                                         WHERE      (policy_id = p.policy_id)))) AS agent_2_number,
                          (SELECT     TOP (1) agency_number
                            FROM          agency_view
                            WHERE      (policy_id = p.policy_id)) AS bga_agency_number, p.team_id
FROM         policy_person_insured AS ppi INNER JOIN
                      coverage_person AS cp INNER JOIN
                      coverage_person_insured AS cpi ON cp.coverage_person_id = cpi.coverage_person_id INNER JOIN
                      policy_coverage AS pc ON cp.policy_coverage_id = pc.policy_coverage_id INNER JOIN
                      person AS i ON cp.person_id = i.person_id INNER JOIN
                      policy AS p LEFT OUTER JOIN
                          (SELECT     association_code, name AS association_name
                            FROM          association
                            UNION
                            SELECT     c.company_code AS association_code, dbo.clrLSDecrypt(per.last_name, ''' + @password + ''') AS association_name
                            FROM         company AS c INNER JOIN
                                                  person AS per ON c.person_id = per.person_id
                            WHERE     (per.class_type = ''ASSN'') OR
                                                  (per.class_type = ''GRP'')) AS assoc ON assoc.association_code = p.association_code ON pc.policy_id = p.policy_id ON 
                      ppi.policy_person_id = cpi.policy_person_id INNER JOIN
                      insured_application_info AS ap ON ppi.policy_person_id = ap.policy_person_id) AS wrap '
END
BEGIN
EXEC(@sql1 + @sql2 + @sql3 + @sql4 + @where_clause)
END

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER PROCEDURE uspGetAgeAmountMatrix 
    @password nvarchar(255),
    @where_clause nvarchar(500)
AS
BEGIN
DECLARE @sql1 nvarchar(4000)
DECLARE @sql2 nvarchar(4000)
DECLARE @sql3 nvarchar(4000)
DECLARE @sql4 nvarchar(4000)
DECLARE @sql5 nvarchar(4000)
DECLARE @sql6 nvarchar(4000)
DECLARE @sql7 nvarchar(4000)
DECLARE @sql8 nvarchar(4000)
SET @sql1= N'SELECT
	p.company_code,
	p.underwriter_id,
	p.service_associate_id,
	p.receive_date,
	p.distributor_code,
	p.source_info,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 18 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 41 and i.underwriting_amount >= 100000 and i.underwriting_amount < 151000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_a_amount_a,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 41 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 51 and i.underwriting_amount >= 100000 and i.underwriting_amount < 151000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_b_amount_a,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 51 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 56 and i.underwriting_amount >= 100000 and i.underwriting_amount < 151000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_c_amount_a,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 56 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 61 and i.underwriting_amount >= 100000 and i.underwriting_amount < 151000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_d_amount_a,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 61 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 66 and i.underwriting_amount >= 100000 and i.underwriting_amount < 151000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_e_amount_a,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 66 and i.underwriting_amount >= 100000 and i.underwriting_amount < 151000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_f_amount_a,'
SET @sql2= N'(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 18 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 41 and i.underwriting_amount >= 151000 and i.underwriting_amount < 251000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_a_amount_b,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 41 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 51 and i.underwriting_amount >= 151000 and i.underwriting_amount < 251000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_b_amount_b,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 51 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 56 and i.underwriting_amount >= 151000 and i.underwriting_amount < 251000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_c_amount_b,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 56 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 61 and i.underwriting_amount >= 151000 and i.underwriting_amount < 251000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_d_amount_b,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 61 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 66 and i.underwriting_amount >= 151000 and i.underwriting_amount < 251000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_e_amount_b,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 66 and i.underwriting_amount >= 151000 and i.underwriting_amount < 251000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_f_amount_b,'
SET @sql3= N'(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 18 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 41 and i.underwriting_amount >= 251000 and i.underwriting_amount < 501000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_a_amount_c,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 41 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 51 and i.underwriting_amount >= 251000 and i.underwriting_amount < 501000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_b_amount_c,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 51 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 56 and i.underwriting_amount >= 251000 and i.underwriting_amount < 501000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_c_amount_c,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 56 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 61 and i.underwriting_amount >= 251000 and i.underwriting_amount < 501000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_d_amount_c,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 61 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 66 and i.underwriting_amount >= 251000 and i.underwriting_amount < 501000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_e_amount_c,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 66 and i.underwriting_amount >= 251000 and i.underwriting_amount < 501000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_f_amount_c,'
SET @sql4= N'(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 18 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 41 and i.underwriting_amount >= 501000 and i.underwriting_amount < 1001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_a_amount_d,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 41 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 51 and i.underwriting_amount >= 501000 and i.underwriting_amount < 1001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_b_amount_d,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 51 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 56 and i.underwriting_amount >= 501000 and i.underwriting_amount < 1001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_c_amount_d,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 56 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 61 and i.underwriting_amount >= 501000 and i.underwriting_amount < 1001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_d_amount_d,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 61 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 66 and i.underwriting_amount >= 501000 and i.underwriting_amount < 1001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_e_amount_d,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 66 and i.underwriting_amount >= 501000 and i.underwriting_amount < 1001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_f_amount_d,'
SET @sql5= N'(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 18 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 41 and i.underwriting_amount >= 1001000 and i.underwriting_amount < 2001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_a_amount_e,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 41 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 51 and i.underwriting_amount >= 1001000 and i.underwriting_amount < 2001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_b_amount_e,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 51 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 56 and i.underwriting_amount >= 1001000 and i.underwriting_amount < 2001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_c_amount_e,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 56 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 61 and i.underwriting_amount >= 1001000 and i.underwriting_amount < 2001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_d_amount_e,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 61 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 66 and i.underwriting_amount >= 1001000 and i.underwriting_amount < 2001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_e_amount_e,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 66 and i.underwriting_amount >= 1001000 and i.underwriting_amount < 2001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_f_amount_e,'
SET @sql6= N'(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 18 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 41 and i.underwriting_amount >= 2001000 and i.underwriting_amount < 3001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_a_amount_f,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 41 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 51 and i.underwriting_amount >= 2001000 and i.underwriting_amount < 3001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_b_amount_f,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 51 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 56 and i.underwriting_amount >= 2001000 and i.underwriting_amount < 3001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_c_amount_f,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 56 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 61 and i.underwriting_amount >= 2001000 and i.underwriting_amount < 3001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_d_amount_f,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 61 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 66 and i.underwriting_amount >= 2001000 and i.underwriting_amount < 3001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_e_amount_f,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 66 and i.underwriting_amount >= 2001000 and i.underwriting_amount < 3001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_f_amount_f,'
SET @sql7= N'(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 18 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 41 and i.underwriting_amount >= 3001000 and i.underwriting_amount < 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_a_amount_g,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 41 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 51 and i.underwriting_amount >= 3001000 and i.underwriting_amount < 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_b_amount_g,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 51 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 56 and i.underwriting_amount >= 3001000 and i.underwriting_amount < 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_c_amount_g,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 56 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 61 and i.underwriting_amount >= 3001000 and i.underwriting_amount < 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_d_amount_g,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 61 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 66 and i.underwriting_amount >= 3001000 and i.underwriting_amount < 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_e_amount_g,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 66 and i.underwriting_amount >= 3001000 and i.underwriting_amount < 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_f_amount_g,'
SET @sql8= N'(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 18 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 41 and i.underwriting_amount >= 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_a_amount_h,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 41 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 51 and i.underwriting_amount >= 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_b_amount_h,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 51 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 56 and i.underwriting_amount >= 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_c_amount_h,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 56 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 61 and i.underwriting_amount >= 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_d_amount_h,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 61 and (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) < 66 and i.underwriting_amount >= 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_e_amount_h,
	(select count(*) from insured i, (select * from tl_code where code_type = ''applicant_status'') st where (cast(CURRENT_TIMESTAMP - dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as int)/365) >= 66 and i.underwriting_amount >= 5001000 and i.policy_id = p.policy_id and i.applicant_status = st.code_id and st.external_code <> ''CN'') as age_f_amount_h,
	p.team_id
FROM
	policy p '
END
BEGIN
EXEC(@sql1 + @sql2 + @sql3 + @sql4 + @sql5 + @sql6 + @sql7 + @sql8 + @where_clause)
END

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER PROCEDURE uspGetAllApplicants 
    @password nvarchar(255),
    @where_clause nvarchar(500)
AS
BEGIN
DECLARE @sql1 nvarchar(4000)
DECLARE @sql2 nvarchar(4000)
DECLARE @sql3 nvarchar(4000)
SET @sql1= N'SELECT wrap.* FROM (SELECT     p.company_code, p.policy_number AS case_number, p.alternate_case_id AS alternate_case_number, p.receive_date, p.service_associate_id, 
      i.sex AS gender, ppi.applicant_status AS applicant_status_code,
          (SELECT     code_value
            FROM          tl_code
            WHERE      (language_code = ''en-us'') AND (code_type = ''applicant_status'') AND (code_id = ppi.applicant_status)) AS applicant_status, 
      ppi.applicant_status_date, pc.amount AS amount_applied_for, dbo.clrLSDecrypt(i.birth_date, ''' + @password + ''') as birth_date, pa.country_state_id AS residence_state_id,
          (SELECT     RTRIM(state_name) + '' ('' + RTRIM(state_code) + '')'' AS Expr1
            FROM          tl_country_state AS cs
            WHERE      (country_state_id = pa.country_state_id)) AS residence_state, cpi.final_action_date,
          (SELECT     RTRIM(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + RTRIM(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')) AS Expr1
            FROM          person AS ps INNER JOIN
                                   aus_user AS u ON ps.person_id = u.person_id
            WHERE      (u.user_id = cpi.final_action_by_id)) AS final_action_by, cpi.reason_text AS final_action_reason,
          (SELECT     reason_code
            FROM          tl_final_action_reason
            WHERE      (reason_status =
                                       (SELECT     code_value
                                         FROM          tl_code AS tl_code_1
                                         WHERE      (language_code = ''en-us'') AND (code_type = ''applicant_status'') AND (code_id = cpi.coverage_status))) AND 
                                   (reason_text = cpi.reason_text)) AS reason_code, assoc.association_name, pc.plan_code_id,
          (SELECT     description
            FROM          tl_plan_code
            WHERE      (plan_code_id = pc.plan_code_id)) AS plan_code_description, cpi.g_number, pc.planned_premium,
          (SELECT     code_value
            FROM          tl_acord_codes
            WHERE      (code_type = ''Payment Mode'') AND (code_id = p.payment_mode_code)) AS premium_mode, cpi.web_quoted_class,
          (SELECT     description
            FROM          ta_rate_table_class
            WHERE      (rulebook_id =
                                       (SELECT     TOP (1) rulebook_id
                                         FROM          rulebook_view
                                         WHERE      (plan_code_id = pc.plan_code_id) AND (association_code = p.association_code) AND (type = 0 OR
                                                                type IS NULL) OR
                                                                (plan_code_id = pc.plan_code_id) AND (type = 0 OR
                                                                type IS NULL) AND (p.association_code IS NULL))) AND (sequence_no = cpi.rate_class_quoted)) AS applied_for_rate_class,
						(SELECT     description
            FROM          ta_rate_table_class AS ta_rate_table_class_2
            WHERE      (rulebook_id =
                                       (SELECT     TOP (1) rulebook_id
                                         FROM          rulebook_view AS rulebook_view_2
                                         WHERE      (plan_code_id = pc.plan_code_id) AND (association_code = p.association_code) AND (type = 0 OR
                                                                type IS NULL) OR
                                                                (plan_code_id = pc.plan_code_id) AND (type = 0 OR
                                                                type IS NULL) AND (p.association_code IS NULL))) AND (sequence_no = cpi.rate_class_approved)) 
      				AS system_recommended_rate_class,'
SET @sql2= N'(SELECT     description
            FROM          ta_rate_table_class AS ta_rate_table_class_1
            WHERE      (rulebook_id =
                                       (SELECT     TOP (1) rulebook_id
                                         FROM          rulebook_view AS rulebook_view_1
                                         WHERE      (plan_code_id = pc.plan_code_id) AND (association_code = p.association_code) AND (type = 0 OR
                                                                type IS NULL) OR
                                                                (plan_code_id = pc.plan_code_id) AND (type = 0 OR
                                                                type IS NULL) AND (p.association_code IS NULL))) AND (sequence_no = cpi.rate_class_issued)) AS rate_class_approved, 
      pc.approved_amount AS issued_amount, pc.perm_table_rating AS table_rating, pc.perm_flat_extra_amount AS flat_extra_amount, p.cwa_amount, 
      ap.income,
          (SELECT     tobacco_use_id
            FROM          tobacco
            WHERE      (requirement_information_id = ap.requirement_information_id)) AS smoker_status, ap.occupation, 
      p.lead_number_id AS aggregator_lead_number, p.source_info,
          (SELECT     partner_id
            FROM          tl_source_info
            WHERE      (source_info = p.source_info)) AS partner_id, p.distributor_code, p.underwriter_id,
          (SELECT     RTRIM(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + RTRIM(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')) AS Expr1
            FROM          person AS ps INNER JOIN
                                   aus_user AS u ON ps.person_id = u.person_id
            WHERE      (u.user_id = p.underwriter_id)) AS underwriter_name,
          (SELECT     RTRIM(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + RTRIM(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')) AS Expr1
            FROM          person AS ps INNER JOIN
                                   aus_user AS u ON ps.person_id = u.person_id
            WHERE      (u.user_id = p.service_associate_id)) AS service_associate_name,
          (SELECT     team_name
            FROM          team AS tm
            WHERE      (team_id = p.team_id)) AS team_name,
          (SELECT     TOP (1) agent_number
            FROM          agent_view
            WHERE      (policy_id = p.policy_id)) AS agent_1_number,
          (SELECT     TOP (1) agent_number
            FROM          agent_view AS agent_view_2
            WHERE      (policy_id = p.policy_id) AND (agent_number NOT IN
                                       (SELECT     agent_number
                                         FROM          agent_view AS agent_view_1
                                         WHERE      (policy_id = p.policy_id)))) AS agent_2_number,
          (SELECT     TOP (1) agency_number
            FROM          agency_view
            WHERE      (policy_id = p.policy_id)) AS bga_agency_number, p.team_id'
SET @sql3= N' FROM         insured_application_info AS ap INNER JOIN
              policy_person_insured AS ppi INNER JOIN
              coverage_person AS cp INNER JOIN
              coverage_person_insured AS cpi ON cp.coverage_person_id = cpi.coverage_person_id INNER JOIN
              policy_coverage AS pc ON cp.policy_coverage_id = pc.policy_coverage_id INNER JOIN
              person_address AS pa RIGHT OUTER JOIN
              person AS i ON pa.person_id = i.person_id ON cp.person_id = i.person_id INNER JOIN
              team AS t RIGHT OUTER JOIN
              policy AS p ON t.team_id = p.team_id ON pc.policy_id = p.policy_id ON ppi.policy_person_id = cpi.policy_person_id ON 
              ap.policy_person_id = ppi.policy_person_id CROSS JOIN
              policy LEFT OUTER JOIN
                  (SELECT     association_code, name AS association_name
                    FROM          association
                    UNION
                    SELECT     c.company_code AS association_code, per.last_name AS association_name
                    FROM         company AS c INNER JOIN
                                          person AS per ON c.person_id = per.person_id
                    WHERE     (per.class_type = ''ASSN'') OR
                                          (per.class_type = ''GRP'')) AS assoc ON assoc.association_code = policy.association_code
WHERE     (pa.address_type_code = ''RESIDENCE'')) AS wrap '
END
BEGIN
EXEC(@sql1 + @sql2 + @sql3 + @where_clause)
END

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER PROCEDURE uspGetApplicantsByUnderwriter
    @password nvarchar(255),
    @where_clause nvarchar(500)
AS
BEGIN
DECLARE @sql1 nvarchar(4000) 
SET @sql1= N'SELECT wrap.* FROM (SELECT
	p.company_code,
	p.underwriter_id,
	p.service_associate_id,
	i.applicant_status_date,
	(select
	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
	from
	person ps, aus_user u
	where
	u.person_id = ps.person_id and u.user_id = p.underwriter_id
	) as underwriter_name,
	i.applicant_status,
	p.team_id
FROM
	policy p,
	insured i
WHERE
	i.policy_id = p.policy_id and
	p.underwriter_id is not null and
	i.applicant_status not in (select code_id from tl_code where code_type = ''applicant_status'' and external_code = ''CN'')) AS wrap '
END
BEGIN
EXEC(@sql1 + @where_clause)
END

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER PROCEDURE uspGetFinalActionStatus 
    @password nvarchar(255),
    @where_clause nvarchar(500)
AS
BEGIN
DECLARE @sql1 nvarchar(4000)
SET @sql1= N'SELECT wrap.* FROM (SELECT
	p.company_code,
	p.underwriter_id,
	p.service_associate_id,
	p.distributor_code,
	p.source_info,
	p.policy_number as case_number,
	p.alternate_case_id as alternate_case_number,
	(select code_value from tl_code where language_code = ''en-us'' and code_type = ''applicant_status'' and code_id = i.applicant_status) as applicant_status,
	(select top 1 final_action_date from insured_coverages_view where policy_person_id = i.policy_person_id) as final_action_date,
	p.team_id
FROM
	policy p,
	insured i
WHERE
	i.policy_id = p.policy_id and
	i.applicant_status in (select code_id from tl_code where code_type = ''applicant_status'' and external_code in (''AP'', ''DE'', ''RC'', ''WI''))) AS wrap '
END
BEGIN
EXEC(@sql1 + @where_clause)
END

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER PROCEDURE uspGetFinalDisposition  
    @password nvarchar(255),
    @where_clause nvarchar(500)
AS
BEGIN
DECLARE @sql1 nvarchar(4000)
SET @sql1= N'SELECT wrap.* FROM (SELECT
	p.company_code,
	p.underwriter_id,
	p.service_associate_id,
	i.applicant_status_date,
	p.distributor_code,
	p.source_info,
	(select external_code from tl_code where code_type = ''applicant_status'' and code_id = i.applicant_status) as applicant_status,
	i.underwriting_amount,
	cast(i.applicant_status_date - p.receive_date as int) as days_open,
	p.team_id
FROM
	policy p,
	insured i
WHERE
	i.policy_id = p.policy_id and
	i.applicant_status in (select code_id from tl_code where code_type = ''applicant_status'' and external_code in (''AP'', ''DE'', ''RC'', ''WI''))) AS wrap '
END
BEGIN
EXEC(@sql1 + @where_clause)
END

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER PROCEDURE uspGetNbRequirementProductivity
    @password nvarchar(255),
    @where_clause nvarchar(500)
AS
BEGIN
DECLARE @sql1 nvarchar(4000)
SET @sql1= N'SELECT wrap.* FROM (SELECT
	es.added_by as user_id,
	p.team_id,
	p.underwriter_id,
	p.service_associate_id,
	(select
	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
	from
	person ps, aus_user u
	where
	u.person_id = ps.person_id and u.user_id = es.added_by
	) as user_name,
	p.policy_number,
	ir.requirement_code,
	(select tlr.requirement_name from tl_requirement tlr where tlr.requirement_code = ir.requirement_code) as requirement_name,
	es.code as status,
	es.status_date
FROM
	policy p,
	policy_person pp,
	insured_requirement ir,
	evidence_status_view es
WHERE
	pp.policy_id = p.policy_id and
	pp.policy_person_id = ir.policy_person_id and
	ir.insured_requirement_id = es.insured_requirement_id) AS wrap '
END
BEGIN
EXEC(@sql1 + @where_clause)
END

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER PROCEDURE uspGetNbWorkTypeProductivity
    @password nvarchar(255),
    @where_clause nvarchar(500)
AS
BEGIN
DECLARE @sql1 nvarchar(4000)
SET @sql1= N'SELECT wrap.* FROM (SELECT
	es.added_by as user_id,
	p.team_id,
	p.underwriter_id,
	p.service_associate_id,
	(select
	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
	from
	person ps, aus_user u
	where
	u.person_id = ps.person_id and u.user_id = es.added_by
	) as user_name,
	p.policy_number,
	''Requirement'' as work_type,
	tlr.requirement_name as work_type_name,
	''Satisfied'' as status,
	es.status_date
FROM
	policy p,
	insured i,
	insured_requirement ir,
	tl_requirement tlr,
	evidence_status_view es
WHERE
	i.policy_id = p.policy_id and
	i.policy_person_id = ir.policy_person_id and
	ir.insured_requirement_id = es.insured_requirement_id and
	ir.requirement_code = tlr.requirement_code and
	es.code = ''Satisfied''
UNION
SELECT
	es.added_by as user_id,
	p.team_id,
	p.underwriter_id,
	p.service_associate_id,
	(select
	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
	from
	person ps, aus_user u
	where
	u.person_id = ps.person_id and u.user_id = es.added_by
	) as user_name,
	p.policy_number,
	''Requirement'' as work_type,
	tlr.requirement_name as work_type_name,
	''Added'' as status,
	es.status_date
FROM
	policy p,
	insured i,
	insured_requirement ir,
	tl_requirement tlr,
	evidence_status_view es
WHERE
	i.policy_id = p.policy_id and
	i.policy_person_id = ir.policy_person_id and
	ir.insured_requirement_id = es.insured_requirement_id and
	ir.requirement_code = tlr.requirement_code and
	es.code = ''Open''
UNION
SELECT
	n.author as user_id,
	p.team_id,
	p.underwriter_id,
	p.service_associate_id,
	(select
	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
	from
	person ps, aus_user u
	where
	u.person_id = ps.person_id and u.user_id = n.author
	) as user_name,
	p.policy_number,
	''Referral'' as work_type,
	''Referral'' as work_type_name,
	''Added'' as status,
	n.added_date as status_date
FROM
	policy p,
	insured i,
	notes n
WHERE
	i.policy_id = p.policy_id and
	i.policy_person_id = n.policy_person_id and
	n.note_type = ''Refer'' and
	n.reviewed_by is null
UNION
SELECT
	n.reviewed_by as user_id,
	p.team_id,
	p.underwriter_id,
	p.service_associate_id,
	(select
	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
	from
	person ps, aus_user u
	where
	u.person_id = ps.person_id and u.user_id = n.reviewed_by
	) as user_name,
	p.policy_number,
	''Referral'' as work_type,
	''Referral'' as work_type_name,
	''Closed'' as status,
	n.reviewed_date as status_date
FROM
	policy p,
	insured i,
	notes n
WHERE
	i.policy_id = p.policy_id and
	i.policy_person_id = n.policy_person_id and
	n.note_type = ''Refer'' and
	n.reviewed_by is not null
UNION
SELECT
	rm.checked_off_by as user_id,
	p.team_id,
	p.underwriter_id,
	p.service_associate_id,
	(select
	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
	from
	person ps, aus_user u
	where
	u.person_id = ps.person_id and u.user_id = rm.checked_off_by
	) as user_name,
	p.policy_number,
	''Review Message'' as work_type,
	''Review Message'' as work_type_name,
	''Satisfied'' as status,
	rm.check_off_date as status_date
FROM
	policy p,
	review_message rm
WHERE
	rm.policy_id = p.policy_id and
	rm.checkoff_flag is not null and
	rm.checkoff_flag <> 0 and
	rm.checked_off_by is not null) AS wrap '
END
BEGIN
EXEC(@sql1 + @where_clause)
END

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER PROCEDURE uspGetPolicyRequirements
    @password nvarchar(255),
    @where_clause nvarchar(500)
AS
BEGIN
DECLARE @sql1 nvarchar(4000)
SET @sql1= N'SELECT wrap.* FROM (SELECT
	p.company_code,
	p.underwriter_id,
	p.service_associate_id,
	p.distributor_code,
	p.source_info,
	p.policy_number as case_number,
	tlr.requirement_name,
	tc.code_value as requirement_status,
	rv.ordered_date as ordered_open_date,
	rv.schedule_date,
	rv.complete_date,
	rv.closed_date as final_status_date,
	p.team_id
FROM
	policy p,
	policy_person pp,
	requirement_view rv,
	tl_requirement tlr,
	tl_code tc
WHERE
	pp.policy_id = p.policy_id and
	rv.policy_person_id = pp.policy_person_id and
	tlr.requirement_code = rv.requirement_code and
	(rv.closed_disposition is null or
	rv.closed_disposition<> ''D'') and
	rv.ordered_date is not null and
	tc.language_code = ''en-us'' and
	tc.code_type = ''RequirementStatus'' and
	((rv.closed_disposition is null and tc.code_id = ''O'') or
	tc.code_id = rv.closed_disposition)
UNION
SELECT
	p.company_code,
	p.underwriter_id,
	p.service_associate_id,
	p.distributor_code,
	p.source_info,
	p.policy_number as case_number,
	tlr.requirement_name,
	tc.code_value as requirement_status,
	rv.added_date as ordered_open_date,
	rv.schedule_date,
	rv.complete_date,
	rv.closed_date as final_status_date,
	p.team_id
FROM
	policy p,
	policy_person pp,
	requirement_view rv,
	tl_requirement tlr,
	tl_code tc
WHERE
	pp.policy_id = p.policy_id and
	rv.policy_person_id = pp.policy_person_id and
	tlr.requirement_code = rv.requirement_code and
	(rv.closed_disposition is null or
	rv.closed_disposition<> ''D'') and
	rv.ordered_date is null and
	tc.language_code = ''en-us'' and
	tc.code_type = ''RequirementStatus'' and
	((rv.closed_disposition is null and tc.code_id = ''O'') or
	tc.code_id = rv.closed_disposition)) AS wrap '
END
BEGIN
EXEC(@sql1 + @where_clause)
END

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER PROCEDURE uspGetRequirementAging
    @password nvarchar(255),
    @where_clause nvarchar(500)
AS
BEGIN
DECLARE @sql1 nvarchar(4000)
SET @sql1= N'SELECT wrap.* FROM (SELECT
	p.underwriter_id,
	p.service_associate_id,
	p.team_id,
	(select
	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
	from
	person ps, aus_user u
	where
	u.person_id = ps.person_id and u.user_id = p.underwriter_id
	) as underwriter_name,
	(select
	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
	from
	person ps, aus_user u
	where
	u.person_id = ps.person_id and u.user_id = p.service_associate_id
	) as case_manager_name,
	(select team_name from team where team_id = p.team_id) as team_name,
	p.policy_number,
	ir.requirement_code,
	(select requirement_name from tl_requirement where requirement_code = ir.requirement_code) as requirement_name,
	ir.added_date,
	(select
	tc.code_value
	from
	tl_code tc
	where
	tc.code_type = ''RequirementStatus'' and
	tc.code_id = ir.closed_disposition or
	(ir.closed_disposition is null and tc.code_id = ''O'')
	) as requirement_status,
	(cast(CURRENT_TIMESTAMP - ir.added_date as int)) as days_aging
FROM
	policy p,
	insured i,
	insured_requirement ir
WHERE
	i.policy_id = p.policy_id and
	i.policy_person_id = ir.policy_person_id and
	(ir.closed_disposition is null or ir.closed_disposition not in (''S'', ''C'', ''W''))) AS wrap '
END
BEGIN
EXEC(@sql1 + @where_clause)
END

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER PROCEDURE uspGetUnmatchedLabs
    @password nvarchar(255),
    @where_clause nvarchar(500)
AS
BEGIN
DECLARE @sql1 nvarchar(4000)
SET @sql1= N'SELECT wrap.* FROM (SELECT
	dbo.clrLSDecrypt(first_name, ''' + @password + ''') as first_name,
	dbo.clrLSDecrypt(last_name, ''' + @password + ''') as last_name,
	dbo.clrLSDecrypt(birth_date, ''' + @password + ''') as birth_date,
	referrence_number,
	ticket_number,
	drawn_date,
	lab_receive_date,
	-1 as team_id,
	-1 as underwriter_id,
	-1 as service_associate_id
FROM
	lab_header
WHERE
	requirement_information_id not in (
	select
	requirement_information_id
	from
	insured_requirement
	where
	requirement_information_id is not null)) AS wrap '
END
BEGIN
EXEC(@sql1 + @where_clause)
END

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER PROCEDURE uspGetUwCaseProductivity
    @password nvarchar(255),
    @where_clause nvarchar(500)
AS
BEGIN
DECLARE @sql1 nvarchar(4000) 
SET @sql1= N'SELECT
	p.underwriter_id as user_id,
	p.team_id,
	p.underwriter_id,
	p.service_associate_id,
	p.receive_date,
	(select
	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
	from
	person ps, aus_user u
	where
	u.person_id = ps.person_id and u.user_id = underwriter_id
	) as user_name,
	p.policy_number,
	(select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = ''NB'') as new_business_date,
	(select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = ''FA'') as final_action_date,
	(select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = ''CLOSED'' and log_date >= (select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = ''FA'')) as closed_date,
	cast((select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = ''FA'') - (select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = ''NB'') as int) as days_nb_to_fa,
	cast((select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = ''CLOSED'' and log_date >= (select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = ''FA'')) - (select max(log_date) from policy_log where policy_id = p.policy_id and log_reason_type = 3 and log_reason_code = ''FA'') as int) as days_fa_to_closed
FROM
	policy p '
END
BEGIN
EXEC(@sql1 + @where_clause)
END

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER PROCEDURE uspGetUwReferalRvwProductivity
    @password nvarchar(255),
    @where_clause nvarchar(500)
AS
BEGIN
DECLARE @sql1 nvarchar(4000)
SET @sql1= N'SELECT wrap.* FROM (SELECT
	ir.closed_by as user_id,
	p.team_id,
	p.underwriter_id,
	p.service_associate_id,
	(select
	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
	from
	person ps, aus_user u
	where
	u.person_id = ps.person_id and u.user_id = ir.closed_by
	) as user_name,
	p.policy_number,
	(select requirement_name from tl_requirement where requirement_code = ir.requirement_code) as work_type,
	(select
	tc.code_value
	from
	tl_code tc
	where
	tc.code_type = ''RequirementStatus'' and
	tc.code_id = ir.closed_disposition or
	(ir.closed_disposition is null and tc.code_id = ''O'')
	) as status,
	ir.added_date,
	ir.closed_date
FROM
	policy p,
	insured i,
	insured_requirement ir
WHERE
	i.policy_id = p.policy_id and
	i.policy_person_id = ir.policy_person_id and
	ir.requirement_code = ''UWINITRVW'' and
	ir.closed_disposition = ''S''
UNION
SELECT
	n.author as user_id,
	p.team_id,
	p.underwriter_id,
	p.service_associate_id,
	(select
	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
	from
	person ps, aus_user u
	where
	u.person_id = ps.person_id and u.user_id = n.author
	) as user_name,
	p.policy_number,
	''Referral'' as work_type,
	''Added'' as status,
	n.added_date,
	n.reviewed_date as closed_date
FROM
	policy p,
	insured i,
	notes n
WHERE
	i.policy_id = p.policy_id and
	i.policy_person_id = n.policy_person_id and
	n.note_type = ''Refer'' and
	n.reviewed_by is null
UNION
SELECT
	n.reviewed_by as user_id,
	p.team_id,
	p.underwriter_id,
	p.service_associate_id,
	(select
	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
	from
	person ps, aus_user u
	where
	u.person_id = ps.person_id and u.user_id = n.reviewed_by
	) as user_name,
	p.policy_number,
	''Referral'' as work_type,
	''Checked-off'' as status,
	n.added_date,
	n.reviewed_date as closed_date
FROM
	policy p,
	insured i,
	notes n
WHERE
	i.policy_id = p.policy_id and
	i.policy_person_id = n.policy_person_id and
	n.note_type = ''Refer'' and
	n.reviewed_by is not null) AS wrap '
END
BEGIN
EXEC(@sql1 + @where_clause)
END

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

			ALTER PROCEDURE uspGetUwReviewMsgProductivity
    @password nvarchar(255),
    @where_clause nvarchar(500)
AS
BEGIN
DECLARE @sql1 nvarchar(4000) 
SET @sql1= N'SELECT wrap.* FROM (SELECT
	rm.checked_off_by as user_id,
	p.team_id,
	p.underwriter_id,
	p.service_associate_id,
	(select
	ltrim(rtrim(dbo.clrLSDecrypt(ps.last_name, ''' + @password + ''')) + '', '' + rtrim(dbo.clrLSDecrypt(ps.first_name, ''' + @password + ''')))
	from
	person ps, aus_user u
	where
	u.person_id = ps.person_id and u.user_id = rm.checked_off_by
	) as user_name,
	p.policy_number,
	''Checkable Review Message'' as work_type,
	rm.message,
	''Closed'' as status,
	rm.check_off_date
FROM
	policy p,
	review_message rm
WHERE
	rm.policy_id = p.policy_id and
	rm.checkoff_flag is not null and
	rm.checkoff_flag <> 0 and
	rm.checked_off_by is not null) AS wrap '
END
BEGIN
EXEC(@sql1 + @where_clause)
END

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
	    
DECLARE @ERR int

SET @ERR = @@ERROR
IF @@TRANCOUNT > 0
BEGIN
	IF @ERR > 0
		ROLLBACK TRANSACTION
	ELSE
		COMMIT TRANSACTION T1
END
SET XACT_ABORT OFF
	