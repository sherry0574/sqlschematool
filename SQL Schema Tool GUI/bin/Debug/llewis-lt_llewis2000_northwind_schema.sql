
-- DB Name: Northwind
-- Output Date: 8/25/2007
-- Output Time: 8:25 PM
-- AutoGenerated SQL: using the SQL Schema Tool.

/*
When SET XACT_ABORT is ON, if a Transact-SQL statement raises a run-time 
error, the entire transaction is terminated and rolled back. When OFF, only the 
Transact-SQL statement that raised the error is rolled back and the transaction 
continues processing. Compile errors, such as syntax errors, are not affected by 
SET XACT_ABORT.
*/

SET QUOTED_IDENTIFIER ON
SET XACT_ABORT ON
BEGIN TRANSACTION T1 WITH MARK 'Apply Create SQL'
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_Products_Categories]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Products]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Products]  
	DROP CONSTRAINT FK_Products_Categories
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Categories]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[Categories]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[Categories]
	( 	
		[CategoryID] [int]  Identity (1 ,1) NOT NULL,
		[CategoryName] [nvarchar]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
		[Description] [ntext]  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[Picture] [image]  NULL
	)   ON [PRIMARY]  TEXTIMAGE_ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[Categories]
	ALTER COLUMN [CategoryID] [int] NOT NULL
	ALTER TABLE [dbo].[Categories]
	ALTER COLUMN [CategoryName] [nvarchar]  (15) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'Categories'), N'CategoryID', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Categories]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[Categories] ADD 
	CONSTRAINT [PK_Categories] PRIMARY KEY CLUSTERED 
	(
		[CategoryID]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): CategoryID do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Categories]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [CategoryName] ON [dbo].[Categories]([CategoryName]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CustomerCustomerDemo]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[CustomerCustomerDemo]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[CustomerCustomerDemo]
	( 	
		[CustomerID] [nchar]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
		[CustomerTypeID] [nchar]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[CustomerCustomerDemo]
	ALTER COLUMN [CustomerID] [nchar]  (5) NOT NULL
	ALTER TABLE [dbo].[CustomerCustomerDemo]
	ALTER COLUMN [CustomerTypeID] [nchar]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'CustomerCustomerDemo'), N'CustomerID', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'CustomerCustomerDemo'), N'CustomerTypeID', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[CustomerCustomerDemo]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[CustomerCustomerDemo] ADD 
	CONSTRAINT [PK_CustomerCustomerDemo] PRIMARY KEY NONCLUSTERED 
	(
		[CustomerID], [CustomerTypeID]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): CustomerID, CustomerTypeID do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_CustomerCustomerDemo]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[CustomerCustomerDemo]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[CustomerCustomerDemo]  
	DROP CONSTRAINT FK_CustomerCustomerDemo
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CustomerDemographics]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[CustomerDemographics]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[CustomerDemographics]
	( 	
		[CustomerTypeID] [nchar]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
		[CustomerDesc] [ntext]  COLLATE SQL_Latin1_General_CP1_CI_AS NULL
	)   ON [PRIMARY]  TEXTIMAGE_ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[CustomerDemographics]
	ALTER COLUMN [CustomerTypeID] [nchar]  (10) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'CustomerDemographics'), N'CustomerTypeID', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[CustomerDemographics]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[CustomerDemographics] ADD 
	CONSTRAINT [PK_CustomerDemographics] PRIMARY KEY NONCLUSTERED 
	(
		[CustomerTypeID]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): CustomerTypeID do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_Orders_Customers]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Orders]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Orders]  
	DROP CONSTRAINT FK_Orders_Customers
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_CustomerCustomerDemo_Customers]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[CustomerCustomerDemo]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[CustomerCustomerDemo]  
	DROP CONSTRAINT FK_CustomerCustomerDemo_Customers
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Customers]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[Customers]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[Customers]
	( 	
		[CustomerID] [nchar]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
		[CompanyName] [nvarchar]  (40)  COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
		[ContactName] [nvarchar]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[ContactTitle] [nvarchar]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[Address] [nvarchar]  (60)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[City] [nvarchar]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[Region] [nvarchar]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[PostalCode] [nvarchar]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[Country] [nvarchar]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[Phone] [nvarchar]  (24)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[Fax] [nvarchar]  (24)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[Customers]
	ALTER COLUMN [CustomerID] [nchar]  (5) NOT NULL
	ALTER TABLE [dbo].[Customers]
	ALTER COLUMN [CompanyName] [nvarchar]  (40) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'Customers'), N'CustomerID', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Customers]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[Customers] ADD 
	CONSTRAINT [PK_Customers] PRIMARY KEY CLUSTERED 
	(
		[CustomerID]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): CustomerID do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Customers]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [City] ON [dbo].[Customers]([City]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Customers]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [CompanyName] ON [dbo].[Customers]([CompanyName]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Customers]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [PostalCode] ON [dbo].[Customers]([PostalCode]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Customers]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [Region] ON [dbo].[Customers]([Region]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_Orders_Employees]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Orders]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Orders]  
	DROP CONSTRAINT FK_Orders_Employees
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_EmployeeTerritories_Employees]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[EmployeeTerritories]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[EmployeeTerritories]  
	DROP CONSTRAINT FK_EmployeeTerritories_Employees
END
GO
	
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_Employees_Employees]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Employees]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Employees]  
	DROP CONSTRAINT FK_Employees_Employees
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Employees]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[Employees]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[Employees]
	( 	
		[EmployeeID] [int]  Identity (1 ,1) NOT NULL,
		[LastName] [nvarchar]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
		[FirstName] [nvarchar]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
		[Title] [nvarchar]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[TitleOfCourtesy] [nvarchar]  (25)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[BirthDate] [datetime]  NULL,
		[HireDate] [datetime]  NULL,
		[Address] [nvarchar]  (60)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[City] [nvarchar]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[Region] [nvarchar]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[PostalCode] [nvarchar]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[Country] [nvarchar]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[HomePhone] [nvarchar]  (24)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[Extension] [nvarchar]  (4)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[Photo] [image]  NULL,
		[Notes] [ntext]  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[ReportsTo] [int]  NULL,
		[PhotoPath] [nvarchar]  (255)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL
	)   ON [PRIMARY]  TEXTIMAGE_ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[Employees]
	ALTER COLUMN [EmployeeID] [int] NOT NULL
	ALTER TABLE [dbo].[Employees]
	ALTER COLUMN [LastName] [nvarchar]  (20) NOT NULL
	ALTER TABLE [dbo].[Employees]
	ALTER COLUMN [FirstName] [nvarchar]  (10) NOT NULL
GO


IF (SELECT OBJECT_ID(N'CK_Birthdate')) IS NULL AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Employees]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Employees] ADD 
	CONSTRAINT  [CK_Birthdate] 
	 CHECK ([BirthDate] < getdate())
END
	ELSE
		RAISERROR ('Check Constraint CK_Birthdate already exist, or the Table does not exist. Check for other errors.', 16, 1)
GO
	
IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'Employees'), N'EmployeeID', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Employees]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[Employees] ADD 
	CONSTRAINT [PK_Employees] PRIMARY KEY CLUSTERED 
	(
		[EmployeeID]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): EmployeeID do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Employees]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [LastName] ON [dbo].[Employees]([LastName]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Employees]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [PostalCode] ON [dbo].[Employees]([PostalCode]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[EmployeeTerritories]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[EmployeeTerritories]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[EmployeeTerritories]
	( 	
		[EmployeeID] [int]  NOT NULL,
		[TerritoryID] [nvarchar]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[EmployeeTerritories]
	ALTER COLUMN [EmployeeID] [int] NOT NULL
	ALTER TABLE [dbo].[EmployeeTerritories]
	ALTER COLUMN [TerritoryID] [nvarchar]  (20) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'EmployeeTerritories'), N'EmployeeID', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'EmployeeTerritories'), N'TerritoryID', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[EmployeeTerritories]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[EmployeeTerritories] ADD 
	CONSTRAINT [PK_EmployeeTerritories] PRIMARY KEY NONCLUSTERED 
	(
		[EmployeeID], [TerritoryID]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): EmployeeID, TerritoryID do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Order Details]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[Order Details]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[Order Details]
	( 	
		[OrderID] [int]  NOT NULL,
		[ProductID] [int]  NOT NULL,
		[UnitPrice] [money]  NOT NULL,
		[Quantity] [smallint]  NOT NULL,
		[Discount] [real]  NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[Order Details]
	ALTER COLUMN [OrderID] [int] NOT NULL
	ALTER TABLE [dbo].[Order Details]
	ALTER COLUMN [ProductID] [int] NOT NULL
	ALTER TABLE [dbo].[Order Details]
	ALTER COLUMN [UnitPrice] [money] NOT NULL
	ALTER TABLE [dbo].[Order Details]
	ALTER COLUMN [Quantity] [smallint] NOT NULL
	ALTER TABLE [dbo].[Order Details]
	ALTER COLUMN [Discount] [real] NOT NULL
GO


IF (SELECT OBJECT_ID(N'DF_Order_Details_UnitPrice')) IS NULL AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Order Details]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Order Details] ADD 
	CONSTRAINT  [DF_Order_Details_UnitPrice] 
	 DEFAULT (0) FOR UnitPrice
END
	ELSE
		RAISERROR ('Check Constraint DF_Order_Details_UnitPrice already exist, or the Table does not exist. Check for other errors.', 16, 1)
GO
	
IF (SELECT OBJECT_ID(N'DF_Order_Details_Quantity')) IS NULL AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Order Details]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Order Details] ADD 
	CONSTRAINT  [DF_Order_Details_Quantity] 
	 DEFAULT (1) FOR Quantity
END
	ELSE
		RAISERROR ('Check Constraint DF_Order_Details_Quantity already exist, or the Table does not exist. Check for other errors.', 16, 1)
GO
	
IF (SELECT OBJECT_ID(N'DF_Order_Details_Discount')) IS NULL AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Order Details]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Order Details] ADD 
	CONSTRAINT  [DF_Order_Details_Discount] 
	 DEFAULT (0) FOR Discount
END
	ELSE
		RAISERROR ('Check Constraint DF_Order_Details_Discount already exist, or the Table does not exist. Check for other errors.', 16, 1)
GO
	
IF (SELECT OBJECT_ID(N'CK_Discount')) IS NULL AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Order Details]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Order Details] ADD 
	CONSTRAINT  [CK_Discount] 
	 CHECK ([Discount] >= 0 and [Discount] <= 1)
END
	ELSE
		RAISERROR ('Check Constraint CK_Discount already exist, or the Table does not exist. Check for other errors.', 16, 1)
GO
	
IF (SELECT OBJECT_ID(N'CK_Quantity')) IS NULL AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Order Details]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Order Details] ADD 
	CONSTRAINT  [CK_Quantity] 
	 CHECK ([Quantity] > 0)
END
	ELSE
		RAISERROR ('Check Constraint CK_Quantity already exist, or the Table does not exist. Check for other errors.', 16, 1)
GO
	
IF (SELECT OBJECT_ID(N'CK_UnitPrice')) IS NULL AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Order Details]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Order Details] ADD 
	CONSTRAINT  [CK_UnitPrice] 
	 CHECK ([UnitPrice] >= 0)
END
	ELSE
		RAISERROR ('Check Constraint CK_UnitPrice already exist, or the Table does not exist. Check for other errors.', 16, 1)
GO
	
IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'Order Details'), N'OrderID', 'AllowsNull')) IS NOT NULL  AND   (SELECT COLUMNPROPERTY( OBJECT_ID(N'Order Details'), N'ProductID', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Order Details]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[Order Details] ADD 
	CONSTRAINT [PK_Order_Details] PRIMARY KEY CLUSTERED 
	(
		[OrderID], [ProductID]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): OrderID, ProductID do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Order Details]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [OrderID] ON [dbo].[Order Details]([OrderID]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Order Details]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [OrdersOrder_Details] ON [dbo].[Order Details]([OrderID]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Order Details]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ProductID] ON [dbo].[Order Details]([ProductID]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Order Details]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ProductsOrder_Details] ON [dbo].[Order Details]([ProductID]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_Order_Details_Orders]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Order Details]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Order Details]  
	DROP CONSTRAINT FK_Order_Details_Orders
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Orders]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[Orders]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[Orders]
	( 	
		[OrderID] [int]  Identity (1 ,1) NOT NULL,
		[CustomerID] [nchar]  (5)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[EmployeeID] [int]  NULL,
		[OrderDate] [datetime]  NULL,
		[RequiredDate] [datetime]  NULL,
		[ShippedDate] [datetime]  NULL,
		[ShipVia] [int]  NULL,
		[Freight] [money]  NULL,
		[ShipName] [nvarchar]  (40)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[ShipAddress] [nvarchar]  (60)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[ShipCity] [nvarchar]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[ShipRegion] [nvarchar]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[ShipPostalCode] [nvarchar]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[ShipCountry] [nvarchar]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[Orders]
	ALTER COLUMN [OrderID] [int] NOT NULL
GO


IF (SELECT OBJECT_ID(N'DF_Orders_Freight')) IS NULL AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Orders]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Orders] ADD 
	CONSTRAINT  [DF_Orders_Freight] 
	 DEFAULT (0) FOR Freight
END
	ELSE
		RAISERROR ('Check Constraint DF_Orders_Freight already exist, or the Table does not exist. Check for other errors.', 16, 1)
GO
	
IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'Orders'), N'OrderID', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Orders]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[Orders] ADD 
	CONSTRAINT [PK_Orders] PRIMARY KEY CLUSTERED 
	(
		[OrderID]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): OrderID do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Orders]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [CustomerID] ON [dbo].[Orders]([CustomerID]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Orders]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [CustomersOrders] ON [dbo].[Orders]([CustomerID]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Orders]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [EmployeeID] ON [dbo].[Orders]([EmployeeID]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Orders]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [EmployeesOrders] ON [dbo].[Orders]([EmployeeID]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Orders]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [OrderDate] ON [dbo].[Orders]([OrderDate]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Orders]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ShippedDate] ON [dbo].[Orders]([ShippedDate]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Orders]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ShippersOrders] ON [dbo].[Orders]([ShipVia]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Orders]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ShipPostalCode] ON [dbo].[Orders]([ShipPostalCode]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_Order_Details_Products]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Order Details]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Order Details]  
	DROP CONSTRAINT FK_Order_Details_Products
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Products]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[Products]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[Products]
	( 	
		[ProductID] [int]  Identity (1 ,1) NOT NULL,
		[ProductName] [nvarchar]  (40)  COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
		[SupplierID] [int]  NULL,
		[CategoryID] [int]  NULL,
		[QuantityPerUnit] [nvarchar]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[UnitPrice] [money]  NULL,
		[UnitsInStock] [smallint]  NULL,
		[UnitsOnOrder] [smallint]  NULL,
		[ReorderLevel] [smallint]  NULL,
		[Discontinued] [bit]  NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[Products]
	ALTER COLUMN [ProductID] [int] NOT NULL
	ALTER TABLE [dbo].[Products]
	ALTER COLUMN [ProductName] [nvarchar]  (40) NOT NULL
	ALTER TABLE [dbo].[Products]
	ALTER COLUMN [Discontinued] [bit] NOT NULL
GO


IF (SELECT OBJECT_ID(N'DF_Products_UnitPrice')) IS NULL AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Products]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Products] ADD 
	CONSTRAINT  [DF_Products_UnitPrice] 
	 DEFAULT (0) FOR UnitPrice
END
	ELSE
		RAISERROR ('Check Constraint DF_Products_UnitPrice already exist, or the Table does not exist. Check for other errors.', 16, 1)
GO
	
IF (SELECT OBJECT_ID(N'DF_Products_UnitsInStock')) IS NULL AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Products]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Products] ADD 
	CONSTRAINT  [DF_Products_UnitsInStock] 
	 DEFAULT (0) FOR UnitsInStock
END
	ELSE
		RAISERROR ('Check Constraint DF_Products_UnitsInStock already exist, or the Table does not exist. Check for other errors.', 16, 1)
GO
	
IF (SELECT OBJECT_ID(N'DF_Products_UnitsOnOrder')) IS NULL AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Products]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Products] ADD 
	CONSTRAINT  [DF_Products_UnitsOnOrder] 
	 DEFAULT (0) FOR UnitsOnOrder
END
	ELSE
		RAISERROR ('Check Constraint DF_Products_UnitsOnOrder already exist, or the Table does not exist. Check for other errors.', 16, 1)
GO
	
IF (SELECT OBJECT_ID(N'DF_Products_ReorderLevel')) IS NULL AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Products]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Products] ADD 
	CONSTRAINT  [DF_Products_ReorderLevel] 
	 DEFAULT (0) FOR ReorderLevel
END
	ELSE
		RAISERROR ('Check Constraint DF_Products_ReorderLevel already exist, or the Table does not exist. Check for other errors.', 16, 1)
GO
	
IF (SELECT OBJECT_ID(N'DF_Products_Discontinued')) IS NULL AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Products]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Products] ADD 
	CONSTRAINT  [DF_Products_Discontinued] 
	 DEFAULT (0) FOR Discontinued
END
	ELSE
		RAISERROR ('Check Constraint DF_Products_Discontinued already exist, or the Table does not exist. Check for other errors.', 16, 1)
GO
	
IF (SELECT OBJECT_ID(N'CK_Products_UnitPrice')) IS NULL AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Products]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Products] ADD 
	CONSTRAINT  [CK_Products_UnitPrice] 
	 CHECK ([UnitPrice] >= 0)
END
	ELSE
		RAISERROR ('Check Constraint CK_Products_UnitPrice already exist, or the Table does not exist. Check for other errors.', 16, 1)
GO
	
IF (SELECT OBJECT_ID(N'CK_ReorderLevel')) IS NULL AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Products]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Products] ADD 
	CONSTRAINT  [CK_ReorderLevel] 
	 CHECK ([ReorderLevel] >= 0)
END
	ELSE
		RAISERROR ('Check Constraint CK_ReorderLevel already exist, or the Table does not exist. Check for other errors.', 16, 1)
GO
	
IF (SELECT OBJECT_ID(N'CK_UnitsInStock')) IS NULL AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Products]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Products] ADD 
	CONSTRAINT  [CK_UnitsInStock] 
	 CHECK ([UnitsInStock] >= 0)
END
	ELSE
		RAISERROR ('Check Constraint CK_UnitsInStock already exist, or the Table does not exist. Check for other errors.', 16, 1)
GO
	
IF (SELECT OBJECT_ID(N'CK_UnitsOnOrder')) IS NULL AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Products]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Products] ADD 
	CONSTRAINT  [CK_UnitsOnOrder] 
	 CHECK ([UnitsOnOrder] >= 0)
END
	ELSE
		RAISERROR ('Check Constraint CK_UnitsOnOrder already exist, or the Table does not exist. Check for other errors.', 16, 1)
GO
	
IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'Products'), N'ProductID', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Products]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[Products] ADD 
	CONSTRAINT [PK_Products] PRIMARY KEY CLUSTERED 
	(
		[ProductID]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): ProductID do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Products]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [CategoriesProducts] ON [dbo].[Products]([CategoryID]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Products]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [CategoryID] ON [dbo].[Products]([CategoryID]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Products]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [ProductName] ON [dbo].[Products]([ProductName]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Products]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [SupplierID] ON [dbo].[Products]([SupplierID]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Products]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [SuppliersProducts] ON [dbo].[Products]([SupplierID]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_Territories_Region]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Territories]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Territories]  
	DROP CONSTRAINT FK_Territories_Region
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Region]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[Region]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[Region]
	( 	
		[RegionID] [int]  NOT NULL,
		[RegionDescription] [nchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[Region]
	ALTER COLUMN [RegionID] [int] NOT NULL
	ALTER TABLE [dbo].[Region]
	ALTER COLUMN [RegionDescription] [nchar]  (50) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'Region'), N'RegionID', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Region]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[Region] ADD 
	CONSTRAINT [PK_Region] PRIMARY KEY NONCLUSTERED 
	(
		[RegionID]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): RegionID do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_Orders_Shippers]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Orders]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Orders]  
	DROP CONSTRAINT FK_Orders_Shippers
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Shippers]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[Shippers]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[Shippers]
	( 	
		[ShipperID] [int]  Identity (1 ,1) NOT NULL,
		[CompanyName] [nvarchar]  (40)  COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
		[Phone] [nvarchar]  (24)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[Shippers]
	ALTER COLUMN [ShipperID] [int] NOT NULL
	ALTER TABLE [dbo].[Shippers]
	ALTER COLUMN [CompanyName] [nvarchar]  (40) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'Shippers'), N'ShipperID', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Shippers]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[Shippers] ADD 
	CONSTRAINT [PK_Shippers] PRIMARY KEY CLUSTERED 
	(
		[ShipperID]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): ShipperID do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_Products_Suppliers]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Products]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[Products]  
	DROP CONSTRAINT FK_Products_Suppliers
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Suppliers]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[Suppliers]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[Suppliers]
	( 	
		[SupplierID] [int]  Identity (1 ,1) NOT NULL,
		[CompanyName] [nvarchar]  (40)  COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
		[ContactName] [nvarchar]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[ContactTitle] [nvarchar]  (30)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[Address] [nvarchar]  (60)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[City] [nvarchar]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[Region] [nvarchar]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[PostalCode] [nvarchar]  (10)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[Country] [nvarchar]  (15)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[Phone] [nvarchar]  (24)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[Fax] [nvarchar]  (24)  COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
		[HomePage] [ntext]  COLLATE SQL_Latin1_General_CP1_CI_AS NULL
	)   ON [PRIMARY]  TEXTIMAGE_ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[Suppliers]
	ALTER COLUMN [SupplierID] [int] NOT NULL
	ALTER TABLE [dbo].[Suppliers]
	ALTER COLUMN [CompanyName] [nvarchar]  (40) NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'Suppliers'), N'SupplierID', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Suppliers]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[Suppliers] ADD 
	CONSTRAINT [PK_Suppliers] PRIMARY KEY CLUSTERED 
	(
		[SupplierID]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): SupplierID do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Suppliers]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [CompanyName] ON [dbo].[Suppliers]([CompanyName]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Suppliers]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	CREATE  INDEX [PostalCode] ON [dbo].[Suppliers]([PostalCode]) ON [PRIMARY]
END
ELSE
	RAISERROR ('Table or File Group does not exist.  Check for other errors that caused the table to not be created.', 16, 1)
	
GO
		
IF EXISTS (SELECT * FROM dbo.sysobjects where id = object_id(N'[dbo].[FK_EmployeeTerritories_Territories]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1) AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[EmployeeTerritories]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	ALTER TABLE [dbo].[EmployeeTerritories]  
	DROP CONSTRAINT FK_EmployeeTerritories_Territories
END
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Territories]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	DROP TABLE [dbo].[Territories]
END	
GO

IF (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
	CREATE TABLE [dbo].[Territories]
	( 	
		[TerritoryID] [nvarchar]  (20)  COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
		[TerritoryDescription] [nchar]  (50)  COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
		[RegionID] [int]  NOT NULL
	)   ON [PRIMARY] 
ELSE
	RAISERROR ('You will have to manually add the filegroup PRIMARY to the SQL DB or edit this SQL script to set the FileGroups to PRIMARY', 16, 1)
RETURN
GO

		--2nd pass thru after add/alter table columns to handle those columns having UDDTs or Not Nulls 
	ALTER TABLE [dbo].[Territories]
	ALTER COLUMN [TerritoryID] [nvarchar]  (20) NOT NULL
	ALTER TABLE [dbo].[Territories]
	ALTER COLUMN [TerritoryDescription] [nchar]  (50) NOT NULL
	ALTER TABLE [dbo].[Territories]
	ALTER COLUMN [RegionID] [int] NOT NULL
GO


IF (  (SELECT COLUMNPROPERTY( OBJECT_ID(N'Territories'), N'TerritoryID', 'AllowsNull')) IS NOT NULL   ) and EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[Territories]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) AND (SELECT FILEGROUP_ID('PRIMARY')) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[Territories] ADD 
	CONSTRAINT [PK_Territories] PRIMARY KEY NONCLUSTERED 
	(
		[TerritoryID]
	)  ON [PRIMARY] 
END
ELSE
	RAISERROR ('Constraint column(s): TerritoryID do(es) not exist, or Table or File Group does not exist.  Check for other errors.', 16, 1)
GO
		
IF object_id(N'Products') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'Categories'), N'CategoryID', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[Products] ADD 
	CONSTRAINT [FK_Products_Categories] FOREIGN KEY 
	(	
		[CategoryID]
	) REFERENCES [dbo].[Categories] ( 
		[CategoryID]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: Products, or the related column: CategoryID does not exist', 16, 1)
GO
	
IF object_id(N'CustomerCustomerDemo') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'CustomerDemographics'), N'CustomerTypeID', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[CustomerCustomerDemo] ADD 
	CONSTRAINT [FK_CustomerCustomerDemo] FOREIGN KEY 
	(	
		[CustomerTypeID]
	) REFERENCES [dbo].[CustomerDemographics] ( 
		[CustomerTypeID]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: CustomerCustomerDemo, or the related column: CustomerTypeID does not exist', 16, 1)
GO
	
IF object_id(N'Orders') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'Customers'), N'CustomerID', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[Orders] ADD 
	CONSTRAINT [FK_Orders_Customers] FOREIGN KEY 
	(	
		[CustomerID]
	) REFERENCES [dbo].[Customers] ( 
		[CustomerID]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: Orders, or the related column: CustomerID does not exist', 16, 1)
GO
	
IF object_id(N'CustomerCustomerDemo') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'Customers'), N'CustomerID', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[CustomerCustomerDemo] ADD 
	CONSTRAINT [FK_CustomerCustomerDemo_Customers] FOREIGN KEY 
	(	
		[CustomerID]
	) REFERENCES [dbo].[Customers] ( 
		[CustomerID]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: CustomerCustomerDemo, or the related column: CustomerID does not exist', 16, 1)
GO
	
IF object_id(N'Orders') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'Employees'), N'EmployeeID', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[Orders] ADD 
	CONSTRAINT [FK_Orders_Employees] FOREIGN KEY 
	(	
		[EmployeeID]
	) REFERENCES [dbo].[Employees] ( 
		[EmployeeID]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: Orders, or the related column: EmployeeID does not exist', 16, 1)
GO
	
IF object_id(N'EmployeeTerritories') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'Employees'), N'EmployeeID', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[EmployeeTerritories] ADD 
	CONSTRAINT [FK_EmployeeTerritories_Employees] FOREIGN KEY 
	(	
		[EmployeeID]
	) REFERENCES [dbo].[Employees] ( 
		[EmployeeID]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: EmployeeTerritories, or the related column: EmployeeID does not exist', 16, 1)
GO
	
IF object_id(N'Employees') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'Employees'), N'EmployeeID', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[Employees] ADD 
	CONSTRAINT [FK_Employees_Employees] FOREIGN KEY 
	(	
		[ReportsTo]
	) REFERENCES [dbo].[Employees] ( 
		[EmployeeID]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: Employees, or the related column: EmployeeID does not exist', 16, 1)
GO
	
IF object_id(N'Order Details') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'Orders'), N'OrderID', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[Order Details] ADD 
	CONSTRAINT [FK_Order_Details_Orders] FOREIGN KEY 
	(	
		[OrderID]
	) REFERENCES [dbo].[Orders] ( 
		[OrderID]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: Order Details, or the related column: OrderID does not exist', 16, 1)
GO
	
IF object_id(N'Order Details') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'Products'), N'ProductID', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[Order Details] ADD 
	CONSTRAINT [FK_Order_Details_Products] FOREIGN KEY 
	(	
		[ProductID]
	) REFERENCES [dbo].[Products] ( 
		[ProductID]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: Order Details, or the related column: ProductID does not exist', 16, 1)
GO
	
IF object_id(N'Territories') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'Region'), N'RegionID', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[Territories] ADD 
	CONSTRAINT [FK_Territories_Region] FOREIGN KEY 
	(	
		[RegionID]
	) REFERENCES [dbo].[Region] ( 
		[RegionID]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: Territories, or the related column: RegionID does not exist', 16, 1)
GO
	
IF object_id(N'Orders') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'Shippers'), N'ShipperID', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[Orders] ADD 
	CONSTRAINT [FK_Orders_Shippers] FOREIGN KEY 
	(	
		[ShipVia]
	) REFERENCES [dbo].[Shippers] ( 
		[ShipperID]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: Orders, or the related column: ShipperID does not exist', 16, 1)
GO
	
IF object_id(N'Products') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'Suppliers'), N'SupplierID', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[Products] ADD 
	CONSTRAINT [FK_Products_Suppliers] FOREIGN KEY 
	(	
		[SupplierID]
	) REFERENCES [dbo].[Suppliers] ( 
		[SupplierID]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: Products, or the related column: SupplierID does not exist', 16, 1)
GO
	
IF object_id(N'EmployeeTerritories') IS NOT NULL AND (SELECT COLUMNPROPERTY( object_id(N'Territories'), N'TerritoryID', 'AllowsNull') ) IS NOT NULL
BEGIN
	ALTER TABLE [dbo].[EmployeeTerritories] ADD 
	CONSTRAINT [FK_EmployeeTerritories_Territories] FOREIGN KEY 
	(	
		[TerritoryID]
	) REFERENCES [dbo].[Territories] ( 
		[TerritoryID]
	)
END
ELSE
	RAISERROR ('Constraint referenced table: EmployeeTerritories, or the related column: TerritoryID does not exist', 16, 1)
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Alphabetical list of products]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[Alphabetical list of products]
END
GO

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

create view [Alphabetical list of products] AS
SELECT Products.*, Categories.CategoryName
FROM Categories INNER JOIN Products ON Categories.CategoryID = Products.CategoryID
WHERE (((Products.Discontinued)=0))

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Current Product List]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[Current Product List]
END
GO

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

create view [Current Product List] AS
SELECT Product_List.ProductID, Product_List.ProductName
FROM Products AS Product_List
WHERE (((Product_List.Discontinued)=0))
--ORDER BY Product_List.ProductName

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Customer and Suppliers by City]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[Customer and Suppliers by City]
END
GO

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

create view [Customer and Suppliers by City] AS
SELECT City, CompanyName, ContactName, 'Customers' AS Relationship 
FROM Customers
UNION SELECT City, CompanyName, ContactName, 'Suppliers'
FROM Suppliers
--ORDER BY City, CompanyName

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Invoices]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[Invoices]
END
GO

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

create view Invoices AS
SELECT Orders.ShipName, Orders.ShipAddress, Orders.ShipCity, Orders.ShipRegion, Orders.ShipPostalCode, 
	Orders.ShipCountry, Orders.CustomerID, Customers.CompanyName AS CustomerName, Customers.Address, Customers.City, 
	Customers.Region, Customers.PostalCode, Customers.Country, 
	(FirstName + ' ' + LastName) AS Salesperson, 
	Orders.OrderID, Orders.OrderDate, Orders.RequiredDate, Orders.ShippedDate, Shippers.CompanyName As ShipperName, 
	[Order Details].ProductID, Products.ProductName, [Order Details].UnitPrice, [Order Details].Quantity, 
	[Order Details].Discount, 
	(CONVERT(money,([Order Details].UnitPrice*Quantity*(1-Discount)/100))*100) AS ExtendedPrice, Orders.Freight
FROM 	Shippers INNER JOIN 
		(Products INNER JOIN 
			(
				(Employees INNER JOIN 
					(Customers INNER JOIN Orders ON Customers.CustomerID = Orders.CustomerID) 
				ON Employees.EmployeeID = Orders.EmployeeID) 
			INNER JOIN [Order Details] ON Orders.OrderID = [Order Details].OrderID) 
		ON Products.ProductID = [Order Details].ProductID) 
	ON Shippers.ShipperID = Orders.ShipVia

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Order Details Extended]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[Order Details Extended]
END
GO

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

create view [Order Details Extended] AS
SELECT [Order Details].OrderID, [Order Details].ProductID, Products.ProductName, 
	[Order Details].UnitPrice, [Order Details].Quantity, [Order Details].Discount, 
	(CONVERT(money,([Order Details].UnitPrice*Quantity*(1-Discount)/100))*100) AS ExtendedPrice
FROM Products INNER JOIN [Order Details] ON Products.ProductID = [Order Details].ProductID
--ORDER BY [Order Details].OrderID

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Order Subtotals]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[Order Subtotals]
END
GO

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

create view [Order Subtotals] AS
SELECT [Order Details].OrderID, Sum(CONVERT(money,([Order Details].UnitPrice*Quantity*(1-Discount)/100))*100) AS Subtotal
FROM [Order Details]
GROUP BY [Order Details].OrderID

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Orders Qry]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[Orders Qry]
END
GO

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

create view [Orders Qry] AS
SELECT Orders.OrderID, Orders.CustomerID, Orders.EmployeeID, Orders.OrderDate, Orders.RequiredDate, 
	Orders.ShippedDate, Orders.ShipVia, Orders.Freight, Orders.ShipName, Orders.ShipAddress, Orders.ShipCity, 
	Orders.ShipRegion, Orders.ShipPostalCode, Orders.ShipCountry, 
	Customers.CompanyName, Customers.Address, Customers.City, Customers.Region, Customers.PostalCode, Customers.Country
FROM Customers INNER JOIN Orders ON Customers.CustomerID = Orders.CustomerID

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Product Sales for 1997]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[Product Sales for 1997]
END
GO

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

create view [Product Sales for 1997] AS
SELECT Categories.CategoryName, Products.ProductName, 
Sum(CONVERT(money,([Order Details].UnitPrice*Quantity*(1-Discount)/100))*100) AS ProductSales
FROM (Categories INNER JOIN Products ON Categories.CategoryID = Products.CategoryID) 
	INNER JOIN (Orders 
		INNER JOIN [Order Details] ON Orders.OrderID = [Order Details].OrderID) 
	ON Products.ProductID = [Order Details].ProductID
WHERE (((Orders.ShippedDate) Between '19970101' And '19971231'))
GROUP BY Categories.CategoryName, Products.ProductName

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Products Above Average Price]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[Products Above Average Price]
END
GO

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

create view [Products Above Average Price] AS
SELECT Products.ProductName, Products.UnitPrice
FROM Products
WHERE Products.UnitPrice>(SELECT AVG(UnitPrice) From Products)
--ORDER BY Products.UnitPrice DESC

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Products by Category]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[Products by Category]
END
GO

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

create view [Products by Category] AS
SELECT Categories.CategoryName, Products.ProductName, Products.QuantityPerUnit, Products.UnitsInStock, Products.Discontinued
FROM Categories INNER JOIN Products ON Categories.CategoryID = Products.CategoryID
WHERE Products.Discontinued <> 1
--ORDER BY Categories.CategoryName, Products.ProductName

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Quarterly Orders]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[Quarterly Orders]
END
GO

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

create view [Quarterly Orders] AS
SELECT DISTINCT Customers.CustomerID, Customers.CompanyName, Customers.City, Customers.Country
FROM Customers RIGHT JOIN Orders ON Customers.CustomerID = Orders.CustomerID
WHERE Orders.OrderDate BETWEEN '19970101' And '19971231'

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Category Sales for 1997]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[Category Sales for 1997]
END
GO

if ( OBJECT_ID(N'Product Sales for 1997') IS NULL OR OBJECT_ID(N'Product Sales for 1997') IS NULL  )
	BEGIN
		RAISERROR ('Required view object dependency is missing, unable to create view', 16, 1)
	END
 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

create view [Category Sales for 1997] AS
SELECT [Product Sales for 1997].CategoryName, Sum([Product Sales for 1997].ProductSales) AS CategorySales
FROM [Product Sales for 1997]
GROUP BY [Product Sales for 1997].CategoryName

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sales Totals by Amount]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[Sales Totals by Amount]
END
GO

if ( OBJECT_ID(N'Order Subtotals') IS NULL OR OBJECT_ID(N'Order Subtotals') IS NULL  )
	BEGIN
		RAISERROR ('Required view object dependency is missing, unable to create view', 16, 1)
	END
 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

create view [Sales Totals by Amount] AS
SELECT [Order Subtotals].Subtotal AS SaleAmount, Orders.OrderID, Customers.CompanyName, Orders.ShippedDate
FROM 	Customers INNER JOIN 
		(Orders INNER JOIN [Order Subtotals] ON Orders.OrderID = [Order Subtotals].OrderID) 
	ON Customers.CustomerID = Orders.CustomerID
WHERE ([Order Subtotals].Subtotal >2500) AND (Orders.ShippedDate BETWEEN '19970101' And '19971231')

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Summary of Sales by Quarter]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[Summary of Sales by Quarter]
END
GO

if ( OBJECT_ID(N'Order Subtotals') IS NULL OR OBJECT_ID(N'Order Subtotals') IS NULL  )
	BEGIN
		RAISERROR ('Required view object dependency is missing, unable to create view', 16, 1)
	END
 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

create view [Summary of Sales by Quarter] AS
SELECT Orders.ShippedDate, Orders.OrderID, [Order Subtotals].Subtotal
FROM Orders INNER JOIN [Order Subtotals] ON Orders.OrderID = [Order Subtotals].OrderID
WHERE Orders.ShippedDate IS NOT NULL
--ORDER BY Orders.ShippedDate

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Summary of Sales by Year]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[Summary of Sales by Year]
END
GO

if ( OBJECT_ID(N'Order Subtotals') IS NULL OR OBJECT_ID(N'Order Subtotals') IS NULL  )
	BEGIN
		RAISERROR ('Required view object dependency is missing, unable to create view', 16, 1)
	END
 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

create view [Summary of Sales by Year] AS
SELECT Orders.ShippedDate, Orders.OrderID, [Order Subtotals].Subtotal
FROM Orders INNER JOIN [Order Subtotals] ON Orders.OrderID = [Order Subtotals].OrderID
WHERE Orders.ShippedDate IS NOT NULL
--ORDER BY Orders.ShippedDate

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sales by Category]') and OBJECTPROPERTY(id, N'IsView') = 1)
BEGIN
	DROP VIEW [dbo].[Sales by Category]
END
GO

if ( OBJECT_ID(N'Order Details Extended') IS NULL OR OBJECT_ID(N'Order Details Extended') IS NULL OR OBJECT_ID(N'Order Details Extended') IS NULL  )
	BEGIN
		RAISERROR ('Required view object dependency is missing, unable to create view', 16, 1)
	END
 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

create view [Sales by Category] AS
SELECT Categories.CategoryID, Categories.CategoryName, Products.ProductName, 
	Sum([Order Details Extended].ExtendedPrice) AS ProductSales
FROM 	Categories INNER JOIN 
		(Products INNER JOIN 
			(Orders INNER JOIN [Order Details Extended] ON Orders.OrderID = [Order Details Extended].OrderID) 
		ON Products.ProductID = [Order Details Extended].ProductID) 
	ON Categories.CategoryID = Products.CategoryID
WHERE Orders.OrderDate BETWEEN '19970101' And '19971231'
GROUP BY Categories.CategoryID, Categories.CategoryName, Products.ProductName
--ORDER BY Products.ProductName

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CustOrderHist]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
	DROP PROCEDURE [dbo].[CustOrderHist]
END
GO

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

CREATE PROCEDURE CustOrderHist @CustomerID nchar(5)
AS
SELECT ProductName, Total=SUM(Quantity)
FROM Products P, [Order Details] OD, Orders O, Customers C
WHERE C.CustomerID = @CustomerID
AND C.CustomerID = O.CustomerID AND O.OrderID = OD.OrderID AND OD.ProductID = P.ProductID
GROUP BY ProductName

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CustOrdersDetail]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
	DROP PROCEDURE [dbo].[CustOrdersDetail]
END
GO

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

CREATE PROCEDURE CustOrdersDetail @OrderID int
AS
SELECT ProductName,
    UnitPrice=ROUND(Od.UnitPrice, 2),
    Quantity,
    Discount=CONVERT(int, Discount * 100), 
    ExtendedPrice=ROUND(CONVERT(money, Quantity * (1 - Discount) * Od.UnitPrice), 2)
FROM Products P, [Order Details] Od
WHERE Od.ProductID = P.ProductID and Od.OrderID = @OrderID

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CustOrdersOrders]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
	DROP PROCEDURE [dbo].[CustOrdersOrders]
END
GO

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

CREATE PROCEDURE CustOrdersOrders @CustomerID nchar(5)
AS
SELECT OrderID, 
	OrderDate,
	RequiredDate,
	ShippedDate
FROM Orders
WHERE CustomerID = @CustomerID
ORDER BY OrderID

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SalesByCategory]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
	DROP PROCEDURE [dbo].[SalesByCategory]
END
GO

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

CREATE PROCEDURE SalesByCategory
    @CategoryName nvarchar(15), @OrdYear nvarchar(4) = '1998'
AS
IF @OrdYear != '1996' AND @OrdYear != '1997' AND @OrdYear != '1998' 
BEGIN
	SELECT @OrdYear = '1998'
END
SELECT ProductName,
	TotalPurchase=ROUND(SUM(CONVERT(decimal(14,2), OD.Quantity * (1-OD.Discount) * OD.UnitPrice)), 0)
FROM [Order Details] OD, Orders O, Products P, Categories C
WHERE OD.OrderID = O.OrderID 
	AND OD.ProductID = P.ProductID 
	AND P.CategoryID = C.CategoryID
	AND C.CategoryName = @CategoryName
	AND SUBSTRING(CONVERT(nvarchar(22), O.OrderDate, 111), 1, 4) = @OrdYear
GROUP BY ProductName
ORDER BY ProductName

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Ten Most Expensive Products]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
	DROP PROCEDURE [dbo].[Ten Most Expensive Products]
END
GO

 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

create procedure [Ten Most Expensive Products] AS
SET ROWCOUNT 10
SELECT Products.ProductName AS TenMostExpensiveProducts, Products.UnitPrice
FROM Products
ORDER BY Products.UnitPrice DESC

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Employee Sales by Country]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
	DROP PROCEDURE [dbo].[Employee Sales by Country]
END
GO

if ( OBJECT_ID(N'Order Subtotals') IS NULL OR OBJECT_ID(N'Order Subtotals') IS NULL  )
	BEGIN
		RAISERROR ('Required procedure object dependency is missing, unable to create procedure', 16, 1)
	END
 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

create procedure [Employee Sales by Country] 
@Beginning_Date DateTime, @Ending_Date DateTime AS
SELECT Employees.Country, Employees.LastName, Employees.FirstName, Orders.ShippedDate, Orders.OrderID, [Order Subtotals].Subtotal AS SaleAmount
FROM Employees INNER JOIN 
	(Orders INNER JOIN [Order Subtotals] ON Orders.OrderID = [Order Subtotals].OrderID) 
	ON Employees.EmployeeID = Orders.EmployeeID
WHERE Orders.ShippedDate Between @Beginning_Date And @Ending_Date

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sales by Year]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
	DROP PROCEDURE [dbo].[Sales by Year]
END
GO

if ( OBJECT_ID(N'Order Subtotals') IS NULL OR OBJECT_ID(N'Order Subtotals') IS NULL  )
	BEGIN
		RAISERROR ('Required procedure object dependency is missing, unable to create procedure', 16, 1)
	END
 
SET QUOTED_IDENTIFIER, ANSI_NULLS ON 
GO

create procedure [Sales by Year] 
	@Beginning_Date DateTime, @Ending_Date DateTime AS
SELECT Orders.ShippedDate, Orders.OrderID, [Order Subtotals].Subtotal, DATENAME(yy,ShippedDate) AS Year
FROM Orders INNER JOIN [Order Subtotals] ON Orders.OrderID = [Order Subtotals].OrderID
WHERE Orders.ShippedDate Between @Beginning_Date And @Ending_Date

GO

SET QUOTED_IDENTIFIER, ANSI_NULLS OFF
GO
	

DECLARE @ERR int

SET @ERR = @@ERROR
IF @@TRANCOUNT > 0
BEGIN
	IF @ERR > 0
		ROLLBACK TRANSACTION
	ELSE
		COMMIT TRANSACTION T1
END
SET XACT_ABORT OFF
	