<DataBase_Schema>DiffData<Database><Name>Compare results for Source DB XML snapshot: llewis-lt_llewis2000_UHCTest_SCHEMA.xml,
-- with Target DB XML snapshot: llewis-lt_llewis2000_UHC_SCHEMA.xml.
-- Results are the SQL changes necessary to match
-- the Target DB schema to the Source DB schema.</Name><Date>10/15/2007</Date><Time>9:00 PM</Time></Database><TABLE Action="Alter"><TABLE_NAME>association_plan</TABLE_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_FILEGROUP><TABLE_NAME>association_plan</TABLE_NAME><groupname>PRIMARY</groupname></TABLE_FILEGROUP><TABLE_REFERENCE /><TABLE_CONSTRAINTS /><TABLE_ORIG_CONSTRAINTS /><TABLE_ORIG_REFERENCE /><TABLE_ORIG_REFERENCE><TABLE_NAME>association_plan</TABLE_NAME><PK_Table>sub_group</PK_Table><FK_Table>association_plan</FK_Table><Constraint>FK_association_plan_sub_group</Constraint><cKeyCol1>association_code</cKeyCol1><cKeyCol2>plan_code_id</cKeyCol2><cKeyCol3>sub_group_code</cKeyCol3><cRefCol1>company_code</cRefCol1><cRefCol2>plan_code_id</cRefCol2><cRefCol3>sub_group_code</cRefCol3><PK_Table_Owner>dbo</PK_Table_Owner><FK_Table_Owner>dbo</FK_Table_Owner><DeleteCascade>0</DeleteCascade><UpdateCascade>0</UpdateCascade></TABLE_ORIG_REFERENCE></TABLE><TABLE Action="Alter"><TABLE_NAME>insured_application_info</TABLE_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_FILEGROUP><TABLE_NAME>insured_application_info</TABLE_NAME><groupname>PRIMARY</groupname></TABLE_FILEGROUP><TABLE_REFERENCE /><TABLE_CONSTRAINTS /><TABLE_ORIG_CONSTRAINTS /><TABLE_ORIG_REFERENCE /><TABLE_REFERENCE><TABLE_NAME>insured_application_info</TABLE_NAME><PK_Table>tl_country</PK_Table><FK_Table>insured_application_info</FK_Table><Constraint>fk_form_ref_1047_tl_count</Constraint><cKeyCol1>residence_country</cKeyCol1><cRefCol1>country_id</cRefCol1><PK_Table_Owner>dbo</PK_Table_Owner><FK_Table_Owner>dbo</FK_Table_Owner><DeleteCascade>0</DeleteCascade><UpdateCascade>0</UpdateCascade></TABLE_REFERENCE><TABLE_REFERENCE><TABLE_NAME>insured_application_info</TABLE_NAME><PK_Table>tl_country</PK_Table><FK_Table>insured_application_info</FK_Table><Constraint>fk_form_ref_1059_tl_count</Constraint><cKeyCol1>birth_country</cKeyCol1><cRefCol1>country_id</cRefCol1><PK_Table_Owner>dbo</PK_Table_Owner><FK_Table_Owner>dbo</FK_Table_Owner><DeleteCascade>0</DeleteCascade><UpdateCascade>0</UpdateCascade></TABLE_REFERENCE><TABLE_REFERENCE><TABLE_NAME>insured_application_info</TABLE_NAME><PK_Table>tl_country</PK_Table><FK_Table>insured_application_info</FK_Table><Constraint>FK_form_REF_14466_TL_COUNT</Constraint><cKeyCol1>drivers_license_country_id</cKeyCol1><cRefCol1>country_id</cRefCol1><PK_Table_Owner>dbo</PK_Table_Owner><FK_Table_Owner>dbo</FK_Table_Owner><DeleteCascade>0</DeleteCascade><UpdateCascade>0</UpdateCascade></TABLE_REFERENCE><TABLE_REFERENCE><TABLE_NAME>insured_application_info</TABLE_NAME><PK_Table>tl_country</PK_Table><FK_Table>insured_application_info</FK_Table><Constraint>FK_form_REFERENCE_TL_COUNT</Constraint><cKeyCol1>citizenship_country_id</cKeyCol1><cRefCol1>country_id</cRefCol1><PK_Table_Owner>dbo</PK_Table_Owner><FK_Table_Owner>dbo</FK_Table_Owner><DeleteCascade>0</DeleteCascade><UpdateCascade>0</UpdateCascade></TABLE_REFERENCE></TABLE><TABLE Action="Alter"><TABLE_NAME>person</TABLE_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_FILEGROUP><TABLE_NAME>person</TABLE_NAME><groupname>PRIMARY</groupname></TABLE_FILEGROUP><TABLE_REFERENCE /><TABLE_CONSTRAINTS /><TABLE_ORIG_CONSTRAINTS /><TABLE_ORIG_REFERENCE /><TABLE_REFERENCE><TABLE_NAME>person</TABLE_NAME><PK_Table>person</PK_Table><FK_Table>subgroup</FK_Table><Constraint>FK_subgroup_person</Constraint><cKeyCol1>person_id</cKeyCol1><cRefCol1>person_id</cRefCol1><PK_Table_Owner>dbo</PK_Table_Owner><FK_Table_Owner>dbo</FK_Table_Owner><DeleteCascade>0</DeleteCascade><UpdateCascade>0</UpdateCascade></TABLE_REFERENCE></TABLE><TABLE Action="Alter"><TABLE_NAME>policy_person_insured</TABLE_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_FILEGROUP><TABLE_NAME>policy_person_insured</TABLE_NAME><groupname>PRIMARY</groupname></TABLE_FILEGROUP><TABLE_REFERENCE /><TABLE_CONSTRAINTS /><TABLE_ORIG_CONSTRAINTS /><TABLE_ORIG_REFERENCE /><TABLE_REFERENCE><TABLE_NAME>policy_person_insured</TABLE_NAME><PK_Table>tl_country</PK_Table><FK_Table>policy_person_insured</FK_Table><Constraint>FK_ppi_sci_REF_TL_COUNT</Constraint><cKeyCol1>signed_country_id</cKeyCol1><cRefCol1>country_id</cRefCol1><PK_Table_Owner>dbo</PK_Table_Owner><FK_Table_Owner>dbo</FK_Table_Owner><DeleteCascade>0</DeleteCascade><UpdateCascade>0</UpdateCascade></TABLE_REFERENCE></TABLE><TABLE Action="Add"><TABLE_NAME>subgroup</TABLE_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>TABLE</TABLE_TYPE><COLUMN><TABLE_NAME>subgroup</TABLE_NAME><Column_Name>sub_group_code</Column_Name><Type>char</Type><Base_Type>char</Base_Type><Length>10</Length><Prec>10</Prec><Scale>0</Scale><Seed>0</Seed><Increment>0</Increment><isNullable>0</isNullable><isIdentity>0</isIdentity><isComputed>0</isComputed><isRowGuidCol>0</isRowGuidCol><Default_Constraint></Default_Constraint><Default_Name></Default_Name><Rule_Name></Rule_Name><Default_Owner></Default_Owner><Default_Value></Default_Value><Rule_Owner></Rule_Owner><NotforRepl>0</NotforRepl><FullText>0</FullText><AnsiPad>1</AnsiPad><Collation>SQL_Latin1_General_CP1_CI_AI</Collation><Calc_Text></Calc_Text></COLUMN><COLUMN><TABLE_NAME>subgroup</TABLE_NAME><Column_Name>company_code</Column_Name><Type>char</Type><Base_Type>char</Base_Type><Length>10</Length><Prec>10</Prec><Scale>0</Scale><Seed>0</Seed><Increment>0</Increment><isNullable>0</isNullable><isIdentity>0</isIdentity><isComputed>0</isComputed><isRowGuidCol>0</isRowGuidCol><Default_Constraint></Default_Constraint><Default_Name></Default_Name><Rule_Name></Rule_Name><Default_Owner></Default_Owner><Default_Value></Default_Value><Rule_Owner></Rule_Owner><NotforRepl>0</NotforRepl><FullText>0</FullText><AnsiPad>1</AnsiPad><Collation>SQL_Latin1_General_CP1_CI_AI</Collation><Calc_Text></Calc_Text></COLUMN><COLUMN><TABLE_NAME>subgroup</TABLE_NAME><Column_Name>person_id</Column_Name><Type>int</Type><Base_Type>int</Base_Type><Length>4</Length><Prec>10</Prec><Scale>0</Scale><Seed>0</Seed><Increment>0</Increment><isNullable>0</isNullable><isIdentity>0</isIdentity><isComputed>0</isComputed><isRowGuidCol>0</isRowGuidCol><Default_Constraint></Default_Constraint><Default_Name></Default_Name><Rule_Name></Rule_Name><Default_Owner></Default_Owner><Default_Value></Default_Value><Rule_Owner></Rule_Owner><NotforRepl>0</NotforRepl><FullText>0</FullText><AnsiPad>0</AnsiPad><Collation></Collation><Calc_Text></Calc_Text></COLUMN><COLUMN><TABLE_NAME>subgroup</TABLE_NAME><Column_Name>subgroup_id</Column_Name><Type>int</Type><Base_Type>int</Base_Type><Length>4</Length><Prec>10</Prec><Scale>0</Scale><Seed>0</Seed><Increment>0</Increment><isNullable>0</isNullable><isIdentity>0</isIdentity><isComputed>0</isComputed><isRowGuidCol>0</isRowGuidCol><Default_Constraint></Default_Constraint><Default_Name></Default_Name><Rule_Name></Rule_Name><Default_Owner></Default_Owner><Default_Value></Default_Value><Rule_Owner></Rule_Owner><NotforRepl>0</NotforRepl><FullText>0</FullText><AnsiPad>0</AnsiPad><Collation></Collation><Calc_Text></Calc_Text></COLUMN><COLUMN><TABLE_NAME>subgroup</TABLE_NAME><Column_Name>is_using_company_address</Column_Name><Type>char</Type><Base_Type>char</Base_Type><Length>10</Length><Prec>10</Prec><Scale>0</Scale><Seed>0</Seed><Increment>0</Increment><isNullable>1</isNullable><isIdentity>0</isIdentity><isComputed>0</isComputed><isRowGuidCol>0</isRowGuidCol><Default_Constraint></Default_Constraint><Default_Name></Default_Name><Rule_Name></Rule_Name><Default_Owner></Default_Owner><Default_Value></Default_Value><Rule_Owner></Rule_Owner><NotforRepl>0</NotforRepl><FullText>0</FullText><AnsiPad>1</AnsiPad><Collation>SQL_Latin1_General_CP1_CI_AI</Collation><Calc_Text></Calc_Text></COLUMN><COLUMN><TABLE_NAME>subgroup</TABLE_NAME><Column_Name>expiration_date</Column_Name><Type>datetime</Type><Base_Type>datetime</Base_Type><Length>8</Length><Prec>23</Prec><Scale>3</Scale><Seed>0</Seed><Increment>0</Increment><isNullable>1</isNullable><isIdentity>0</isIdentity><isComputed>0</isComputed><isRowGuidCol>0</isRowGuidCol><Default_Constraint></Default_Constraint><Default_Name></Default_Name><Rule_Name></Rule_Name><Default_Owner></Default_Owner><Default_Value></Default_Value><Rule_Owner></Rule_Owner><NotforRepl>0</NotforRepl><FullText>0</FullText><AnsiPad>0</AnsiPad><Collation></Collation><Calc_Text></Calc_Text></COLUMN><TABLE_FILEGROUP><TABLE_NAME>subgroup</TABLE_NAME><groupname>PRIMARY</groupname></TABLE_FILEGROUP><TABLE_REFERENCE><TABLE_NAME>subgroup</TABLE_NAME><PK_Table>person</PK_Table><FK_Table>subgroup</FK_Table><Constraint>FK_subgroup_person</Constraint><cKeyCol1>person_id</cKeyCol1><cRefCol1>person_id</cRefCol1><PK_Table_Owner>dbo</PK_Table_Owner><FK_Table_Owner>dbo</FK_Table_Owner><DeleteCascade>0</DeleteCascade><UpdateCascade>0</UpdateCascade></TABLE_REFERENCE><TABLE_INDEX><TABLE_NAME>subgroup</TABLE_NAME><index_name>IX_subgroup_company</index_name><index_description>nonclustered, unique, unique key located on PRIMARY</index_description><index_keys>company_code, sub_group_code</index_keys></TABLE_INDEX><TABLE_INDEX><TABLE_NAME>subgroup</TABLE_NAME><index_name>IX_subgroup_person</index_name><index_description>nonclustered, unique, unique key located on PRIMARY</index_description><index_keys>person_id</index_keys></TABLE_INDEX><TABLE_INDEX><TABLE_NAME>subgroup</TABLE_NAME><index_name>PK_subgroup</index_name><index_description>clustered, unique, primary key located on PRIMARY</index_description><index_keys>subgroup_id</index_keys></TABLE_INDEX><TABLE_CONSTRAINTS><TABLE_NAME>subgroup</TABLE_NAME></TABLE_CONSTRAINTS></TABLE><TABLE Action="Alter"><TABLE_NAME>tl_country</TABLE_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_FILEGROUP><TABLE_NAME>tl_country</TABLE_NAME><groupname>PRIMARY</groupname></TABLE_FILEGROUP><TABLE_REFERENCE /><TABLE_CONSTRAINTS /><TABLE_ORIG_CONSTRAINTS /><TABLE_ORIG_REFERENCE /><TABLE_REFERENCE><TABLE_NAME>tl_country</TABLE_NAME><PK_Table>tl_country</PK_Table><FK_Table>policy_person_insured</FK_Table><Constraint>FK_ppi_sci_REF_TL_COUNT</Constraint><cKeyCol1>signed_country_id</cKeyCol1><cRefCol1>country_id</cRefCol1><PK_Table_Owner>dbo</PK_Table_Owner><FK_Table_Owner>dbo</FK_Table_Owner><DeleteCascade>0</DeleteCascade><UpdateCascade>0</UpdateCascade></TABLE_REFERENCE><TABLE_REFERENCE><TABLE_NAME>tl_country</TABLE_NAME><PK_Table>tl_country</PK_Table><FK_Table>tl_country_state</FK_Table><Constraint>FK_TL_COUNT_REF_9601_TL_COUNT</Constraint><cKeyCol1>country_id</cKeyCol1><cRefCol1>country_id</cRefCol1><PK_Table_Owner>dbo</PK_Table_Owner><FK_Table_Owner>dbo</FK_Table_Owner><DeleteCascade>0</DeleteCascade><UpdateCascade>0</UpdateCascade></TABLE_REFERENCE><TABLE_REFERENCE><TABLE_NAME>tl_country</TABLE_NAME><PK_Table>tl_country</PK_Table><FK_Table>insured_application_info</FK_Table><Constraint>fk_form_ref_1047_tl_count</Constraint><cKeyCol1>residence_country</cKeyCol1><cRefCol1>country_id</cRefCol1><PK_Table_Owner>dbo</PK_Table_Owner><FK_Table_Owner>dbo</FK_Table_Owner><DeleteCascade>0</DeleteCascade><UpdateCascade>0</UpdateCascade></TABLE_REFERENCE><TABLE_REFERENCE><TABLE_NAME>tl_country</TABLE_NAME><PK_Table>tl_country</PK_Table><FK_Table>insured_application_info</FK_Table><Constraint>fk_form_ref_1059_tl_count</Constraint><cKeyCol1>birth_country</cKeyCol1><cRefCol1>country_id</cRefCol1><PK_Table_Owner>dbo</PK_Table_Owner><FK_Table_Owner>dbo</FK_Table_Owner><DeleteCascade>0</DeleteCascade><UpdateCascade>0</UpdateCascade></TABLE_REFERENCE><TABLE_REFERENCE><TABLE_NAME>tl_country</TABLE_NAME><PK_Table>tl_country</PK_Table><FK_Table>insured_application_info</FK_Table><Constraint>FK_form_REF_14466_TL_COUNT</Constraint><cKeyCol1>drivers_license_country_id</cKeyCol1><cRefCol1>country_id</cRefCol1><PK_Table_Owner>dbo</PK_Table_Owner><FK_Table_Owner>dbo</FK_Table_Owner><DeleteCascade>0</DeleteCascade><UpdateCascade>0</UpdateCascade></TABLE_REFERENCE><TABLE_REFERENCE><TABLE_NAME>tl_country</TABLE_NAME><PK_Table>tl_country</PK_Table><FK_Table>insured_application_info</FK_Table><Constraint>FK_form_REFERENCE_TL_COUNT</Constraint><cKeyCol1>citizenship_country_id</cKeyCol1><cRefCol1>country_id</cRefCol1><PK_Table_Owner>dbo</PK_Table_Owner><FK_Table_Owner>dbo</FK_Table_Owner><DeleteCascade>0</DeleteCascade><UpdateCascade>0</UpdateCascade></TABLE_REFERENCE><TABLE_INDEX><TABLE_NAME>tl_country</TABLE_NAME><index_name>PK_TL_COUNTRY</index_name><index_description>clustered, unique, primary key located on PRIMARY</index_description><index_keys>country_id</index_keys></TABLE_INDEX></TABLE><TABLE Action="Alter"><TABLE_NAME>tl_country_state</TABLE_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_FILEGROUP><TABLE_NAME>tl_country_state</TABLE_NAME><groupname>PRIMARY</groupname></TABLE_FILEGROUP><TABLE_REFERENCE /><TABLE_CONSTRAINTS /><TABLE_ORIG_CONSTRAINTS /><TABLE_ORIG_REFERENCE /><TABLE_REFERENCE><TABLE_NAME>tl_country_state</TABLE_NAME><PK_Table>tl_country</PK_Table><FK_Table>tl_country_state</FK_Table><Constraint>FK_TL_COUNT_REF_9601_TL_COUNT</Constraint><cKeyCol1>country_id</cKeyCol1><cRefCol1>country_id</cRefCol1><PK_Table_Owner>dbo</PK_Table_Owner><FK_Table_Owner>dbo</FK_Table_Owner><DeleteCascade>0</DeleteCascade><UpdateCascade>0</UpdateCascade></TABLE_REFERENCE></TABLE><VIEW Action="Add"><VIEW_NAME>association_plan_subgroup</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1863533957</Check_Sum><CREATE_TEXT><VIEW_NAME>association_plan_subgroup</VIEW_NAME><Text>
create view association_plan_subgroup as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_plan_subgroup</VIEW_NAME><Text>select distinct association_code, sub_group_code from association_plan
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>association_plan_subgroup</VIEW_NAME><Text></Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>association_plan_subgroup</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>company_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1222912310</Check_Sum><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text>
CREATE VIEW [dbo].[company_view] AS
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> SELECT
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	  dbo.person.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.party_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.last_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.first_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.middle_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.birth_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.title
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.suffix
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.tax_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.tax_type_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.birth_date
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.sex
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.person_type_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.preferred_language_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.email_address
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.marital_status
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.client_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.alt_email_address
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.preferred_contact_mode
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.class_type
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.field1
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.field2
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.field3
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.field4
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.field5
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.person.note_collection_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.company.company_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.company.allow_aus_approval_flag
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.company.correspondence_directory
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.company.full_time_employee_count
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.company.percent_eligible_employees
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.company.percent_eligible_dependants
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.company.current_cobra_indicator
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.company.expiration_date
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.company.region_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.company.tpa_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> 	, dbo.company.carrier_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> FROM         dbo.person, dbo.company 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text> WHERE dbo.person.person_id = dbo.company.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>company_view</VIEW_NAME><Text></Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>company_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>customer_lab_report_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1401124847</Check_Sum><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>
CREATE VIEW [dbo].[customer_lab_report_view] as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> select 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>   r.lab_id_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>   r.requirement_information_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>   r.horl_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>   c.[description],
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>   r.result_value,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>   ISNULL((case when h.sex = 'm' then low_male else low_female end),'') as [low],
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>   ISNULL((case when h.sex = 'm' then high_male else high_female end),'') as [high],
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>   (case when 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	   (case when h.sex = 'm' then low_male else low_female end) = 'negative' AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	    r.result_value &lt;&gt; 'NEG' AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>       ((case when h.sex = 'm' then high_male else high_female end) IS NULL OR
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	   len(ltrim(rtrim((case when h.sex = 'm' then high_male else high_female end)))) = 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>    then r.result_value else 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>       case when
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	      ISNUMERIC(r.result_value)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	      ISNUMERIC(case when h.sex = 'm' then low_male else low_female end)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	      ISNUMERIC(case when h.sex = 'm' then high_male else high_female end)=1 AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	      CONVERT(decimal(10,5), r.result_value) NOT BETWEEN 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	      CONVERT(decimal(10,5), (case when h.sex = 'm' then low_male else low_female end)) AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	      CONVERT(decimal(10,5), (case when h.sex = 'm' then high_male else high_female end))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>       then r.result_value else 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	      case when
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		     r.result_value = 'NVG' OR 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		     ((case when h.sex = 'm' then low_male else low_female end) IS NULL AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		     (case when h.sex = 'm' then high_male else high_female end) IS NULL AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		     r.result_value &lt;&gt; 'NEG')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	      then 'NVG' else 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>             case when
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	            NOT ISNUMERIC(r.result_value)=1 AND r.result_value &lt;&gt; 'NEG' AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	            NOT ISNUMERIC(case when h.sex = 'm' then low_male else low_female end)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	            (case when h.sex = 'm' then low_male else LOW_female end) = 'negative' AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	            ISNUMERIC(case when h.sex = 'm' then high_male else high_female end)=1 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	         then r.result_value else 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	            case when
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		           ISNUMERIC(r.result_value)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		           NOT ISNUMERIC(case when h.sex = 'm' then low_male else low_female end)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	      	       (case when h.sex = 'm' then low_male else LOW_female end) = 'negative' AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		           ISNUMERIC(case when h.sex = 'm' then high_male else high_female end)=1 AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		           CONVERT(decimal(10,5), r.result_value) NOT BETWEEN 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		           0.0 AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		           CONVERT(decimal(10,5), (case when h.sex = 'm' then high_male else high_female end))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	            then r.result_value else
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		           case when r.result_value &lt;&gt; 'NEG' AND r.result_value &lt;&gt; 'POS' AND NOT ISNUMERIC(r.result_value)=1
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		           then 'N/A' else '' end
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		        end
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	         end
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	      end
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	   end
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>    end) as [abnormal],
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>   (case when 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	   (case when h.sex = 'm' then low_male else LOW_female end) = 'negative' AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	       r.result_value = 'NEG' AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>           ((case when h.sex = 'm' then high_male else high_female end) IS NULL OR
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	       len(ltrim(rtrim((case when h.sex = 'm' then high_male else high_female end)))) = 0)
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>        then r.result_value else 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>           case when
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	          ISNUMERIC(r.result_value)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	          ISNUMERIC(case when h.sex = 'm' then low_male else low_female end)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	          ISNUMERIC(case when h.sex = 'm' then high_male else high_female end)=1 AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	          CONVERT(decimal(10,5), r.result_value) BETWEEN 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	          CONVERT(decimal(10,5), (case when h.sex = 'm' then low_male else low_female end)) AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	          CONVERT(decimal(10,5), (case when h.sex = 'm' then high_male else high_female end))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>           then r.result_value else 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>              case when
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	             NOT ISNUMERIC(r.result_value)=1 AND r.result_value = 'NEG' AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	             NOT ISNUMERIC(case when h.sex = 'm' then low_male else low_female end)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	             (case when h.sex = 'm' then low_male else LOW_female end) = 'negative' AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	             ISNUMERIC(case when h.sex = 'm' then high_male else high_female end)=1 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	          then r.result_value else 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	             case when
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		            ISNUMERIC(r.result_value)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		            NOT ISNUMERIC(case when h.sex = 'm' then low_male else low_female end)=1 AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	      	        (case when h.sex = 'm' then low_male else LOW_female end) = 'negative' AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		            ISNUMERIC(case when h.sex = 'm' then high_male else high_female end)=1 AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		            CONVERT(decimal(10,5), r.result_value) BETWEEN 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		            0.0 AND 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		            CONVERT(decimal(10,5), (case when h.sex = 'm' then high_male else high_female end))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	             then r.result_value else 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>                    case when 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		               ((case when h.sex = 'm' then low_male else low_female end) IS NULL AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 		               (case when h.sex = 'm' then high_male else high_female end) IS NULL AND
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>		               r.result_value = 'NEG')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>                    then r.result_value else
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>                       '' 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>                    end
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>                 end
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>              end
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> 	       end
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>        end) as [normal],
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>        ISNULL(r.range_text, '') AS range_text
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> from dbo.lab_result as r, dbo.lab_header as h, dbo.tl_ansi_code as c
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text> where 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>   r.lab_id_number = h.lab_id_number and 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>   r.requirement_information_id = h.requirement_information_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text>   c.horl_code = r.horl_code 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>customer_lab_report_view</VIEW_NAME><Text></Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>customer_lab_report_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Add"><VIEW_NAME>lv_association_plan_subgroup</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1454199399</Check_Sum><CREATE_TEXT><VIEW_NAME>lv_association_plan_subgroup</VIEW_NAME><Text>
create view [dbo].[lv_association_plan_subgroup] as
select distinct 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_association_plan_subgroup</VIEW_NAME><Text>    'en-us' as language_code, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_association_plan_subgroup</VIEW_NAME><Text>    'association_subgroup_' + lower(ap.association_code) as code_type, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_association_plan_subgroup</VIEW_NAME><Text>    ltrim(rtrim(ap.association_code)) + ltrim(rtrim(ap.sub_group_code)) as code_id, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_association_plan_subgroup</VIEW_NAME><Text>    ap.sub_group_code as code_value, 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_association_plan_subgroup</VIEW_NAME><Text>    '' as external_code
from company c, person p, association_plan ap 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_association_plan_subgroup</VIEW_NAME><Text>where 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_association_plan_subgroup</VIEW_NAME><Text>    c.company_code = ap.association_code and 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_association_plan_subgroup</VIEW_NAME><Text>    c.person_id = p.person_id and 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_association_plan_subgroup</VIEW_NAME><Text>    (p.class_type = 'ASSN' or p.class_type = 'GRP')

</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>lv_association_plan_subgroup</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Add"><VIEW_NAME>lv_subgroup</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-251272761</Check_Sum><CREATE_TEXT><VIEW_NAME>lv_subgroup</VIEW_NAME><Text></Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_subgroup</VIEW_NAME><Text>create view lv_subgroup
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_subgroup</VIEW_NAME><Text>as
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_subgroup</VIEW_NAME><Text>select distinct 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_subgroup</VIEW_NAME><Text>      'en-us'                             as language_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_subgroup</VIEW_NAME><Text>    , 'subgroup_' + lower(c.company_code) as code_type
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_subgroup</VIEW_NAME><Text>    , cast(s.subgroup_id as char(10))     as code_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_subgroup</VIEW_NAME><Text>    , p.last_name                         as code_value
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_subgroup</VIEW_NAME><Text>    , cast(p.person_id as char(10))       as external_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_subgroup</VIEW_NAME><Text>from company c, subgroup s, person p
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_subgroup</VIEW_NAME><Text>where 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_subgroup</VIEW_NAME><Text>        s.company_code = c.company_code
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>lv_subgroup</VIEW_NAME><Text>    and p.person_id    = s.person_id
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>lv_subgroup</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Add"><VIEW_NAME>repl_person</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>909521996</Check_Sum><CREATE_TEXT><VIEW_NAME>repl_person</VIEW_NAME><Text>create view repl_person as 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>repl_person</VIEW_NAME><Text>select * from person where (person_type_id is null or person_type_id != 'Person') and person_id not in
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>repl_person</VIEW_NAME><Text>(
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>repl_person</VIEW_NAME><Text>select person_id from aus_user
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>repl_person</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>repl_person</VIEW_NAME><Text>select person_id from policy_person
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>repl_person</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>repl_person</VIEW_NAME><Text>select person_id from coverage_person
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>repl_person</VIEW_NAME><Text>union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>repl_person</VIEW_NAME><Text>select person_id from coverage_benefits_party
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>repl_person</VIEW_NAME><Text>)
</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>repl_person</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Add"><VIEW_NAME>subgroup_view</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-2024556161</Check_Sum><CREATE_TEXT><VIEW_NAME>subgroup_view</VIEW_NAME><Text>CREATE VIEW [dbo].[subgroup_view]
AS
select 
    person.person_id
    , person.party_id
    , person.last_name
    , person.first_name
    , person.middle_name
    , person.birth_name
    , person.title
    , person.suffix
    , person.tax_id
    , person</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>subgroup_view</VIEW_NAME><Text>.tax_type_id
    , person.birth_date
    , person.sex
    , person.person_type_id
    , person.preferred_language_code
    , person.email_address
    , person.marital_status
    , person.client_id
    , person.alt_email_address
    , person.preferred_cont</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>subgroup_view</VIEW_NAME><Text>act_mode
    , 'SUBGROUP' as class_type
    , person.field1
    , person.field2
    , person.field3
    , person.field4
    , person.field5
    , person.note_collection_id
    , subgroup.company_code
    , company.allow_aus_approval_flag
    , company.cor</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>subgroup_view</VIEW_NAME><Text>respondence_directory
    , company.full_time_employee_count
    , company.percent_eligible_employees
    , company.percent_eligible_dependants
    , company.current_cobra_indicator
    , subgroup.expiration_date
    , company.region_code
    , company.tp</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>subgroup_view</VIEW_NAME><Text>a_code
    , company.carrier_code
    , subgroup.sub_group_code
    , subgroup.subgroup_id
    , subgroup.is_using_company_address
from company, subgroup, person
where 
        subgroup.company_code = company.company_code
    and person.person_id = subgro</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>subgroup_view</VIEW_NAME><Text>up.person_id

</Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>subgroup_view</VIEW_NAME></VIEW_DEPENDS></VIEW><VIEW Action="Alter"><VIEW_NAME>rp_all_applicants</VIEW_NAME><TABLE_OWNER>dbo</TABLE_OWNER><TABLE_TYPE>VIEW</TABLE_TYPE><Check_Sum>-1035515030</Check_Sum><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text></Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text>CREATE VIEW rp_all_applicants as 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text>select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	p.company_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	(select assoc.association_name from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 		(select association_code, name as association_name from association where association_code not in (select c.company_code from company c, person p where c.person_id = p.person_id and (p.class_type = 'ASSN' or p.class_type = 'GRP'))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 		 union
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 		 select c.company_code as association_code ,p.last_name as association_name from company c, person p where c.person_id = p.person_id and (p.class_type = 'ASSN' or p.class_type = 'GRP')) assoc
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	 where p.association_code = assoc.association_code) as association_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	icv.g_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	i.client_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	p.policy_number as case_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	p.alternate_case_id as alternate_case_number,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	p.receive_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	p.service_associate_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	i.last_name as applicant_last_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	i.first_name as applicant_first_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text>    (select TOP 1 ltrim(rtrim(ps.last_name))as name from person ps, policy_person pp where ps.person_id = pp.person_id and pp.role_id = 'owner' and pp.policy_id = i.policy_id) as member_lastname,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text>    (select TOP 1 ltrim(rtrim(ps.first_name))as name from person ps, policy_person pp where ps.person_id = pp.person_id and pp.role_id = 'owner' and pp.policy_id = i.policy_id) as member_firstname,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	i.tax_id as applicant_ssn,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	(select TOP 1 ps.tax_id from person ps, policy_person pp where ps.person_id = pp.person_id and pp.role_id = 'owner' and pp.policy_id = i.policy_id) as member_ssn,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	i.sex as gender,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	i.applicant_status as applicant_status_code,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	(select code_value from tl_code where language_code = 'en-us' and code_type = 'applicant_status' and code_id = i.applicant_status) as applicant_status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	i.applicant_status_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	icv.amount as amount_applied_for,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	i.birth_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	(select pa.country_state_id from person_address pa
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	 where pa.address_type_code = 'RESIDENCE'
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	 and pa.person_id = i.person_id) as residence_state_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	(select ltrim(rtrim(cs.state_name)) + ' (' + ltrim(rtrim(cs.state_code)) + ')' from person_address pa, tl_country_state cs
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	 where (pa.address_type_code = 'RESIDENCE')
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	 and pa.person_id = i.person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	 and cs.country_state_id = pa.country_state_id) as residence_state,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	icv.final_action_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 		ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	 	person ps, aus_user u
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 		u.person_id = ps.person_id and u.user_id = icv.final_action_by_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	) as final_action_by,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	icv.reason_text as final_action_reason,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	(select reason_code from tl_final_action_reason where reason_status = (select code_value from tl_code where language_code = 'en-us' and code_type = 'applicant_status' and code_id = icv.coverage_status) and reason_text = icv.reason_text) as reason_code,</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text></Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	icv.plan_code_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	(select description from tl_plan_code where plan_code_id = icv.plan_code_id) as plan_code_description,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	icv.approved_amount as issued_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	(SELECT TOP 1 effective_date FROM coverage_person_insured as cpi where cpi.policy_person_id = icv.policy_person_id) as effective_date,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	(SELECT top 1 ltrim(rtrim(p.last_name)) from coverage_person_reinsurer as cpr 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 		inner join company as c on cpr.company_code = c.company_code 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 		inner join coverage_person as cp on cpr.coverage_person_id = cp.coverage_person_id 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 		inner join policy_person as pp on pp.person_id = cp.person_id 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 		inner join person as p on p.person_id = c.person_id 
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 		where pp.policy_person_id = icv.policy_person_id) as reinsurer_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	(SELECT top 1 cpr.reinsurance_amount FROM coverage_person_reinsurer as cpr inner join coverage_person as cp on cpr.coverage_person_id = cp.coverage_person_id inner join policy_person as pp on pp.person_id = cp.person_id where pp.policy_person_id = icv.p</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text>olicy_person_id) as reinsurance_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	icv.perm_table_rating as table_rating,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	icv.perm_flat_extra_amount as flat_extra_amount,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	ap.income,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	(select tobacco_use_id from tobacco where requirement_information_id = ap.requirement_information_id) as smoker_status,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	ap.occupation,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	p.underwriter_id,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 		ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	 	person ps, aus_user u
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 		u.person_id = ps.person_id and u.user_id = p.underwriter_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	) as underwriter_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 		ltrim(rtrim(ps.last_name) + ', ' + rtrim(ps.first_name))
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	 	person ps, aus_user u
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 		u.person_id = ps.person_id and u.user_id = p.service_associate_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	) as service_associate_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	(select
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 		tm.team_name
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	 from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 		team tm
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	 where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 		tm.team_id = p.team_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	) as team_name,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	p.team_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> from
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	policy p,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	insured i,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	application_info_view ap,
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	insured_coverages_view icv
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> where
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	i.policy_id = p.policy_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	ap.policy_person_id = i.policy_person_id and
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text> 	i.policy_person_id = icv.policy_person_id
</Text></CREATE_TEXT><CREATE_TEXT><VIEW_NAME>rp_all_applicants</VIEW_NAME><Text></Text></CREATE_TEXT><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>requirement_information_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>policy_person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>income</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>application_info_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>occupation</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>policy_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>last_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>first_name</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>tax_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>birth_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>sex</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>client_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>policy_person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_status</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>applicant_status_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>plan_code_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>amount</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>approved_amount</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>policy_person_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>perm_flat_extra_amount</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>perm_table_rating</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>coverage_status</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>reason_text</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>final_action_by_id</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>final_action_date</column></VIEW_DEPENDS><VIEW_DEPENDS><VIEW_NAME>rp_all_applicants</VIEW_NAME><depname>insured_coverages_view</depname><owner>dbo</owner><type>view</type><updated>no</updated><selected>no</selected><column>g_number</column></VIEW_DEPENDS></VIEW></DataBase_Schema>